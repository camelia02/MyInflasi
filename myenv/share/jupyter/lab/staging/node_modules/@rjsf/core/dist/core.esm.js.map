{"version":3,"file":"core.esm.js","sources":["../src/components/fields/ArrayField.tsx","../src/components/fields/BooleanField.tsx","../src/components/fields/MultiSchemaField.tsx","../src/components/fields/NumberField.tsx","../src/components/fields/ObjectField.tsx","../src/components/fields/SchemaField.tsx","../src/components/fields/StringField.tsx","../src/components/fields/NullField.tsx","../src/components/fields/index.ts","../src/components/templates/ArrayFieldDescriptionTemplate.tsx","../src/components/templates/ArrayFieldItemTemplate.tsx","../src/components/templates/ArrayFieldTemplate.tsx","../src/components/templates/ArrayFieldTitleTemplate.tsx","../src/components/templates/BaseInputTemplate.tsx","../src/components/templates/ButtonTemplates/SubmitButton.tsx","../src/components/templates/ButtonTemplates/IconButton.tsx","../src/components/templates/ButtonTemplates/AddButton.tsx","../src/components/templates/ButtonTemplates/index.ts","../src/components/templates/DescriptionField.tsx","../src/components/templates/ErrorList.tsx","../src/components/templates/FieldTemplate/Label.tsx","../src/components/templates/FieldTemplate/FieldTemplate.tsx","../src/components/templates/FieldErrorTemplate.tsx","../src/components/templates/FieldHelpTemplate.tsx","../src/components/templates/ObjectFieldTemplate.tsx","../src/components/templates/TitleField.tsx","../src/components/templates/UnsupportedField.tsx","../src/components/templates/WrapIfAdditionalTemplate.tsx","../src/components/templates/index.ts","../src/components/widgets/AltDateWidget.tsx","../src/components/widgets/AltDateTimeWidget.tsx","../src/components/widgets/CheckboxWidget.tsx","../src/components/widgets/CheckboxesWidget.tsx","../src/components/widgets/ColorWidget.tsx","../src/components/widgets/DateWidget.tsx","../src/components/widgets/DateTimeWidget.tsx","../src/components/widgets/EmailWidget.tsx","../src/components/widgets/FileWidget.tsx","../src/components/widgets/HiddenWidget.tsx","../src/components/widgets/PasswordWidget.tsx","../src/components/widgets/RadioWidget.tsx","../src/components/widgets/RangeWidget.tsx","../src/components/widgets/SelectWidget.tsx","../src/components/widgets/TextareaWidget.tsx","../src/components/widgets/TextWidget.tsx","../src/components/widgets/URLWidget.tsx","../src/components/widgets/UpDownWidget.tsx","../src/components/widgets/index.ts","../src/getDefaultRegistry.ts","../src/components/Form.tsx","../src/withTheme.tsx"],"sourcesContent":["import { Component, MouseEvent } from 'react';\nimport {\n  getTemplate,\n  getWidget,\n  getUiOptions,\n  isFixedItems,\n  allowAdditionalItems,\n  isCustomWidget,\n  optionsList,\n  ArrayFieldTemplateProps,\n  ErrorSchema,\n  FieldProps,\n  FormContextType,\n  IdSchema,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  UiSchema,\n  ITEMS_KEY,\n} from '@rjsf/utils';\nimport get from 'lodash/get';\nimport isObject from 'lodash/isObject';\nimport set from 'lodash/set';\nimport { nanoid } from 'nanoid';\n\n/** Type used to represent the keyed form data used in the state */\ntype KeyedFormDataType<T> = { key: string; item: T };\n\n/** Type used for the state of the `ArrayField` component */\ntype ArrayFieldState<T> = {\n  /** The keyed form data elements */\n  keyedFormData: KeyedFormDataType<T>[];\n  /** Flag indicating whether any of the keyed form data has been updated */\n  updatedKeyedFormData: boolean;\n};\n\n/** Used to generate a unique ID for an element in a row */\nfunction generateRowId() {\n  return nanoid();\n}\n\n/** Converts the `formData` into `KeyedFormDataType` data, using the `generateRowId()` function to create the key\n *\n * @param formData - The data for the form\n * @returns - The `formData` converted into a `KeyedFormDataType` element\n */\nfunction generateKeyedFormData<T>(formData: T[]): KeyedFormDataType<T>[] {\n  return !Array.isArray(formData)\n    ? []\n    : formData.map((item) => {\n        return {\n          key: generateRowId(),\n          item,\n        };\n      });\n}\n\n/** Converts `KeyedFormDataType` data into the inner `formData`\n *\n * @param keyedFormData - The `KeyedFormDataType` to be converted\n * @returns - The inner `formData` item(s) in the `keyedFormData`\n */\nfunction keyedToPlainFormData<T>(keyedFormData: KeyedFormDataType<T> | KeyedFormDataType<T>[]): T[] {\n  if (Array.isArray(keyedFormData)) {\n    return keyedFormData.map((keyedItem) => keyedItem.item);\n  }\n  return [];\n}\n\n/** The `ArrayField` component is used to render a field in the schema that is of type `array`. It supports both normal\n * and fixed array, allowing user to add and remove elements from the array data.\n */\nclass ArrayField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> extends Component<\n  FieldProps<T[], S, F>,\n  ArrayFieldState<T>\n> {\n  /** Constructs an `ArrayField` from the `props`, generating the initial keyed data from the `formData`\n   *\n   * @param props - The `FieldProps` for this template\n   */\n  constructor(props: FieldProps<T[], S, F>) {\n    super(props);\n    const { formData = [] } = props;\n    const keyedFormData = generateKeyedFormData<T>(formData);\n    this.state = {\n      keyedFormData,\n      updatedKeyedFormData: false,\n    };\n  }\n\n  /** React lifecycle method that is called when the props are about to change allowing the state to be updated. It\n   * regenerates the keyed form data and returns it\n   *\n   * @param nextProps - The next set of props data\n   * @param prevState - The previous set of state data\n   */\n  static getDerivedStateFromProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n    nextProps: Readonly<FieldProps<T[], S, F>>,\n    prevState: Readonly<ArrayFieldState<T>>\n  ) {\n    // Don't call getDerivedStateFromProps if keyed formdata was just updated.\n    if (prevState.updatedKeyedFormData) {\n      return {\n        updatedKeyedFormData: false,\n      };\n    }\n    const nextFormData = Array.isArray(nextProps.formData) ? nextProps.formData : [];\n    const previousKeyedFormData = prevState.keyedFormData || [];\n    const newKeyedFormData =\n      nextFormData.length === previousKeyedFormData.length\n        ? previousKeyedFormData.map((previousKeyedFormDatum, index) => {\n            return {\n              key: previousKeyedFormDatum.key,\n              item: nextFormData[index],\n            };\n          })\n        : generateKeyedFormData<T>(nextFormData);\n    return {\n      keyedFormData: newKeyedFormData,\n    };\n  }\n\n  /** Returns the appropriate title for an item by getting first the title from the schema.items, then falling back to\n   * the description from the schema.items, and finally the string \"Item\"\n   */\n  get itemTitle() {\n    const { schema, registry } = this.props;\n    const { translateString } = registry;\n    return get(\n      schema,\n      [ITEMS_KEY, 'title'],\n      get(schema, [ITEMS_KEY, 'description'], translateString(TranslatableString.ArrayItemTitle))\n    );\n  }\n\n  /** Determines whether the item described in the schema is always required, which is determined by whether any item\n   * may be null.\n   *\n   * @param itemSchema - The schema for the item\n   * @return - True if the item schema type does not contain the \"null\" type\n   */\n  isItemRequired(itemSchema: S) {\n    if (Array.isArray(itemSchema.type)) {\n      // While we don't yet support composite/nullable jsonschema types, it's\n      // future-proof to check for requirement against these.\n      return !itemSchema.type.includes('null');\n    }\n    // All non-null array item types are inherently required by design\n    return itemSchema.type !== 'null';\n  }\n\n  /** Determines whether more items can be added to the array. If the uiSchema indicates the array doesn't allow adding\n   * then false is returned. Otherwise, if the schema indicates that there are a maximum number of items and the\n   * `formData` matches that value, then false is returned, otherwise true is returned.\n   *\n   * @param formItems - The list of items in the form\n   * @returns - True if the item is addable otherwise false\n   */\n  canAddItem(formItems: any[]) {\n    const { schema, uiSchema } = this.props;\n    let { addable } = getUiOptions<T[], S, F>(uiSchema);\n    if (addable !== false) {\n      // if ui:options.addable was not explicitly set to false, we can add\n      // another item if we have not exceeded maxItems yet\n      if (schema.maxItems !== undefined) {\n        addable = formItems.length < schema.maxItems;\n      } else {\n        addable = true;\n      }\n    }\n    return addable;\n  }\n\n  /** Returns the default form information for an item based on the schema for that item. Deals with the possibility\n   * that the schema is fixed and allows additional items.\n   */\n  _getNewFormDataRow = (): T => {\n    const { schema, registry } = this.props;\n    const { schemaUtils } = registry;\n    let itemSchema = schema.items as S;\n    if (isFixedItems(schema) && allowAdditionalItems(schema)) {\n      itemSchema = schema.additionalItems as S;\n    }\n    // Cast this as a T to work around schema utils being for T[] caused by the FieldProps<T[], S, F> call on the class\n    return schemaUtils.getDefaultFormState(itemSchema) as unknown as T;\n  };\n\n  /** Callback handler for when the user clicks on the add or add at index buttons. Creates a new row of keyed form data\n   * either at the end of the list (when index is not specified) or inserted at the `index` when it is, adding it into\n   * the state, and then returning `onChange()` with the plain form data converted from the keyed data\n   *\n   * @param event - The event for the click\n   * @param [index] - The optional index at which to add the new data\n   */\n  _handleAddClick(event: MouseEvent, index?: number) {\n    if (event) {\n      event.preventDefault();\n    }\n\n    const { onChange } = this.props;\n    const { keyedFormData } = this.state;\n    const newKeyedFormDataRow: KeyedFormDataType<T> = {\n      key: generateRowId(),\n      item: this._getNewFormDataRow(),\n    };\n    const newKeyedFormData = [...keyedFormData];\n    if (index !== undefined) {\n      newKeyedFormData.splice(index, 0, newKeyedFormDataRow);\n    } else {\n      newKeyedFormData.push(newKeyedFormDataRow);\n    }\n    this.setState(\n      {\n        keyedFormData: newKeyedFormData,\n        updatedKeyedFormData: true,\n      },\n      () => onChange(keyedToPlainFormData(newKeyedFormData))\n    );\n  }\n\n  /** Callback handler for when the user clicks on the add button. Creates a new row of keyed form data at the end of\n   * the list, adding it into the state, and then returning `onChange()` with the plain form data converted from the\n   * keyed data\n   *\n   * @param event - The event for the click\n   */\n  onAddClick = (event: MouseEvent) => {\n    this._handleAddClick(event);\n  };\n\n  /** Callback handler for when the user clicks on the add button on an existing array element. Creates a new row of\n   * keyed form data inserted at the `index`, adding it into the state, and then returning `onChange()` with the plain\n   * form data converted from the keyed data\n   *\n   * @param index - The index at which the add button is clicked\n   */\n  onAddIndexClick = (index: number) => {\n    return (event: MouseEvent) => {\n      this._handleAddClick(event, index);\n    };\n  };\n\n  /** Callback handler for when the user clicks on the remove button on an existing array element. Removes the row of\n   * keyed form data at the `index` in the state, and then returning `onChange()` with the plain form data converted\n   * from the keyed data\n   *\n   * @param index - The index at which the remove button is clicked\n   */\n  onDropIndexClick = (index: number) => {\n    return (event: MouseEvent) => {\n      if (event) {\n        event.preventDefault();\n      }\n      const { onChange, errorSchema } = this.props;\n      const { keyedFormData } = this.state;\n      // refs #195: revalidate to ensure properly reindexing errors\n      let newErrorSchema: ErrorSchema<T>;\n      if (errorSchema) {\n        newErrorSchema = {};\n        for (const idx in errorSchema) {\n          const i = parseInt(idx);\n          if (i < index) {\n            set(newErrorSchema, [i], errorSchema[idx]);\n          } else if (i > index) {\n            set(newErrorSchema, [i - 1], errorSchema[idx]);\n          }\n        }\n      }\n      const newKeyedFormData = keyedFormData.filter((_, i) => i !== index);\n      this.setState(\n        {\n          keyedFormData: newKeyedFormData,\n          updatedKeyedFormData: true,\n        },\n        () => onChange(keyedToPlainFormData(newKeyedFormData), newErrorSchema as ErrorSchema<T[]>)\n      );\n    };\n  };\n\n  /** Callback handler for when the user clicks on one of the move item buttons on an existing array element. Moves the\n   * row of keyed form data at the `index` to the `newIndex` in the state, and then returning `onChange()` with the\n   * plain form data converted from the keyed data\n   *\n   * @param index - The index of the item to move\n   * @param newIndex - The index to where the item is to be moved\n   */\n  onReorderClick = (index: number, newIndex: number) => {\n    return (event: MouseEvent<HTMLButtonElement>) => {\n      if (event) {\n        event.preventDefault();\n        event.currentTarget.blur();\n      }\n      const { onChange, errorSchema } = this.props;\n      let newErrorSchema: ErrorSchema<T>;\n      if (errorSchema) {\n        newErrorSchema = {};\n        for (const idx in errorSchema) {\n          const i = parseInt(idx);\n          if (i == index) {\n            set(newErrorSchema, [newIndex], errorSchema[index]);\n          } else if (i == newIndex) {\n            set(newErrorSchema, [index], errorSchema[newIndex]);\n          } else {\n            set(newErrorSchema, [idx], errorSchema[i]);\n          }\n        }\n      }\n\n      const { keyedFormData } = this.state;\n      function reOrderArray() {\n        // Copy item\n        const _newKeyedFormData = keyedFormData.slice();\n\n        // Moves item from index to newIndex\n        _newKeyedFormData.splice(index, 1);\n        _newKeyedFormData.splice(newIndex, 0, keyedFormData[index]);\n\n        return _newKeyedFormData;\n      }\n      const newKeyedFormData = reOrderArray();\n      this.setState(\n        {\n          keyedFormData: newKeyedFormData,\n        },\n        () => onChange(keyedToPlainFormData(newKeyedFormData), newErrorSchema as ErrorSchema<T[]>)\n      );\n    };\n  };\n\n  /** Callback handler used to deal with changing the value of the data in the array at the `index`. Calls the\n   * `onChange` callback with the updated form data\n   *\n   * @param index - The index of the item being changed\n   */\n  onChangeForIndex = (index: number) => {\n    return (value: any, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const { formData, onChange, errorSchema } = this.props;\n      const arrayData = Array.isArray(formData) ? formData : [];\n      const newFormData = arrayData.map((item: T, i: number) => {\n        // We need to treat undefined items as nulls to have validation.\n        // See https://github.com/tdegrunt/jsonschema/issues/206\n        const jsonValue = typeof value === 'undefined' ? null : value;\n        return index === i ? jsonValue : item;\n      });\n      onChange(\n        newFormData,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [index]: newErrorSchema,\n          },\n        id\n      );\n    };\n  };\n\n  /** Callback handler used to change the value for a checkbox */\n  onSelectChange = (value: any) => {\n    const { onChange, idSchema } = this.props;\n    onChange(value, undefined, idSchema && idSchema.$id);\n  };\n\n  /** Renders the `ArrayField` depending on the specific needs of the schema and uischema elements\n   */\n  render() {\n    const { schema, uiSchema, idSchema, registry } = this.props;\n    const { schemaUtils, translateString } = registry;\n    if (!(ITEMS_KEY in schema)) {\n      const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n      const UnsupportedFieldTemplate = getTemplate<'UnsupportedFieldTemplate', T[], S, F>(\n        'UnsupportedFieldTemplate',\n        registry,\n        uiOptions\n      );\n\n      return (\n        <UnsupportedFieldTemplate\n          schema={schema}\n          idSchema={idSchema}\n          reason={translateString(TranslatableString.MissingItems)}\n          registry={registry}\n        />\n      );\n    }\n    if (schemaUtils.isMultiSelect(schema)) {\n      // If array has enum or uniqueItems set to true, call renderMultiSelect() to render the default multiselect widget or a custom widget, if specified.\n      return this.renderMultiSelect();\n    }\n    if (isCustomWidget<T[], S, F>(uiSchema)) {\n      return this.renderCustomWidget();\n    }\n    if (isFixedItems(schema)) {\n      return this.renderFixedArray();\n    }\n    if (schemaUtils.isFilesArray(schema, uiSchema)) {\n      return this.renderFiles();\n    }\n    return this.renderNormalArray();\n  }\n\n  /** Renders a normal array without any limitations of length\n   */\n  renderNormalArray() {\n    const {\n      schema,\n      uiSchema = {},\n      errorSchema,\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      registry,\n      onBlur,\n      onFocus,\n      idPrefix,\n      idSeparator = '_',\n      rawErrors,\n    } = this.props;\n    const { keyedFormData } = this.state;\n    const title = schema.title === undefined ? name : schema.title;\n    const { schemaUtils, formContext } = registry;\n    const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n    const _schemaItems: S = isObject(schema.items) ? (schema.items as S) : ({} as S);\n    const itemsSchema: S = schemaUtils.retrieveSchema(_schemaItems);\n    const formData = keyedToPlainFormData(this.state.keyedFormData);\n    const canAdd = this.canAddItem(formData);\n    const arrayProps: ArrayFieldTemplateProps<T[], S, F> = {\n      canAdd,\n      items: keyedFormData.map((keyedItem, index) => {\n        const { key, item } = keyedItem;\n        // While we are actually dealing with a single item of type T, the types require a T[], so cast\n        const itemCast = item as unknown as T[];\n        const itemSchema = schemaUtils.retrieveSchema(_schemaItems, itemCast);\n        const itemErrorSchema = errorSchema ? (errorSchema[index] as ErrorSchema<T[]>) : undefined;\n        const itemIdPrefix = idSchema.$id + idSeparator + index;\n        const itemIdSchema = schemaUtils.toIdSchema(itemSchema, itemIdPrefix, itemCast, idPrefix, idSeparator);\n        return this.renderArrayFieldItem({\n          key,\n          index,\n          name: name && `${name}-${index}`,\n          canAdd,\n          canMoveUp: index > 0,\n          canMoveDown: index < formData.length - 1,\n          itemSchema,\n          itemIdSchema,\n          itemErrorSchema,\n          itemData: itemCast,\n          itemUiSchema: uiSchema.items,\n          autofocus: autofocus && index === 0,\n          onBlur,\n          onFocus,\n          rawErrors,\n          totalItems: keyedFormData.length,\n        });\n      }),\n      className: `field field-array field-array-of-${itemsSchema.type}`,\n      disabled,\n      idSchema,\n      uiSchema,\n      onAddClick: this.onAddClick,\n      readonly,\n      required,\n      schema,\n      title,\n      formContext,\n      formData,\n      rawErrors,\n      registry,\n    };\n\n    const Template = getTemplate<'ArrayFieldTemplate', T[], S, F>('ArrayFieldTemplate', registry, uiOptions);\n    return <Template {...arrayProps} />;\n  }\n\n  /** Renders an array using the custom widget provided by the user in the `uiSchema`\n   */\n  renderCustomWidget() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      hideError,\n      placeholder,\n      onBlur,\n      onFocus,\n      formData: items = [],\n      registry,\n      rawErrors,\n      name,\n    } = this.props;\n    const { widgets, formContext } = registry;\n    const title = schema.title || name;\n\n    const { widget, ...options } = getUiOptions<T[], S, F>(uiSchema);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    return (\n      <Widget\n        id={idSchema.$id}\n        name={name}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={options}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        hideError={hideError}\n        required={required}\n        label={title}\n        placeholder={placeholder}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n\n  /** Renders an array as a set of checkboxes\n   */\n  renderMultiSelect() {\n    const {\n      schema,\n      idSchema,\n      uiSchema,\n      formData: items = [],\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      placeholder,\n      onBlur,\n      onFocus,\n      registry,\n      rawErrors,\n      name,\n    } = this.props;\n    const { widgets, schemaUtils, formContext } = registry;\n    const itemsSchema = schemaUtils.retrieveSchema(schema.items as S, items);\n    const title = schema.title || name;\n    const enumOptions = optionsList(itemsSchema);\n    const { widget = 'select', ...options } = getUiOptions<T[], S, F>(uiSchema);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    return (\n      <Widget\n        id={idSchema.$id}\n        name={name}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        options={{ ...options, enumOptions }}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        required={required}\n        label={title}\n        placeholder={placeholder}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n      />\n    );\n  }\n\n  /** Renders an array of files using the `FileWidget`\n   */\n  renderFiles() {\n    const {\n      schema,\n      uiSchema,\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      onBlur,\n      onFocus,\n      registry,\n      formData: items = [],\n      rawErrors,\n    } = this.props;\n    const title = schema.title || name;\n    const { widgets, formContext } = registry;\n    const { widget = 'files', ...options } = getUiOptions<T[], S, F>(uiSchema);\n    const Widget = getWidget<T[], S, F>(schema, widget, widgets);\n    return (\n      <Widget\n        options={options}\n        id={idSchema.$id}\n        name={name}\n        multiple\n        onChange={this.onSelectChange}\n        onBlur={onBlur}\n        onFocus={onFocus}\n        schema={schema}\n        uiSchema={uiSchema}\n        title={title}\n        value={items}\n        disabled={disabled}\n        readonly={readonly}\n        required={required}\n        registry={registry}\n        formContext={formContext}\n        autofocus={autofocus}\n        rawErrors={rawErrors}\n        label=''\n      />\n    );\n  }\n\n  /** Renders an array that has a maximum limit of items\n   */\n  renderFixedArray() {\n    const {\n      schema,\n      uiSchema = {},\n      formData = [],\n      errorSchema,\n      idPrefix,\n      idSeparator = '_',\n      idSchema,\n      name,\n      disabled = false,\n      readonly = false,\n      autofocus = false,\n      required = false,\n      registry,\n      onBlur,\n      onFocus,\n      rawErrors,\n    } = this.props;\n    const { keyedFormData } = this.state;\n    let { formData: items = [] } = this.props;\n    const title = schema.title || name;\n    const uiOptions = getUiOptions<T[], S, F>(uiSchema);\n    const { schemaUtils, formContext } = registry;\n    const _schemaItems: S[] = isObject(schema.items) ? (schema.items as S[]) : ([] as S[]);\n    const itemSchemas = _schemaItems.map((item: S, index: number) =>\n      schemaUtils.retrieveSchema(item, formData[index] as unknown as T[])\n    );\n    const additionalSchema = isObject(schema.additionalItems)\n      ? schemaUtils.retrieveSchema(schema.additionalItems as S, formData)\n      : null;\n\n    if (!items || items.length < itemSchemas.length) {\n      // to make sure at least all fixed items are generated\n      items = items || [];\n      items = items.concat(new Array(itemSchemas.length - items.length));\n    }\n\n    // These are the props passed into the render function\n    const canAdd = this.canAddItem(items) && !!additionalSchema;\n    const arrayProps: ArrayFieldTemplateProps<T[], S, F> = {\n      canAdd,\n      className: 'field field-array field-array-fixed-items',\n      disabled,\n      idSchema,\n      formData,\n      items: keyedFormData.map((keyedItem, index) => {\n        const { key, item } = keyedItem;\n        // While we are actually dealing with a single item of type T, the types require a T[], so cast\n        const itemCast = item as unknown as T[];\n        const additional = index >= itemSchemas.length;\n        const itemSchema =\n          additional && isObject(schema.additionalItems)\n            ? schemaUtils.retrieveSchema(schema.additionalItems as S, itemCast)\n            : itemSchemas[index];\n        const itemIdPrefix = idSchema.$id + idSeparator + index;\n        const itemIdSchema = schemaUtils.toIdSchema(itemSchema, itemIdPrefix, itemCast, idPrefix, idSeparator);\n        const itemUiSchema = additional\n          ? uiSchema.additionalItems || {}\n          : Array.isArray(uiSchema.items)\n          ? uiSchema.items[index]\n          : uiSchema.items || {};\n        const itemErrorSchema = errorSchema ? (errorSchema[index] as ErrorSchema<T[]>) : undefined;\n\n        return this.renderArrayFieldItem({\n          key,\n          index,\n          name: name && `${name}-${index}`,\n          canAdd,\n          canRemove: additional,\n          canMoveUp: index >= itemSchemas.length + 1,\n          canMoveDown: additional && index < items.length - 1,\n          itemSchema,\n          itemData: itemCast,\n          itemUiSchema,\n          itemIdSchema,\n          itemErrorSchema,\n          autofocus: autofocus && index === 0,\n          onBlur,\n          onFocus,\n          rawErrors,\n          totalItems: keyedFormData.length,\n        });\n      }),\n      onAddClick: this.onAddClick,\n      readonly,\n      required,\n      registry,\n      schema,\n      uiSchema,\n      title,\n      formContext,\n      rawErrors,\n    };\n\n    const Template = getTemplate<'ArrayFieldTemplate', T[], S, F>('ArrayFieldTemplate', registry, uiOptions);\n    return <Template {...arrayProps} />;\n  }\n\n  /** Renders the individual array item using a `SchemaField` along with the additional properties required to be send\n   * back to the `ArrayFieldItemTemplate`.\n   *\n   * @param props - The props for the individual array item to be rendered\n   */\n  renderArrayFieldItem(props: {\n    key: string;\n    index: number;\n    name: string;\n    canAdd: boolean;\n    canRemove?: boolean;\n    canMoveUp?: boolean;\n    canMoveDown?: boolean;\n    itemSchema: S;\n    itemData: T[];\n    itemUiSchema: UiSchema<T[], S, F>;\n    itemIdSchema: IdSchema<T[]>;\n    itemErrorSchema?: ErrorSchema<T[]>;\n    autofocus?: boolean;\n    onBlur: FieldProps<T[], S, F>['onBlur'];\n    onFocus: FieldProps<T[], S, F>['onFocus'];\n    rawErrors?: string[];\n    totalItems: number;\n  }) {\n    const {\n      key,\n      index,\n      name,\n      canAdd,\n      canRemove = true,\n      canMoveUp = true,\n      canMoveDown = true,\n      itemSchema,\n      itemData,\n      itemUiSchema,\n      itemIdSchema,\n      itemErrorSchema,\n      autofocus,\n      onBlur,\n      onFocus,\n      rawErrors,\n      totalItems,\n    } = props;\n    const { disabled, hideError, idPrefix, idSeparator, readonly, uiSchema, registry, formContext } = this.props;\n    const {\n      fields: { ArraySchemaField, SchemaField },\n    } = registry;\n    const ItemSchemaField = ArraySchemaField || SchemaField;\n    const { orderable = true, removable = true } = getUiOptions<T[], S, F>(uiSchema);\n    const has: { [key: string]: boolean } = {\n      moveUp: orderable && canMoveUp,\n      moveDown: orderable && canMoveDown,\n      remove: removable && canRemove,\n      toolbar: false,\n    };\n    has.toolbar = Object.keys(has).some((key: keyof typeof has) => has[key]);\n\n    return {\n      children: (\n        <ItemSchemaField\n          name={name}\n          index={index}\n          schema={itemSchema}\n          uiSchema={itemUiSchema}\n          formData={itemData}\n          formContext={formContext}\n          errorSchema={itemErrorSchema}\n          idPrefix={idPrefix}\n          idSeparator={idSeparator}\n          idSchema={itemIdSchema}\n          required={this.isItemRequired(itemSchema)}\n          onChange={this.onChangeForIndex(index)}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          registry={registry}\n          disabled={disabled}\n          readonly={readonly}\n          hideError={hideError}\n          autofocus={autofocus}\n          rawErrors={rawErrors}\n        />\n      ),\n      className: 'array-item',\n      disabled,\n      canAdd,\n      hasToolbar: has.toolbar,\n      hasMoveUp: has.moveUp,\n      hasMoveDown: has.moveDown,\n      hasRemove: has.remove,\n      index,\n      totalItems,\n      key,\n      onAddIndexClick: this.onAddIndexClick,\n      onDropIndexClick: this.onDropIndexClick,\n      onReorderClick: this.onReorderClick,\n      readonly,\n      registry,\n      schema: itemSchema,\n      uiSchema: itemUiSchema,\n    };\n  }\n}\n\n/** `ArrayField` is `React.ComponentType<FieldProps<T[], S, F>>` (necessarily) but the `registry` requires things to be a\n * `Field` which is defined as `React.ComponentType<FieldProps<T, S, F>>`, so cast it to make `registry` happy.\n */\nexport default ArrayField;\n","import {\n  getWidget,\n  getUiOptions,\n  optionsList,\n  FieldProps,\n  FormContextType,\n  EnumOptionsType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n} from '@rjsf/utils';\nimport isObject from 'lodash/isObject';\n\n/** The `BooleanField` component is used to render a field in the schema is boolean. It constructs `enumOptions` for the\n * two boolean values based on the various alternatives in the schema.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction BooleanField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    registry,\n    required,\n    disabled,\n    readonly,\n    autofocus,\n    onChange,\n    onFocus,\n    onBlur,\n    rawErrors,\n  } = props;\n  const { title } = schema;\n  const { widgets, formContext, translateString } = registry;\n  const { widget = 'checkbox', ...options } = getUiOptions<T, S, F>(uiSchema);\n  const Widget = getWidget(schema, widget, widgets);\n  const yes = translateString(TranslatableString.YesLabel);\n  const no = translateString(TranslatableString.NoLabel);\n\n  let enumOptions: EnumOptionsType<S>[] | undefined;\n\n  if (Array.isArray(schema.oneOf)) {\n    enumOptions = optionsList<S>({\n      oneOf: schema.oneOf\n        .map((option) => {\n          if (isObject(option)) {\n            return {\n              ...option,\n              title: option.title || (option.const === true ? yes : no),\n            };\n          }\n          return undefined;\n        })\n        .filter((o: any) => o) as S[], // cast away the error that typescript can't grok is fixed\n    } as unknown as S);\n  } else {\n    // We deprecated enumNames in v5. It's intentionally omitted from RSJFSchema type, so we need to cast here.\n    const schemaWithEnumNames = schema as S & { enumNames?: string[] };\n    const enums = schema.enum ?? [true, false];\n    if (!schemaWithEnumNames.enumNames && enums.length === 2 && enums.every((v: any) => typeof v === 'boolean')) {\n      enumOptions = [\n        {\n          value: enums[0],\n          label: enums[0] ? yes : no,\n        },\n        {\n          value: enums[1],\n          label: enums[1] ? yes : no,\n        },\n      ];\n    } else {\n      enumOptions = optionsList<S>({\n        enum: enums,\n        // NOTE: enumNames is deprecated, but still supported for now.\n        enumNames: schemaWithEnumNames.enumNames,\n      } as unknown as S);\n    }\n  }\n\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      uiSchema={uiSchema}\n      id={idSchema.$id}\n      name={name}\n      onChange={onChange}\n      onFocus={onFocus}\n      onBlur={onBlur}\n      label={title === undefined ? name : title}\n      value={formData}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      registry={registry}\n      formContext={formContext}\n      autofocus={autofocus}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nexport default BooleanField;\n","import { Component } from 'react';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport omit from 'lodash/omit';\nimport {\n  deepEquals,\n  ERRORS_KEY,\n  FieldProps,\n  FormContextType,\n  getUiOptions,\n  getWidget,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n} from '@rjsf/utils';\n\n/** Type used for the state of the `AnyOfField` component */\ntype AnyOfFieldState<S extends StrictRJSFSchema = RJSFSchema> = {\n  /** The currently selected option */\n  selectedOption: number;\n  /* The option schemas after retrieving all $refs */\n  retrievedOptions: S[];\n};\n\n/** The `AnyOfField` component is used to render a field in the schema that is an `anyOf`, `allOf` or `oneOf`. It tracks\n * the currently selected option and cleans up any irrelevant data in `formData`.\n *\n * @param props - The `FieldProps` for this template\n */\nclass AnyOfField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> extends Component<\n  FieldProps<T, S, F>,\n  AnyOfFieldState<S>\n> {\n  /** Constructs an `AnyOfField` with the given `props` to initialize the initially selected option in state\n   *\n   * @param props - The `FieldProps` for this template\n   */\n  constructor(props: FieldProps<T, S, F>) {\n    super(props);\n\n    const {\n      formData,\n      options,\n      registry: { schemaUtils },\n    } = this.props;\n    // cache the retrieved options in state in case they have $refs to save doing it later\n    const retrievedOptions = options.map((opt: S) => schemaUtils.retrieveSchema(opt, formData));\n\n    this.state = {\n      retrievedOptions,\n      selectedOption: this.getMatchingOption(0, formData, retrievedOptions),\n    };\n  }\n\n  /** React lifecycle method that is called when the props and/or state for this component is updated. It recomputes the\n   * currently selected option based on the overall `formData`\n   *\n   * @param prevProps - The previous `FieldProps` for this template\n   * @param prevState - The previous `AnyOfFieldState` for this template\n   */\n  componentDidUpdate(prevProps: Readonly<FieldProps<T, S, F>>, prevState: Readonly<AnyOfFieldState>) {\n    const { formData, options, idSchema } = this.props;\n    const { selectedOption } = this.state;\n    let newState = this.state;\n    if (!deepEquals(prevProps.options, options)) {\n      const {\n        registry: { schemaUtils },\n      } = this.props;\n      // re-cache the retrieved options in state in case they have $refs to save doing it later\n      const retrievedOptions = options.map((opt: S) => schemaUtils.retrieveSchema(opt, formData));\n      newState = { selectedOption, retrievedOptions };\n    }\n    if (!deepEquals(formData, prevProps.formData) && idSchema.$id === prevProps.idSchema.$id) {\n      const { retrievedOptions } = newState;\n      const matchingOption = this.getMatchingOption(selectedOption, formData, retrievedOptions);\n\n      if (prevState && matchingOption !== selectedOption) {\n        newState = { selectedOption: matchingOption, retrievedOptions };\n      }\n    }\n    if (newState !== this.state) {\n      this.setState(newState);\n    }\n  }\n\n  /** Determines the best matching option for the given `formData` and `options`.\n   *\n   * @param formData - The new formData\n   * @param options - The list of options to choose from\n   * @return - The index of the `option` that best matches the `formData`\n   */\n  getMatchingOption(selectedOption: number, formData: T | undefined, options: S[]) {\n    const { schemaUtils } = this.props.registry;\n\n    const option = schemaUtils.getClosestMatchingOption(formData, options, selectedOption);\n    if (option > 0) {\n      return option;\n    }\n    // If the form data matches none of the options, use the currently selected\n    // option, assuming it's available; otherwise use the first option\n    return selectedOption || 0;\n  }\n\n  /** Callback handler to remember what the currently selected option is. In addition to that the `formData` is updated\n   * to remove properties that are not part of the newly selected option schema, and then the updated data is passed to\n   * the `onChange` handler.\n   *\n   * @param option - The new option value being selected\n   */\n  onOptionChange = (option?: string) => {\n    const { selectedOption, retrievedOptions } = this.state;\n    const { formData, onChange, registry } = this.props;\n    const { schemaUtils } = registry;\n    const intOption = option !== undefined ? parseInt(option, 10) : -1;\n    if (intOption === selectedOption) {\n      return;\n    }\n    const newOption = intOption >= 0 ? retrievedOptions[intOption] : undefined;\n    const oldOption = selectedOption >= 0 ? retrievedOptions[selectedOption] : undefined;\n\n    let newFormData = schemaUtils.sanitizeDataForNewSchema(newOption, oldOption, formData);\n    if (newFormData && newOption) {\n      // Call getDefaultFormState to make sure defaults are populated on change. Pass \"excludeObjectChildren\"\n      // so that only the root objects themselves are created without adding undefined children properties\n      newFormData = schemaUtils.getDefaultFormState(newOption, newFormData, 'excludeObjectChildren') as T;\n    }\n    onChange(newFormData, undefined, this.getFieldId());\n\n    this.setState({ selectedOption: intOption });\n  };\n\n  getFieldId() {\n    const { idSchema, schema } = this.props;\n    return `${idSchema.$id}${schema.oneOf ? '__oneof_select' : '__anyof_select'}`;\n  }\n\n  /** Renders the `AnyOfField` selector along with a `SchemaField` for the value of the `formData`\n   */\n  render() {\n    const {\n      name,\n      baseType,\n      disabled = false,\n      errorSchema = {},\n      formContext,\n      onBlur,\n      onFocus,\n      registry,\n      schema,\n      uiSchema,\n    } = this.props;\n\n    const { widgets, fields, translateString } = registry;\n    const { SchemaField: _SchemaField } = fields;\n    const { selectedOption, retrievedOptions } = this.state;\n    const {\n      widget = 'select',\n      placeholder,\n      autofocus,\n      autocomplete,\n      title = schema.title,\n      ...uiOptions\n    } = getUiOptions<T, S, F>(uiSchema);\n    const Widget = getWidget<T, S, F>({ type: 'number' }, widget, widgets);\n    const rawErrors = get(errorSchema, ERRORS_KEY, []);\n    const fieldErrorSchema = omit(errorSchema, [ERRORS_KEY]);\n\n    const option = selectedOption >= 0 ? retrievedOptions[selectedOption] || null : null;\n    let optionSchema: S;\n\n    if (option) {\n      // If the subschema doesn't declare a type, infer the type from the\n      // parent schema\n      optionSchema = option.type ? option : Object.assign({}, option, { type: baseType });\n    }\n\n    const translateEnum: TranslatableString = title\n      ? TranslatableString.TitleOptionPrefix\n      : TranslatableString.OptionPrefix;\n    const translateParams = title ? [title] : [];\n    const enumOptions = retrievedOptions.map((opt: { title?: string }, index: number) => ({\n      label: opt.title || translateString(translateEnum, translateParams.concat(String(index + 1))),\n      value: index,\n    }));\n\n    return (\n      <div className='panel panel-default panel-body'>\n        <div className='form-group'>\n          <Widget\n            id={this.getFieldId()}\n            name={`${name}${schema.oneOf ? '__oneof_select' : '__anyof_select'}`}\n            schema={{ type: 'number', default: 0 } as S}\n            onChange={this.onOptionChange}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            disabled={disabled || isEmpty(enumOptions)}\n            multiple={false}\n            rawErrors={rawErrors}\n            errorSchema={fieldErrorSchema}\n            value={selectedOption >= 0 ? selectedOption : undefined}\n            options={{ enumOptions, ...uiOptions }}\n            registry={registry}\n            formContext={formContext}\n            placeholder={placeholder}\n            autocomplete={autocomplete}\n            autofocus={autofocus}\n            label=''\n          />\n        </div>\n        {option !== null && <_SchemaField {...this.props} schema={optionSchema!} />}\n      </div>\n    );\n  }\n}\n\nexport default AnyOfField;\n","import { useState, useCallback } from 'react';\nimport { asNumber, FieldProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n// Matches a string that ends in a . character, optionally followed by a sequence of\n// digits followed by any number of 0 characters up until the end of the line.\n// Ensuring that there is at least one prefixed character is important so that\n// you don't incorrectly match against \"0\".\nconst trailingCharMatcherWithPrefix = /\\.([0-9]*0)*$/;\n\n// This is used for trimming the trailing 0 and . characters without affecting\n// the rest of the string. Its possible to use one RegEx with groups for this\n// functionality, but it is fairly complex compared to simply defining two\n// different matchers.\nconst trailingCharMatcher = /[0.]0*$/;\n\n/**\n * The NumberField class has some special handling for dealing with trailing\n * decimal points and/or zeroes. This logic is designed to allow trailing values\n * to be visible in the input element, but not be represented in the\n * corresponding form data.\n *\n * The algorithm is as follows:\n *\n * 1. When the input value changes the value is cached in the component state\n *\n * 2. The value is then normalized, removing trailing decimal points and zeros,\n *    then passed to the \"onChange\" callback\n *\n * 3. When the component is rendered, the formData value is checked against the\n *    value cached in the state. If it matches the cached value, the cached\n *    value is passed to the input instead of the formData value\n */\nfunction NumberField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const { registry, onChange, formData, value: initialValue } = props;\n  const [lastValue, setLastValue] = useState(initialValue);\n  const { StringField } = registry.fields;\n\n  let value = formData;\n\n  /** Handle the change from the `StringField` to properly convert to a number\n   *\n   * @param value - The current value for the change occurring\n   */\n  const handleChange = useCallback(\n    (value: FieldProps<T, S, F>['value']) => {\n      // Cache the original value in component state\n      setLastValue(value);\n\n      // Normalize decimals that don't start with a zero character in advance so\n      // that the rest of the normalization logic is simpler\n      if (`${value}`.charAt(0) === '.') {\n        value = `0${value}`;\n      }\n\n      // Check that the value is a string (this can happen if the widget used is a\n      // <select>, due to an enum declaration etc) then, if the value ends in a\n      // trailing decimal point or multiple zeroes, strip the trailing values\n      const processed =\n        typeof value === 'string' && value.match(trailingCharMatcherWithPrefix)\n          ? asNumber(value.replace(trailingCharMatcher, ''))\n          : asNumber(value);\n\n      onChange(processed as unknown as T);\n    },\n    [onChange]\n  );\n\n  if (typeof lastValue === 'string' && typeof value === 'number') {\n    // Construct a regular expression that checks for a string that consists\n    // of the formData value suffixed with zero or one '.' characters and zero\n    // or more '0' characters\n    const re = new RegExp(`${value}`.replace('.', '\\\\.') + '\\\\.?0*$');\n\n    // If the cached \"lastValue\" is a match, use that instead of the formData\n    // value to prevent the input value from changing in the UI\n    if (lastValue.match(re)) {\n      value = lastValue as unknown as T;\n    }\n  }\n\n  return <StringField {...props} formData={value} onChange={handleChange} />;\n}\n\nexport default NumberField;\n","import { Component } from 'react';\nimport {\n  getTemplate,\n  getUiOptions,\n  orderProperties,\n  ErrorSchema,\n  FieldProps,\n  FormContextType,\n  GenericObjectType,\n  IdSchema,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  ADDITIONAL_PROPERTY_FLAG,\n  PROPERTIES_KEY,\n  REF_KEY,\n  ANY_OF_KEY,\n  ONE_OF_KEY,\n} from '@rjsf/utils';\nimport get from 'lodash/get';\nimport has from 'lodash/has';\nimport isObject from 'lodash/isObject';\nimport set from 'lodash/set';\nimport unset from 'lodash/unset';\n\n/** Type used for the state of the `ObjectField` component */\ntype ObjectFieldState = {\n  /** Flag indicating whether an additional property key was modified */\n  wasPropertyKeyModified: boolean;\n  /** The set of additional properties */\n  additionalProperties: object;\n};\n\n/** The `ObjectField` component is used to render a field in the schema that is of type `object`. It tracks whether an\n * additional property key was modified and what it was modified to\n *\n * @param props - The `FieldProps` for this template\n */\nclass ObjectField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> extends Component<\n  FieldProps<T, S, F>,\n  ObjectFieldState\n> {\n  /** Set up the initial state */\n  state = {\n    wasPropertyKeyModified: false,\n    additionalProperties: {},\n  };\n\n  /** Returns a flag indicating whether the `name` field is required in the object schema\n   *\n   * @param name - The name of the field to check for required-ness\n   * @returns - True if the field `name` is required, false otherwise\n   */\n  isRequired(name: string) {\n    const { schema } = this.props;\n    return Array.isArray(schema.required) && schema.required.indexOf(name) !== -1;\n  }\n\n  /** Returns the `onPropertyChange` handler for the `name` field. Handles the special case where a user is attempting\n   * to clear the data for a field added as an additional property. Calls the `onChange()` handler with the updated\n   * formData.\n   *\n   * @param name - The name of the property\n   * @param addedByAdditionalProperties - Flag indicating whether this property is an additional property\n   * @returns - The onPropertyChange callback for the `name` property\n   */\n  onPropertyChange = (name: string, addedByAdditionalProperties = false) => {\n    return (value: T | undefined, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const { formData, onChange, errorSchema } = this.props;\n      if (value === undefined && addedByAdditionalProperties) {\n        // Don't set value = undefined for fields added by\n        // additionalProperties. Doing so removes them from the\n        // formData, which causes them to completely disappear\n        // (including the input field for the property name). Unlike\n        // fields which are \"mandated\" by the schema, these fields can\n        // be set to undefined by clicking a \"delete field\" button, so\n        // set empty values to the empty string.\n        value = '' as unknown as T;\n      }\n      const newFormData = { ...formData, [name]: value } as unknown as T;\n      onChange(\n        newFormData,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [name]: newErrorSchema,\n          },\n        id\n      );\n    };\n  };\n\n  /** Returns a callback to handle the onDropPropertyClick event for the given `key` which removes the old `key` data\n   * and calls the `onChange` callback with it\n   *\n   * @param key - The key for which the drop callback is desired\n   * @returns - The drop property click callback\n   */\n  onDropPropertyClick = (key: string) => {\n    return (event: DragEvent) => {\n      event.preventDefault();\n      const { onChange, formData } = this.props;\n      const copiedFormData = { ...formData } as T;\n      unset(copiedFormData, key);\n      onChange(copiedFormData);\n    };\n  };\n\n  /** Computes the next available key name from the `preferredKey`, indexing through the already existing keys until one\n   * that is already not assigned is found.\n   *\n   * @param preferredKey - The preferred name of a new key\n   * @param [formData] - The form data in which to check if the desired key already exists\n   * @returns - The name of the next available key from `preferredKey`\n   */\n  getAvailableKey = (preferredKey: string, formData?: T) => {\n    const { uiSchema } = this.props;\n    const { duplicateKeySuffixSeparator = '-' } = getUiOptions<T, S, F>(uiSchema);\n\n    let index = 0;\n    let newKey = preferredKey;\n    while (has(formData, newKey)) {\n      newKey = `${preferredKey}${duplicateKeySuffixSeparator}${++index}`;\n    }\n    return newKey;\n  };\n\n  /** Returns a callback function that deals with the rename of a key for an additional property for a schema. That\n   * callback will attempt to rename the key and move the existing data to that key, calling `onChange` when it does.\n   *\n   * @param oldValue - The old value of a field\n   * @returns - The key change callback function\n   */\n  onKeyChange = (oldValue: any) => {\n    return (value: any, newErrorSchema: ErrorSchema<T>) => {\n      if (oldValue === value) {\n        return;\n      }\n      const { formData, onChange, errorSchema } = this.props;\n\n      value = this.getAvailableKey(value, formData);\n      const newFormData: GenericObjectType = {\n        ...(formData as GenericObjectType),\n      };\n      const newKeys: GenericObjectType = { [oldValue]: value };\n      const keyValues = Object.keys(newFormData).map((key) => {\n        const newKey = newKeys[key] || key;\n        return { [newKey]: newFormData[key] };\n      });\n      const renamedObj = Object.assign({}, ...keyValues);\n\n      this.setState({ wasPropertyKeyModified: true });\n\n      onChange(\n        renamedObj,\n        errorSchema &&\n          errorSchema && {\n            ...errorSchema,\n            [value]: newErrorSchema,\n          }\n      );\n    };\n  };\n\n  /** Returns a default value to be used for a new additional schema property of the given `type`\n   *\n   * @param type - The type of the new additional schema property\n   */\n  getDefaultValue(type?: RJSFSchema['type']) {\n    const {\n      registry: { translateString },\n    } = this.props;\n    switch (type) {\n      case 'array':\n        return [];\n      case 'boolean':\n        return false;\n      case 'null':\n        return null;\n      case 'number':\n        return 0;\n      case 'object':\n        return {};\n      case 'string':\n      default:\n        // We don't have a datatype for some reason (perhaps additionalProperties was true)\n        return translateString(TranslatableString.NewStringDefault);\n    }\n  }\n\n  /** Handles the adding of a new additional property on the given `schema`. Calls the `onChange` callback once the new\n   * default data for that field has been added to the formData.\n   *\n   * @param schema - The schema element to which the new property is being added\n   */\n  handleAddClick = (schema: S) => () => {\n    if (!schema.additionalProperties) {\n      return;\n    }\n    const { formData, onChange, registry } = this.props;\n    const newFormData = { ...formData } as T;\n\n    let type: RJSFSchema['type'] = undefined;\n    if (isObject(schema.additionalProperties)) {\n      type = schema.additionalProperties.type;\n      let apSchema = schema.additionalProperties;\n      if (REF_KEY in apSchema) {\n        const { schemaUtils } = registry;\n        apSchema = schemaUtils.retrieveSchema({ $ref: apSchema[REF_KEY] } as S, formData);\n        type = apSchema.type;\n      }\n      if (!type && (ANY_OF_KEY in apSchema || ONE_OF_KEY in apSchema)) {\n        type = 'object';\n      }\n    }\n\n    const newKey = this.getAvailableKey('newKey', newFormData);\n    // Cast this to make the `set` work properly\n    set(newFormData as GenericObjectType, newKey, this.getDefaultValue(type));\n\n    onChange(newFormData);\n  };\n\n  /** Renders the `ObjectField` from the given props\n   */\n  render() {\n    const {\n      schema: rawSchema,\n      uiSchema = {},\n      formData,\n      errorSchema,\n      idSchema,\n      name,\n      required = false,\n      disabled = false,\n      readonly = false,\n      hideError,\n      idPrefix,\n      idSeparator,\n      onBlur,\n      onFocus,\n      registry,\n    } = this.props;\n\n    const { fields, formContext, schemaUtils } = registry;\n    const { SchemaField } = fields;\n    const schema: S = schemaUtils.retrieveSchema(rawSchema, formData);\n    const uiOptions = getUiOptions<T, S, F>(uiSchema);\n    const { properties: schemaProperties = {} } = schema;\n\n    const title = schema.title === undefined ? name : schema.title;\n    const description = uiOptions.description || schema.description;\n    let orderedProperties: string[];\n    try {\n      const properties = Object.keys(schemaProperties);\n      orderedProperties = orderProperties(properties, uiOptions.order);\n    } catch (err) {\n      return (\n        <div>\n          <p className='config-error' style={{ color: 'red' }}>\n            Invalid {name || 'root'} object field configuration:\n            <em>{(err as Error).message}</em>.\n          </p>\n          <pre>{JSON.stringify(schema)}</pre>\n        </div>\n      );\n    }\n\n    const Template = getTemplate<'ObjectFieldTemplate', T, S, F>('ObjectFieldTemplate', registry, uiOptions);\n\n    const templateProps = {\n      title: uiOptions.title || title,\n      description,\n      properties: orderedProperties.map((name) => {\n        const addedByAdditionalProperties = has(schema, [PROPERTIES_KEY, name, ADDITIONAL_PROPERTY_FLAG]);\n        const fieldUiSchema = addedByAdditionalProperties ? uiSchema.additionalProperties : uiSchema[name];\n        const hidden = getUiOptions<T, S, F>(fieldUiSchema).widget === 'hidden';\n        const fieldIdSchema: IdSchema<T> = get(idSchema, [name], {});\n\n        return {\n          content: (\n            <SchemaField\n              key={name}\n              name={name}\n              required={this.isRequired(name)}\n              schema={get(schema, [PROPERTIES_KEY, name], {})}\n              uiSchema={fieldUiSchema}\n              errorSchema={get(errorSchema, name)}\n              idSchema={fieldIdSchema}\n              idPrefix={idPrefix}\n              idSeparator={idSeparator}\n              formData={get(formData, name)}\n              formContext={formContext}\n              wasPropertyKeyModified={this.state.wasPropertyKeyModified}\n              onKeyChange={this.onKeyChange(name)}\n              onChange={this.onPropertyChange(name, addedByAdditionalProperties)}\n              onBlur={onBlur}\n              onFocus={onFocus}\n              registry={registry}\n              disabled={disabled}\n              readonly={readonly}\n              hideError={hideError}\n              onDropPropertyClick={this.onDropPropertyClick}\n            />\n          ),\n          name,\n          readonly,\n          disabled,\n          required,\n          hidden,\n        };\n      }),\n      readonly,\n      disabled,\n      required,\n      idSchema,\n      uiSchema,\n      schema,\n      formData,\n      formContext,\n      registry,\n    };\n    return <Template {...templateProps} onAddClick={this.handleAddClick} />;\n  }\n}\n\nexport default ObjectField;\n","import { useCallback, Component } from 'react';\nimport {\n  ADDITIONAL_PROPERTY_FLAG,\n  deepEquals,\n  descriptionId,\n  ErrorSchema,\n  FieldProps,\n  FieldTemplateProps,\n  FormContextType,\n  getSchemaType,\n  getTemplate,\n  getUiOptions,\n  ID_KEY,\n  IdSchema,\n  mergeObjects,\n  Registry,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  UI_OPTIONS_KEY,\n  UIOptionsType,\n} from '@rjsf/utils';\nimport isObject from 'lodash/isObject';\nimport omit from 'lodash/omit';\n\n/** The map of component type to FieldName */\nconst COMPONENT_TYPES: { [key: string]: string } = {\n  array: 'ArrayField',\n  boolean: 'BooleanField',\n  integer: 'NumberField',\n  number: 'NumberField',\n  object: 'ObjectField',\n  string: 'StringField',\n  null: 'NullField',\n};\n\n/** Computes and returns which `Field` implementation to return in order to render the field represented by the\n * `schema`. The `uiOptions` are used to alter what potential `Field` implementation is actually returned. If no\n * appropriate `Field` implementation can be found then a wrapper around `UnsupportedFieldTemplate` is used.\n *\n * @param schema - The schema from which to obtain the type\n * @param uiOptions - The UI Options that may affect the component decision\n * @param idSchema - The id that is passed to the `UnsupportedFieldTemplate`\n * @param registry - The registry from which fields and templates are obtained\n * @returns - The `Field` component that is used to render the actual field data\n */\nfunction getFieldComponent<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  schema: S,\n  uiOptions: UIOptionsType<T, S, F>,\n  idSchema: IdSchema<T>,\n  registry: Registry<T, S, F>\n) {\n  const field = uiOptions.field;\n  const { fields, translateString } = registry;\n  if (typeof field === 'function') {\n    return field;\n  }\n  if (typeof field === 'string' && field in fields) {\n    return fields[field];\n  }\n\n  const schemaType = getSchemaType(schema);\n  const type: string = Array.isArray(schemaType) ? schemaType[0] : schemaType || '';\n  const componentName = COMPONENT_TYPES[type];\n\n  // If the type is not defined and the schema uses 'anyOf' or 'oneOf', don't\n  // render a field and let the MultiSchemaField component handle the form display\n  if (!componentName && (schema.anyOf || schema.oneOf)) {\n    return () => null;\n  }\n\n  return componentName in fields\n    ? fields[componentName]\n    : () => {\n        const UnsupportedFieldTemplate = getTemplate<'UnsupportedFieldTemplate', T, S, F>(\n          'UnsupportedFieldTemplate',\n          registry,\n          uiOptions\n        );\n\n        return (\n          <UnsupportedFieldTemplate\n            schema={schema}\n            idSchema={idSchema}\n            reason={translateString(TranslatableString.UnknownFieldType, [String(schema.type)])}\n            registry={registry}\n          />\n        );\n      };\n}\n\n/** The `SchemaFieldRender` component is the work-horse of react-jsonschema-form, determining what kind of real field to\n * render based on the `schema`, `uiSchema` and all the other props. It also deals with rendering the `anyOf` and\n * `oneOf` fields.\n *\n * @param props - The `FieldProps` for this component\n */\nfunction SchemaFieldRender<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const {\n    schema: _schema,\n    idSchema: _idSchema,\n    uiSchema,\n    formData,\n    errorSchema,\n    idPrefix,\n    idSeparator,\n    name,\n    onChange,\n    onKeyChange,\n    onDropPropertyClick,\n    required,\n    registry,\n    wasPropertyKeyModified = false,\n  } = props;\n  const { formContext, schemaUtils } = registry;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const FieldTemplate = getTemplate<'FieldTemplate', T, S, F>('FieldTemplate', registry, uiOptions);\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    uiOptions\n  );\n  const FieldHelpTemplate = getTemplate<'FieldHelpTemplate', T, S, F>('FieldHelpTemplate', registry, uiOptions);\n  const FieldErrorTemplate = getTemplate<'FieldErrorTemplate', T, S, F>('FieldErrorTemplate', registry, uiOptions);\n  const schema = schemaUtils.retrieveSchema(_schema, formData);\n  const fieldId = _idSchema[ID_KEY];\n  const idSchema = mergeObjects(\n    schemaUtils.toIdSchema(schema, fieldId, formData, idPrefix, idSeparator),\n    _idSchema\n  ) as IdSchema<T>;\n\n  /** Intermediary `onChange` handler for field components that will inject the `id` of the current field into the\n   * `onChange` chain if it is not already being provided from a deeper level in the hierarchy\n   */\n  const handleFieldComponentChange = useCallback(\n    (formData: T | undefined, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n      const theId = id || fieldId;\n      return onChange(formData, newErrorSchema, theId);\n    },\n    [fieldId, onChange]\n  );\n\n  const FieldComponent = getFieldComponent<T, S, F>(schema, uiOptions, idSchema, registry);\n  const disabled = Boolean(props.disabled || uiOptions.disabled);\n  const readonly = Boolean(props.readonly || uiOptions.readonly || props.schema.readOnly || schema.readOnly);\n  const uiSchemaHideError = uiOptions.hideError;\n  // Set hideError to the value provided in the uiSchema, otherwise stick with the prop to propagate to children\n  const hideError = uiSchemaHideError === undefined ? props.hideError : Boolean(uiSchemaHideError);\n  const autofocus = Boolean(props.autofocus || uiOptions.autofocus);\n  if (Object.keys(schema).length === 0) {\n    return null;\n  }\n\n  const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema);\n\n  const { __errors, ...fieldErrorSchema } = errorSchema || {};\n  // See #439: uiSchema: Don't pass consumed class names or style to child components\n  const fieldUiSchema = omit(uiSchema, ['ui:classNames', 'classNames', 'ui:style']);\n  if (UI_OPTIONS_KEY in fieldUiSchema) {\n    fieldUiSchema[UI_OPTIONS_KEY] = omit(fieldUiSchema[UI_OPTIONS_KEY], ['classNames', 'style']);\n  }\n\n  const field = (\n    <FieldComponent\n      {...props}\n      onChange={handleFieldComponentChange}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={fieldUiSchema}\n      disabled={disabled}\n      readonly={readonly}\n      hideError={hideError}\n      autofocus={autofocus}\n      errorSchema={fieldErrorSchema}\n      formContext={formContext}\n      rawErrors={__errors}\n    />\n  );\n\n  const id = idSchema[ID_KEY];\n\n  // If this schema has a title defined, but the user has set a new key/label, retain their input.\n  let label;\n  if (wasPropertyKeyModified) {\n    label = name;\n  } else {\n    label = ADDITIONAL_PROPERTY_FLAG in schema ? name : uiOptions.title || props.schema.title || schema.title || name;\n  }\n\n  const description = uiOptions.description || props.schema.description || schema.description || '';\n  const help = uiOptions.help;\n  const hidden = uiOptions.widget === 'hidden';\n\n  const classNames = ['form-group', 'field', `field-${schema.type}`];\n  if (!hideError && __errors && __errors.length > 0) {\n    classNames.push('field-error has-error has-danger');\n  }\n  if (uiSchema?.classNames) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn(\n        \"'uiSchema.classNames' is deprecated and may be removed in a major release; Use 'ui:classNames' instead.\"\n      );\n    }\n    classNames.push(uiSchema.classNames);\n  }\n  if (uiOptions.classNames) {\n    classNames.push(uiOptions.classNames);\n  }\n\n  const helpComponent = (\n    <FieldHelpTemplate\n      help={help}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={uiSchema}\n      hasErrors={!hideError && __errors && __errors.length > 0}\n      registry={registry}\n    />\n  );\n  const errorsComponent = hideError ? undefined : (\n    <FieldErrorTemplate\n      errors={__errors}\n      errorSchema={errorSchema}\n      idSchema={idSchema}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n  const fieldProps: Omit<FieldTemplateProps<T, S, F>, 'children'> = {\n    description: (\n      <DescriptionFieldTemplate\n        id={descriptionId<T>(id)}\n        description={description}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n    ),\n    rawDescription: description,\n    help: helpComponent,\n    rawHelp: typeof help === 'string' ? help : undefined,\n    errors: errorsComponent,\n    rawErrors: hideError ? undefined : __errors,\n    id,\n    label,\n    hidden,\n    onChange,\n    onKeyChange,\n    onDropPropertyClick,\n    required,\n    disabled,\n    readonly,\n    hideError,\n    displayLabel,\n    classNames: classNames.join(' ').trim(),\n    style: uiOptions.style,\n    formContext,\n    formData,\n    schema,\n    uiSchema,\n    registry,\n  };\n\n  const _AnyOfField = registry.fields.AnyOfField;\n  const _OneOfField = registry.fields.OneOfField;\n  const isReplacingAnyOrOneOf = uiSchema?.['ui:field'] && uiSchema?.['ui:fieldReplacesAnyOrOneOf'] === true;\n\n  return (\n    <FieldTemplate {...fieldProps}>\n      <>\n        {field}\n        {/*\n        If the schema `anyOf` or 'oneOf' can be rendered as a select control, don't\n        render the selection and let `StringField` component handle\n        rendering\n      */}\n        {schema.anyOf && !isReplacingAnyOrOneOf && !schemaUtils.isSelect(schema) && (\n          <_AnyOfField\n            name={name}\n            disabled={disabled}\n            readonly={readonly}\n            hideError={hideError}\n            errorSchema={errorSchema}\n            formData={formData}\n            formContext={formContext}\n            idPrefix={idPrefix}\n            idSchema={idSchema}\n            idSeparator={idSeparator}\n            onBlur={props.onBlur}\n            onChange={props.onChange}\n            onFocus={props.onFocus}\n            options={schema.anyOf.map((_schema) =>\n              schemaUtils.retrieveSchema(isObject(_schema) ? (_schema as S) : ({} as S), formData)\n            )}\n            baseType={schema.type}\n            registry={registry}\n            schema={schema}\n            uiSchema={uiSchema}\n          />\n        )}\n        {schema.oneOf && !isReplacingAnyOrOneOf && !schemaUtils.isSelect(schema) && (\n          <_OneOfField\n            name={name}\n            disabled={disabled}\n            readonly={readonly}\n            hideError={hideError}\n            errorSchema={errorSchema}\n            formData={formData}\n            formContext={formContext}\n            idPrefix={idPrefix}\n            idSchema={idSchema}\n            idSeparator={idSeparator}\n            onBlur={props.onBlur}\n            onChange={props.onChange}\n            onFocus={props.onFocus}\n            options={schema.oneOf.map((_schema) =>\n              schemaUtils.retrieveSchema(isObject(_schema) ? (_schema as S) : ({} as S), formData)\n            )}\n            baseType={schema.type}\n            registry={registry}\n            schema={schema}\n            uiSchema={uiSchema}\n          />\n        )}\n      </>\n    </FieldTemplate>\n  );\n}\n\n/** The `SchemaField` component determines whether it is necessary to rerender the component based on any props changes\n * and if so, calls the `SchemaFieldRender` component with the props.\n */\nclass SchemaField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> extends Component<\n  FieldProps<T, S, F>\n> {\n  shouldComponentUpdate(nextProps: Readonly<FieldProps<T, S, F>>) {\n    return !deepEquals(this.props, nextProps);\n  }\n\n  render() {\n    return <SchemaFieldRender<T, S, F> {...this.props} />;\n  }\n}\n\nexport default SchemaField;\n","import {\n  getWidget,\n  getUiOptions,\n  optionsList,\n  hasWidget,\n  FieldProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `StringField` component is used to render a schema field that represents a string type\n *\n * @param props - The `FieldProps` for this template\n */\nfunction StringField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const {\n    schema,\n    name,\n    uiSchema,\n    idSchema,\n    formData,\n    required,\n    disabled = false,\n    readonly = false,\n    autofocus = false,\n    onChange,\n    onBlur,\n    onFocus,\n    registry,\n    rawErrors,\n  } = props;\n  const { title, format } = schema;\n  const { widgets, formContext, schemaUtils } = registry;\n  const enumOptions = schemaUtils.isSelect(schema) ? optionsList(schema) : undefined;\n  let defaultWidget = enumOptions ? 'select' : 'text';\n  if (format && hasWidget<T, S, F>(schema, format, widgets)) {\n    defaultWidget = format;\n  }\n  const { widget = defaultWidget, placeholder = '', ...options } = getUiOptions<T, S, F>(uiSchema);\n  const Widget = getWidget<T, S, F>(schema, widget, widgets);\n  return (\n    <Widget\n      options={{ ...options, enumOptions }}\n      schema={schema}\n      uiSchema={uiSchema}\n      id={idSchema.$id}\n      name={name}\n      label={title === undefined ? name : title}\n      value={formData}\n      onChange={onChange}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      required={required}\n      disabled={disabled}\n      readonly={readonly}\n      formContext={formContext}\n      autofocus={autofocus}\n      registry={registry}\n      placeholder={placeholder}\n      rawErrors={rawErrors}\n    />\n  );\n}\n\nexport default StringField;\n","import { useEffect } from 'react';\nimport { FieldProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `NullField` component is used to render a field in the schema is null. It also ensures that the `formData` is\n * also set to null if it has no value.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction NullField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: FieldProps<T, S, F>\n) {\n  const { formData, onChange } = props;\n  useEffect(() => {\n    if (formData === undefined) {\n      onChange(null as unknown as T);\n    }\n  }, [formData, onChange]);\n\n  return null;\n}\n\nexport default NullField;\n","import { Field, FormContextType, RegistryFieldsType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nimport ArrayField from './ArrayField';\nimport BooleanField from './BooleanField';\nimport MultiSchemaField from './MultiSchemaField';\nimport NumberField from './NumberField';\nimport ObjectField from './ObjectField';\nimport SchemaField from './SchemaField';\nimport StringField from './StringField';\nimport NullField from './NullField';\n\nfunction fields<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryFieldsType<T, S, F> {\n  return {\n    AnyOfField: MultiSchemaField,\n    ArrayField: ArrayField as unknown as Field<T, S, F>,\n    // ArrayField falls back to SchemaField if ArraySchemaField is not defined, which it isn't by default\n    BooleanField,\n    NumberField,\n    ObjectField,\n    OneOfField: MultiSchemaField,\n    SchemaField,\n    StringField,\n    NullField,\n  };\n}\n\nexport default fields;\n","import {\n  descriptionId,\n  getTemplate,\n  getUiOptions,\n  ArrayFieldDescriptionProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `ArrayFieldDescriptionTemplate` component renders a `DescriptionFieldTemplate` with an `id` derived from\n * the `idSchema`.\n *\n * @param props - The `ArrayFieldDescriptionProps` for the component\n */\nexport default function ArrayFieldDescriptionTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldDescriptionProps<T, S, F>) {\n  const { idSchema, description, registry, schema, uiSchema } = props;\n  const options = getUiOptions<T, S, F>(uiSchema);\n  const { label: displayLabel = true } = options;\n  if (!description || !displayLabel) {\n    return null;\n  }\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    options\n  );\n  return (\n    <DescriptionFieldTemplate\n      id={descriptionId<T>(idSchema)}\n      description={description}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n}\n","import { CSSProperties } from 'react';\nimport { ArrayFieldTemplateItemType, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `ArrayFieldItemTemplate` component is the template used to render an items of an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldItemTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateItemType<T, S, F>) {\n  const {\n    children,\n    className,\n    disabled,\n    hasToolbar,\n    hasMoveDown,\n    hasMoveUp,\n    hasRemove,\n    index,\n    onDropIndexClick,\n    onReorderClick,\n    readonly,\n    registry,\n    uiSchema,\n  } = props;\n  const { MoveDownButton, MoveUpButton, RemoveButton } = registry.templates.ButtonTemplates;\n  const btnStyle: CSSProperties = {\n    flex: 1,\n    paddingLeft: 6,\n    paddingRight: 6,\n    fontWeight: 'bold',\n  };\n  return (\n    <div className={className}>\n      <div className={hasToolbar ? 'col-xs-9' : 'col-xs-12'}>{children}</div>\n      {hasToolbar && (\n        <div className='col-xs-3 array-item-toolbox'>\n          <div\n            className='btn-group'\n            style={{\n              display: 'flex',\n              justifyContent: 'space-around',\n            }}\n          >\n            {(hasMoveUp || hasMoveDown) && (\n              <MoveUpButton\n                style={btnStyle}\n                disabled={disabled || readonly || !hasMoveUp}\n                onClick={onReorderClick(index, index - 1)}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n            {(hasMoveUp || hasMoveDown) && (\n              <MoveDownButton\n                style={btnStyle}\n                disabled={disabled || readonly || !hasMoveDown}\n                onClick={onReorderClick(index, index + 1)}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n            {hasRemove && (\n              <RemoveButton\n                style={btnStyle}\n                disabled={disabled || readonly}\n                onClick={onDropIndexClick(index)}\n                uiSchema={uiSchema}\n                registry={registry}\n              />\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","import {\n  getTemplate,\n  getUiOptions,\n  ArrayFieldTemplateProps,\n  ArrayFieldTemplateItemType,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `ArrayFieldTemplate` component is the template used to render all items in an array.\n *\n * @param props - The `ArrayFieldTemplateItemType` props for the component\n */\nexport default function ArrayFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTemplateProps<T, S, F>) {\n  const {\n    canAdd,\n    className,\n    disabled,\n    idSchema,\n    uiSchema,\n    items,\n    onAddClick,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n  } = props;\n  const uiOptions = getUiOptions<T, S, F>(uiSchema);\n  const ArrayFieldDescriptionTemplate = getTemplate<'ArrayFieldDescriptionTemplate', T, S, F>(\n    'ArrayFieldDescriptionTemplate',\n    registry,\n    uiOptions\n  );\n  const ArrayFieldItemTemplate = getTemplate<'ArrayFieldItemTemplate', T, S, F>(\n    'ArrayFieldItemTemplate',\n    registry,\n    uiOptions\n  );\n  const ArrayFieldTitleTemplate = getTemplate<'ArrayFieldTitleTemplate', T, S, F>(\n    'ArrayFieldTitleTemplate',\n    registry,\n    uiOptions\n  );\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <fieldset className={className} id={idSchema.$id}>\n      <ArrayFieldTitleTemplate\n        idSchema={idSchema}\n        title={uiOptions.title || title}\n        required={required}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <ArrayFieldDescriptionTemplate\n        idSchema={idSchema}\n        description={uiOptions.description || schema.description}\n        schema={schema}\n        uiSchema={uiSchema}\n        registry={registry}\n      />\n      <div className='row array-item-list'>\n        {items &&\n          items.map(({ key, ...itemProps }: ArrayFieldTemplateItemType<T, S, F>) => (\n            <ArrayFieldItemTemplate key={key} {...itemProps} />\n          ))}\n      </div>\n      {canAdd && (\n        <AddButton\n          className='array-item-add'\n          onClick={onAddClick}\n          disabled={disabled || readonly}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n    </fieldset>\n  );\n}\n","import {\n  getTemplate,\n  getUiOptions,\n  titleId,\n  ArrayFieldTitleProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TemplatesType,\n} from '@rjsf/utils';\n\n/** The `ArrayFieldTitleTemplate` component renders a `TitleFieldTemplate` with an `id` derived from\n * the `idSchema`.\n *\n * @param props - The `ArrayFieldTitleProps` for the component\n */\nexport default function ArrayFieldTitleTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ArrayFieldTitleProps<T, S, F>) {\n  const { idSchema, title, schema, uiSchema, required, registry } = props;\n  const options = getUiOptions<T, S, F>(uiSchema);\n  const { label: displayLabel = true } = options;\n  if (!title || !displayLabel) {\n    return null;\n  }\n  const TitleFieldTemplate: TemplatesType<T, S, F>['TitleFieldTemplate'] = getTemplate<'TitleFieldTemplate', T, S, F>(\n    'TitleFieldTemplate',\n    registry,\n    options\n  );\n  return (\n    <TitleFieldTemplate\n      id={titleId<T>(idSchema)}\n      title={title}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    />\n  );\n}\n","import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  BaseInputTemplateProps,\n  examplesId,\n  getInputProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `BaseInputTemplate` is the template to use to render the basic `<input>` component for the `core` theme.\n * It is used as the template for rendering many of the <input> based widgets that differ by `type` and callbacks only.\n * It can be customized/overridden for other themes or individual implementations as needed.\n *\n * @param props - The `WidgetProps` for this template\n */\nexport default function BaseInputTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: BaseInputTemplateProps<T, S, F>) {\n  const {\n    id,\n    name, // remove this from ...rest\n    value,\n    readonly,\n    disabled,\n    autofocus,\n    onBlur,\n    onFocus,\n    onChange,\n    onChangeOverride,\n    options,\n    schema,\n    uiSchema,\n    formContext,\n    registry,\n    rawErrors,\n    type,\n    ...rest\n  } = props;\n\n  // Note: since React 15.2.0 we can't forward unknown element attributes, so we\n  // exclude the \"options\" and \"schema\" ones here.\n  if (!id) {\n    console.log('No id for', props);\n    throw new Error(`no id for props ${JSON.stringify(props)}`);\n  }\n  const inputProps = {\n    ...rest,\n    ...getInputProps<T, S, F>(schema, type, options),\n  };\n\n  let inputValue;\n  if (inputProps.type === 'number' || inputProps.type === 'integer') {\n    inputValue = value || value === 0 ? value : '';\n  } else {\n    inputValue = value == null ? '' : value;\n  }\n\n  const _onChange = useCallback(\n    ({ target: { value } }: ChangeEvent<HTMLInputElement>) => onChange(value === '' ? options.emptyValue : value),\n    [onChange, options]\n  );\n  const _onBlur = useCallback(({ target: { value } }: FocusEvent<HTMLInputElement>) => onBlur(id, value), [onBlur, id]);\n  const _onFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) => onFocus(id, value),\n    [onFocus, id]\n  );\n\n  return (\n    <>\n      <input\n        id={id}\n        name={id}\n        className='form-control'\n        readOnly={readonly}\n        disabled={disabled}\n        autoFocus={autofocus}\n        value={inputValue}\n        {...inputProps}\n        list={schema.examples ? examplesId<T>(id) : undefined}\n        onChange={onChangeOverride || _onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        aria-describedby={ariaDescribedByIds<T>(id, !!schema.examples)}\n      />\n      {Array.isArray(schema.examples) && (\n        <datalist key={`datalist_${id}`} id={examplesId<T>(id)}>\n          {(schema.examples as string[])\n            .concat(schema.default && !schema.examples.includes(schema.default) ? ([schema.default] as string[]) : [])\n            .map((example: any) => {\n              return <option key={example} value={example} />;\n            })}\n        </datalist>\n      )}\n    </>\n  );\n}\n","import { getSubmitButtonOptions, FormContextType, RJSFSchema, StrictRJSFSchema, SubmitButtonProps } from '@rjsf/utils';\n\n/** The `SubmitButton` renders a button that represent the `Submit` action on a form\n */\nexport default function SubmitButton<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>({ uiSchema }: SubmitButtonProps<T, S, F>) {\n  const { submitText, norender, props: submitButtonProps = {} } = getSubmitButtonOptions<T, S, F>(uiSchema);\n  if (norender) {\n    return null;\n  }\n  return (\n    <div>\n      <button type='submit' {...submitButtonProps} className={`btn btn-info ${submitButtonProps.className}`}>\n        {submitText}\n      </button>\n    </div>\n  );\n}\n","import { FormContextType, IconButtonProps, RJSFSchema, StrictRJSFSchema, TranslatableString } from '@rjsf/utils';\n\nexport default function IconButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const { iconType = 'default', icon, className, uiSchema, registry, ...otherProps } = props;\n  return (\n    <button type='button' className={`btn btn-${iconType} ${className}`} {...otherProps}>\n      <i className={`glyphicon glyphicon-${icon}`} />\n    </button>\n  );\n}\n\nexport function MoveDownButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const {\n    registry: { translateString },\n  } = props;\n  return (\n    <IconButton\n      title={translateString(TranslatableString.MoveDownButton)}\n      className='array-item-move-down'\n      {...props}\n      icon='arrow-down'\n    />\n  );\n}\n\nexport function MoveUpButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const {\n    registry: { translateString },\n  } = props;\n  return (\n    <IconButton\n      title={translateString(TranslatableString.MoveUpButton)}\n      className='array-item-move-up'\n      {...props}\n      icon='arrow-up'\n    />\n  );\n}\n\nexport function RemoveButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: IconButtonProps<T, S, F>\n) {\n  const {\n    registry: { translateString },\n  } = props;\n  return (\n    <IconButton\n      title={translateString(TranslatableString.RemoveButton)}\n      className='array-item-remove'\n      {...props}\n      iconType='danger'\n      icon='remove'\n    />\n  );\n}\n","import { FormContextType, IconButtonProps, RJSFSchema, StrictRJSFSchema, TranslatableString } from '@rjsf/utils';\n\nimport IconButton from './IconButton';\n\n/** The `AddButton` renders a button that represent the `Add` action on a form\n */\nexport default function AddButton<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  className,\n  onClick,\n  disabled,\n  registry,\n}: IconButtonProps<T, S, F>) {\n  const { translateString } = registry;\n  return (\n    <div className='row'>\n      <p className={`col-xs-3 col-xs-offset-9 text-right ${className}`}>\n        <IconButton\n          iconType='info'\n          icon='plus'\n          className='btn-add col-xs-12'\n          title={translateString(TranslatableString.AddButton)}\n          onClick={onClick}\n          disabled={disabled}\n          registry={registry}\n        />\n      </p>\n    </div>\n  );\n}\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, TemplatesType } from '@rjsf/utils';\n\nimport SubmitButton from './SubmitButton';\nimport AddButton from './AddButton';\nimport { RemoveButton, MoveDownButton, MoveUpButton } from './IconButton';\n\nfunction buttonTemplates<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): TemplatesType<T, S, F>['ButtonTemplates'] {\n  return {\n    SubmitButton,\n    AddButton,\n    MoveDownButton,\n    MoveUpButton,\n    RemoveButton,\n  };\n}\n\nexport default buttonTemplates;\n","import { DescriptionFieldProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `DescriptionField` is the template to use to render the description of a field\n *\n * @param props - The `DescriptionFieldProps` for this component\n */\nexport default function DescriptionField<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: DescriptionFieldProps<T, S, F>) {\n  const { id, description } = props;\n  if (!description) {\n    return null;\n  }\n  if (typeof description === 'string') {\n    return (\n      <p id={id} className='field-description'>\n        {description}\n      </p>\n    );\n  } else {\n    return (\n      <div id={id} className='field-description'>\n        {description}\n      </div>\n    );\n  }\n}\n","import {\n  ErrorListProps,\n  FormContextType,\n  RJSFValidationError,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n} from '@rjsf/utils';\n\n/** The `ErrorList` component is the template that renders the all the errors associated with the fields in the `Form`\n *\n * @param props - The `ErrorListProps` for this component\n */\nexport default function ErrorList<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  errors,\n  registry,\n}: ErrorListProps<T, S, F>) {\n  const { translateString } = registry;\n  return (\n    <div className='panel panel-danger errors'>\n      <div className='panel-heading'>\n        <h3 className='panel-title'>{translateString(TranslatableString.ErrorsLabel)}</h3>\n      </div>\n      <ul className='list-group'>\n        {errors.map((error: RJSFValidationError, i: number) => {\n          return (\n            <li key={i} className='list-group-item text-danger'>\n              {error.stack}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n","const REQUIRED_FIELD_SYMBOL = '*';\n\nexport type LabelProps = {\n  /** The label for the field */\n  label?: string;\n  /** A boolean value stating if the field is required */\n  required?: boolean;\n  /** The id of the input field being labeled */\n  id?: string;\n};\n\n/** Renders a label for a field\n *\n * @param props - The `LabelProps` for this component\n */\nexport default function Label(props: LabelProps) {\n  const { label, required, id } = props;\n  if (!label) {\n    return null;\n  }\n  return (\n    <label className='control-label' htmlFor={id}>\n      {label}\n      {required && <span className='required'>{REQUIRED_FIELD_SYMBOL}</span>}\n    </label>\n  );\n}\n","import {\n  FieldTemplateProps,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  getTemplate,\n  getUiOptions,\n} from '@rjsf/utils';\n\nimport Label from './Label';\n\n/** The `FieldTemplate` component is the template used by `SchemaField` to render any field. It renders the field\n * content, (label, description, children, errors and help) inside of a `WrapIfAdditional` component.\n *\n * @param props - The `FieldTemplateProps` for this component\n */\nexport default function FieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldTemplateProps<T, S, F>) {\n  const { id, label, children, errors, help, description, hidden, required, displayLabel, registry, uiSchema } = props;\n  const uiOptions = getUiOptions(uiSchema);\n  const WrapIfAdditionalTemplate = getTemplate<'WrapIfAdditionalTemplate', T, S, F>(\n    'WrapIfAdditionalTemplate',\n    registry,\n    uiOptions\n  );\n  if (hidden) {\n    return <div className='hidden'>{children}</div>;\n  }\n  return (\n    <WrapIfAdditionalTemplate {...props}>\n      {displayLabel && <Label label={label} required={required} id={id} />}\n      {displayLabel && description ? description : null}\n      {children}\n      {errors}\n      {help}\n    </WrapIfAdditionalTemplate>\n  );\n}\n","import { errorId, FieldErrorProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `FieldErrorTemplate` component renders the errors local to the particular field\n *\n * @param props - The `FieldErrorProps` for the errors being rendered\n */\nexport default function FieldErrorTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldErrorProps<T, S, F>) {\n  const { errors = [], idSchema } = props;\n  if (errors.length === 0) {\n    return null;\n  }\n  const id = errorId<T>(idSchema);\n\n  return (\n    <div>\n      <ul id={id} className='error-detail bs-callout bs-callout-info'>\n        {errors\n          .filter((elem) => !!elem)\n          .map((error, index: number) => {\n            return (\n              <li className='text-danger' key={index}>\n                {error}\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n}\n","import { helpId, FieldHelpProps, FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The `FieldHelpTemplate` component renders any help desired for a field\n *\n * @param props - The `FieldHelpProps` to be rendered\n */\nexport default function FieldHelpTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: FieldHelpProps<T, S, F>) {\n  const { idSchema, help } = props;\n  if (!help) {\n    return null;\n  }\n  const id = helpId<T>(idSchema);\n  if (typeof help === 'string') {\n    return (\n      <p id={id} className='help-block'>\n        {help}\n      </p>\n    );\n  }\n  return (\n    <div id={id} className='help-block'>\n      {help}\n    </div>\n  );\n}\n","import {\n  FormContextType,\n  ObjectFieldTemplatePropertyType,\n  ObjectFieldTemplateProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n  canExpand,\n  descriptionId,\n  getTemplate,\n  getUiOptions,\n  titleId,\n} from '@rjsf/utils';\n\n/** The `ObjectFieldTemplate` is the template to use to render all the inner properties of an object along with the\n * title and description if available. If the object is expandable, then an `AddButton` is also rendered after all\n * the properties.\n *\n * @param props - The `ObjectFieldTemplateProps` for this component\n */\nexport default function ObjectFieldTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: ObjectFieldTemplateProps<T, S, F>) {\n  const {\n    description,\n    disabled,\n    formData,\n    idSchema,\n    onAddClick,\n    properties,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n    uiSchema,\n  } = props;\n  const options = getUiOptions<T, S, F>(uiSchema);\n  const TitleFieldTemplate = getTemplate<'TitleFieldTemplate', T, S, F>('TitleFieldTemplate', registry, options);\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    options\n  );\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <fieldset id={idSchema.$id}>\n      {(options.title || title) && (\n        <TitleFieldTemplate\n          id={titleId<T>(idSchema)}\n          title={options.title || title}\n          required={required}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {(options.description || description) && (\n        <DescriptionFieldTemplate\n          id={descriptionId<T>(idSchema)}\n          description={options.description || description!}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {properties.map((prop: ObjectFieldTemplatePropertyType) => prop.content)}\n      {canExpand<T, S, F>(schema, uiSchema, formData) && (\n        <AddButton\n          className='object-property-expand'\n          onClick={onAddClick(schema)}\n          disabled={disabled || readonly}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n    </fieldset>\n  );\n}\n","import { FormContextType, TitleFieldProps, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nconst REQUIRED_FIELD_SYMBOL = '*';\n\n/** The `TitleField` is the template to use to render the title of a field\n *\n * @param props - The `TitleFieldProps` for this component\n */\nexport default function TitleField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: TitleFieldProps<T, S, F>\n) {\n  const { id, title, required } = props;\n  return (\n    <legend id={id}>\n      {title}\n      {required && <span className='required'>{REQUIRED_FIELD_SYMBOL}</span>}\n    </legend>\n  );\n}\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, TranslatableString, UnsupportedFieldProps } from '@rjsf/utils';\nimport Markdown from 'markdown-to-jsx';\n\n/** The `UnsupportedField` component is used to render a field in the schema is one that is not supported by\n * react-jsonschema-form.\n *\n * @param props - The `FieldProps` for this template\n */\nfunction UnsupportedField<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: UnsupportedFieldProps<T, S, F>\n) {\n  const { schema, idSchema, reason, registry } = props;\n  const { translateString } = registry;\n  let translateEnum: TranslatableString = TranslatableString.UnsupportedField;\n  const translateParams: string[] = [];\n  if (idSchema && idSchema.$id) {\n    translateEnum = TranslatableString.UnsupportedFieldWithId;\n    translateParams.push(idSchema.$id);\n  }\n  if (reason) {\n    translateEnum =\n      translateEnum === TranslatableString.UnsupportedField\n        ? TranslatableString.UnsupportedFieldWithReason\n        : TranslatableString.UnsupportedFieldWithIdAndReason;\n    translateParams.push(reason);\n  }\n  return (\n    <div className='unsupported-field'>\n      <p>\n        <Markdown>{translateString(translateEnum, translateParams)}</Markdown>\n      </p>\n      {schema && <pre>{JSON.stringify(schema, null, 2)}</pre>}\n    </div>\n  );\n}\n\nexport default UnsupportedField;\n","import {\n  ADDITIONAL_PROPERTY_FLAG,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  WrapIfAdditionalTemplateProps,\n} from '@rjsf/utils';\n\nimport Label from './FieldTemplate/Label';\n\n/** The `WrapIfAdditional` component is used by the `FieldTemplate` to rename, or remove properties that are\n * part of an `additionalProperties` part of a schema.\n *\n * @param props - The `WrapIfAdditionalProps` for this component\n */\nexport default function WrapIfAdditionalTemplate<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WrapIfAdditionalTemplateProps<T, S, F>) {\n  const {\n    id,\n    classNames,\n    style,\n    disabled,\n    label,\n    onKeyChange,\n    onDropPropertyClick,\n    readonly,\n    required,\n    schema,\n    children,\n    uiSchema,\n    registry,\n  } = props;\n  const { templates, translateString } = registry;\n  // Button templates are not overridden in the uiSchema\n  const { RemoveButton } = templates.ButtonTemplates;\n  const keyLabel = translateString(TranslatableString.KeyLabel, [label]);\n  const additional = ADDITIONAL_PROPERTY_FLAG in schema;\n\n  if (!additional) {\n    return (\n      <div className={classNames} style={style}>\n        {children}\n      </div>\n    );\n  }\n\n  return (\n    <div className={classNames} style={style}>\n      <div className='row'>\n        <div className='col-xs-5 form-additional'>\n          <div className='form-group'>\n            <Label label={keyLabel} required={required} id={`${id}-key`} />\n            <input\n              className='form-control'\n              type='text'\n              id={`${id}-key`}\n              onBlur={(event) => onKeyChange(event.target.value)}\n              defaultValue={label}\n            />\n          </div>\n        </div>\n        <div className='form-additional form-group col-xs-5'>{children}</div>\n        <div className='col-xs-2'>\n          <RemoveButton\n            className='array-item-remove btn-block'\n            style={{ border: '0' }}\n            disabled={disabled || readonly}\n            onClick={onDropPropertyClick(label)}\n            uiSchema={uiSchema}\n            registry={registry}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, TemplatesType } from '@rjsf/utils';\n\nimport ArrayFieldDescriptionTemplate from './ArrayFieldDescriptionTemplate';\nimport ArrayFieldItemTemplate from './ArrayFieldItemTemplate';\nimport ArrayFieldTemplate from './ArrayFieldTemplate';\nimport ArrayFieldTitleTemplate from './ArrayFieldTitleTemplate';\nimport BaseInputTemplate from './BaseInputTemplate';\nimport ButtonTemplates from './ButtonTemplates';\nimport DescriptionField from './DescriptionField';\nimport ErrorList from './ErrorList';\nimport FieldTemplate from './FieldTemplate';\nimport FieldErrorTemplate from './FieldErrorTemplate';\nimport FieldHelpTemplate from './FieldHelpTemplate';\nimport ObjectFieldTemplate from './ObjectFieldTemplate';\nimport TitleField from './TitleField';\nimport UnsupportedField from './UnsupportedField';\nimport WrapIfAdditionalTemplate from './WrapIfAdditionalTemplate';\n\nfunction templates<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(): TemplatesType<\n  T,\n  S,\n  F\n> {\n  return {\n    ArrayFieldDescriptionTemplate,\n    ArrayFieldItemTemplate,\n    ArrayFieldTemplate,\n    ArrayFieldTitleTemplate,\n    ButtonTemplates: ButtonTemplates<T, S, F>(),\n    BaseInputTemplate,\n    DescriptionFieldTemplate: DescriptionField,\n    ErrorListTemplate: ErrorList,\n    FieldTemplate,\n    FieldErrorTemplate,\n    FieldHelpTemplate,\n    ObjectFieldTemplate,\n    TitleFieldTemplate: TitleField,\n    UnsupportedFieldTemplate: UnsupportedField,\n    WrapIfAdditionalTemplate,\n  };\n}\n\nexport default templates;\n","import { MouseEvent, useCallback, useEffect, useReducer } from 'react';\nimport {\n  ariaDescribedByIds,\n  parseDateString,\n  toDateString,\n  pad,\n  DateObject,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  WidgetProps,\n} from '@rjsf/utils';\n\nfunction rangeOptions(start: number, stop: number) {\n  const options = [];\n  for (let i = start; i <= stop; i++) {\n    options.push({ value: i, label: pad(i, 2) });\n  }\n  return options;\n}\n\nfunction readyForChange(state: DateObject) {\n  return Object.values(state).every((value) => value !== -1);\n}\n\nfunction dateElementProps(\n  state: DateObject,\n  time: boolean,\n  yearsRange: [number, number] = [1900, new Date().getFullYear() + 2]\n) {\n  const { year, month, day, hour, minute, second } = state;\n  const data = [\n    {\n      type: 'year',\n      range: yearsRange,\n      value: year,\n    },\n    { type: 'month', range: [1, 12], value: month },\n    { type: 'day', range: [1, 31], value: day },\n  ] as { type: string; range: [number, number]; value: number | undefined }[];\n  if (time) {\n    data.push(\n      { type: 'hour', range: [0, 23], value: hour },\n      { type: 'minute', range: [0, 59], value: minute },\n      { type: 'second', range: [0, 59], value: second }\n    );\n  }\n  return data;\n}\n\ntype DateElementProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> = Pick<\n  WidgetProps<T, S, F>,\n  'value' | 'name' | 'disabled' | 'readonly' | 'autofocus' | 'registry' | 'onBlur' | 'onFocus'\n> & {\n  rootId: string;\n  select: (property: keyof DateObject, value: any) => void;\n  type: string;\n  range: [number, number];\n};\n\nfunction DateElement<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  type,\n  range,\n  value,\n  select,\n  rootId,\n  name,\n  disabled,\n  readonly,\n  autofocus,\n  registry,\n  onBlur,\n  onFocus,\n}: DateElementProps<T, S, F>) {\n  const id = rootId + '_' + type;\n  const { SelectWidget } = registry.widgets;\n  return (\n    <SelectWidget\n      schema={{ type: 'integer' } as S}\n      id={id}\n      name={name}\n      className='form-control'\n      options={{ enumOptions: rangeOptions(range[0], range[1]) }}\n      placeholder={type}\n      value={value}\n      disabled={disabled}\n      readonly={readonly}\n      autofocus={autofocus}\n      onChange={(value: any) => select(type as keyof DateObject, value)}\n      onBlur={onBlur}\n      onFocus={onFocus}\n      registry={registry}\n      label=''\n      aria-describedby={ariaDescribedByIds<T>(rootId)}\n    />\n  );\n}\n\n/** The `AltDateWidget` is an alternative widget for rendering date properties.\n * @param props - The `WidgetProps` for this component\n */\nfunction AltDateWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  time = false,\n  disabled = false,\n  readonly = false,\n  autofocus = false,\n  options,\n  id,\n  name,\n  registry,\n  onBlur,\n  onFocus,\n  onChange,\n  value,\n}: WidgetProps<T, S, F>) {\n  const { translateString } = registry;\n  const [state, setState] = useReducer((state: DateObject, action: Partial<DateObject>) => {\n    return { ...state, ...action };\n  }, parseDateString(value, time));\n\n  useEffect(() => {\n    if (value && value !== toDateString(state, time)) {\n      setState(parseDateString(value, time));\n    }\n  }, [value, state, time]);\n\n  useEffect(() => {\n    if (readyForChange(state)) {\n      // Only propagate to parent state if we have a complete date{time}\n      onChange(toDateString(state, time));\n    }\n  }, [state, time, onChange]);\n\n  const handleChange = useCallback((property: keyof DateObject, value: string) => {\n    setState({ [property]: value });\n  }, []);\n\n  const handleSetNow = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      if (disabled || readonly) {\n        return;\n      }\n      const nowDateObj = parseDateString(new Date().toJSON(), time);\n      setState(nowDateObj);\n    },\n    [disabled, readonly, time]\n  );\n\n  const handleClear = useCallback(\n    (event: MouseEvent<HTMLAnchorElement>) => {\n      event.preventDefault();\n      if (disabled || readonly) {\n        return;\n      }\n      setState(parseDateString('', time));\n      onChange(undefined);\n    },\n    [disabled, readonly, time, onChange]\n  );\n\n  return (\n    <ul className='list-inline'>\n      {dateElementProps(state, time, options.yearsRange as [number, number] | undefined).map((elemProps, i) => (\n        <li className='list-inline-item' key={i}>\n          <DateElement\n            rootId={id}\n            name={name}\n            select={handleChange}\n            {...elemProps}\n            disabled={disabled}\n            readonly={readonly}\n            registry={registry}\n            onBlur={onBlur}\n            onFocus={onFocus}\n            autofocus={autofocus && i === 0}\n          />\n        </li>\n      ))}\n      {(options.hideNowButton !== 'undefined' ? !options.hideNowButton : true) && (\n        <li className='list-inline-item'>\n          <a href='#' className='btn btn-info btn-now' onClick={handleSetNow}>\n            {translateString(TranslatableString.NowLabel)}\n          </a>\n        </li>\n      )}\n      {(options.hideClearButton !== 'undefined' ? !options.hideClearButton : true) && (\n        <li className='list-inline-item'>\n          <a href='#' className='btn btn-warning btn-clear' onClick={handleClear}>\n            {translateString(TranslatableString.ClearLabel)}\n          </a>\n        </li>\n      )}\n    </ul>\n  );\n}\n\nexport default AltDateWidget;\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `AltDateTimeWidget` is an alternative widget for rendering datetime properties.\n *  It uses the AltDateWidget for rendering, with the `time` prop set to true by default.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction AltDateTimeWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  time = true,\n  ...props\n}: WidgetProps<T, S, F>) {\n  const { AltDateWidget } = props.registry.widgets;\n  return <AltDateWidget time={time} {...props} />;\n}\n\nexport default AltDateTimeWidget;\n","import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  descriptionId,\n  getTemplate,\n  schemaRequiresTrueValue,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from '@rjsf/utils';\n\n/** The `CheckBoxWidget` is a widget for rendering boolean properties.\n *  It is typically used to represent a boolean.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction CheckboxWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  schema,\n  uiSchema,\n  options,\n  id,\n  value,\n  disabled,\n  readonly,\n  label,\n  autofocus = false,\n  onBlur,\n  onFocus,\n  onChange,\n  registry,\n}: WidgetProps<T, S, F>) {\n  const DescriptionFieldTemplate = getTemplate<'DescriptionFieldTemplate', T, S, F>(\n    'DescriptionFieldTemplate',\n    registry,\n    options\n  );\n  // Because an unchecked checkbox will cause html5 validation to fail, only add\n  // the \"required\" attribute if the field value must be \"true\", due to the\n  // \"const\" or \"enum\" keywords\n  const required = schemaRequiresTrueValue<S>(schema);\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => onChange(event.target.checked),\n    [onChange]\n  );\n\n  const handleBlur = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => onBlur(id, event.target.checked),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    (event: FocusEvent<HTMLInputElement>) => onFocus(id, event.target.checked),\n    [onFocus, id]\n  );\n\n  return (\n    <div className={`checkbox ${disabled || readonly ? 'disabled' : ''}`}>\n      {schema.description && (\n        <DescriptionFieldTemplate\n          id={descriptionId<T>(id)}\n          description={schema.description}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      <label>\n        <input\n          type='checkbox'\n          id={id}\n          name={id}\n          checked={typeof value === 'undefined' ? false : value}\n          required={required}\n          disabled={disabled || readonly}\n          autoFocus={autofocus}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          aria-describedby={ariaDescribedByIds<T>(id)}\n        />\n        <span>{label}</span>\n      </label>\n    </div>\n  );\n}\n\nexport default CheckboxWidget;\n","import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  enumOptionsDeselectValue,\n  enumOptionsIsSelected,\n  enumOptionsSelectValue,\n  enumOptionsValueForIndex,\n  optionId,\n  FormContextType,\n  WidgetProps,\n  RJSFSchema,\n  StrictRJSFSchema,\n} from '@rjsf/utils';\n\n/** The `CheckboxesWidget` is a widget for rendering checkbox groups.\n *  It is typically used to represent an array of enums.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction CheckboxesWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  id,\n  disabled,\n  options: { inline = false, enumOptions, enumDisabled, emptyValue },\n  value,\n  autofocus = false,\n  readonly,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps<T, S, F>) {\n  const checkboxesValues = Array.isArray(value) ? value : [value];\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onBlur(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onFocus(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onFocus, id]\n  );\n  return (\n    <div className='checkboxes' id={id}>\n      {Array.isArray(enumOptions) &&\n        enumOptions.map((option, index) => {\n          const checked = enumOptionsIsSelected<S>(option.value, checkboxesValues);\n          const itemDisabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(option.value) !== -1;\n          const disabledCls = disabled || itemDisabled || readonly ? 'disabled' : '';\n\n          const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\n            if (event.target.checked) {\n              onChange(enumOptionsSelectValue<S>(index, checkboxesValues, enumOptions));\n            } else {\n              onChange(enumOptionsDeselectValue<S>(index, checkboxesValues, enumOptions));\n            }\n          };\n\n          const checkbox = (\n            <span>\n              <input\n                type='checkbox'\n                id={optionId(id, index)}\n                name={id}\n                checked={checked}\n                value={String(index)}\n                disabled={disabled || itemDisabled || readonly}\n                autoFocus={autofocus && index === 0}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                aria-describedby={ariaDescribedByIds<T>(id)}\n              />\n              <span>{option.label}</span>\n            </span>\n          );\n          return inline ? (\n            <label key={index} className={`checkbox-inline ${disabledCls}`}>\n              {checkbox}\n            </label>\n          ) : (\n            <div key={index} className={`checkbox ${disabledCls}`}>\n              <label>{checkbox}</label>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default CheckboxesWidget;\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `ColorWidget` component uses the `BaseInputTemplate` changing the type to `color` and disables it when it is\n * either disabled or readonly.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function ColorWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { disabled, readonly, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='color' {...props} disabled={disabled || readonly} />;\n}\n","import { useCallback } from 'react';\nimport { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `DateWidget` component uses the `BaseInputTemplate` changing the type to `date` and transforms\n * the value to undefined when it is falsy during the `onChange` handling.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function DateWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { onChange, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  const handleChange = useCallback((value: any) => onChange(value || undefined), [onChange]);\n\n  return <BaseInputTemplate type='date' {...props} onChange={handleChange} />;\n}\n","import {\n  getTemplate,\n  localToUTC,\n  utcToLocal,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from '@rjsf/utils';\n\n/** The `DateTimeWidget` component uses the `BaseInputTemplate` changing the type to `datetime-local` and transforms\n * the value to/from utc using the appropriate utility functions.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function DateTimeWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { onChange, value, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return (\n    <BaseInputTemplate\n      type='datetime-local'\n      {...props}\n      value={utcToLocal(value)}\n      onChange={(value) => onChange(localToUTC(value))}\n    />\n  );\n}\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `EmailWidget` component uses the `BaseInputTemplate` changing the type to `email`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function EmailWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='email' {...props} />;\n}\n","import { ChangeEvent, useCallback, useMemo, useState } from 'react';\nimport {\n  dataURItoBlob,\n  getTemplate,\n  FormContextType,\n  Registry,\n  RJSFSchema,\n  StrictRJSFSchema,\n  TranslatableString,\n  WidgetProps,\n} from '@rjsf/utils';\nimport Markdown from 'markdown-to-jsx';\n\nfunction addNameToDataURL(dataURL: string, name: string) {\n  if (dataURL === null) {\n    return null;\n  }\n  return dataURL.replace(';base64', `;name=${encodeURIComponent(name)};base64`);\n}\n\ntype FileInfoType = {\n  dataURL?: string | null;\n  name: string;\n  size: number;\n  type: string;\n};\n\nfunction processFile(file: File): Promise<FileInfoType> {\n  const { name, size, type } = file;\n  return new Promise((resolve, reject) => {\n    const reader = new window.FileReader();\n    reader.onerror = reject;\n    reader.onload = (event) => {\n      if (typeof event.target?.result === 'string') {\n        resolve({\n          dataURL: addNameToDataURL(event.target.result, name),\n          name,\n          size,\n          type,\n        });\n      } else {\n        resolve({\n          dataURL: null,\n          name,\n          size,\n          type,\n        });\n      }\n    };\n    reader.readAsDataURL(file);\n  });\n}\n\nfunction processFiles(files: FileList) {\n  return Promise.all(Array.from(files).map(processFile));\n}\n\nfunction FilesInfo<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  filesInfo,\n  registry,\n}: {\n  filesInfo: { name: string; size: number; type: string }[];\n  registry: Registry<T, S, F>;\n}) {\n  if (filesInfo.length === 0) {\n    return null;\n  }\n  const { translateString } = registry;\n  return (\n    <ul className='file-info'>\n      {filesInfo.map((fileInfo, key) => {\n        const { name, size, type } = fileInfo;\n        return (\n          <li key={key}>\n            <Markdown>{translateString(TranslatableString.FilesInfo, [name, type, String(size)])}</Markdown>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction extractFileInfo(dataURLs: string[]) {\n  return dataURLs\n    .filter((dataURL) => dataURL)\n    .map((dataURL) => {\n      const { blob, name } = dataURItoBlob(dataURL);\n      return {\n        name: name,\n        size: blob.size,\n        type: blob.type,\n      };\n    });\n}\n\n/**\n *  The `FileWidget` is a widget for rendering file upload fields.\n *  It is typically used with a string property with data-url format.\n */\nfunction FileWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { disabled, readonly, multiple, onChange, value, options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  const extractedFilesInfo = useMemo(\n    () => (Array.isArray(value) ? extractFileInfo(value) : extractFileInfo([value])),\n    [value]\n  );\n  const [filesInfo, setFilesInfo] = useState<FileInfoType[]>(extractedFilesInfo);\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      if (!event.target.files) {\n        return;\n      }\n      processFiles(event.target.files).then((filesInfoEvent) => {\n        setFilesInfo(filesInfoEvent);\n        const newValue = filesInfoEvent.map((fileInfo) => fileInfo.dataURL);\n        if (multiple) {\n          onChange(newValue);\n        } else {\n          onChange(newValue[0]);\n        }\n      });\n    },\n    [multiple, onChange]\n  );\n\n  return (\n    <div>\n      <BaseInputTemplate\n        {...props}\n        disabled={disabled || readonly}\n        type='file'\n        onChangeOverride={handleChange}\n        value=''\n        accept={options.accept ? String(options.accept) : undefined}\n      />\n      <FilesInfo<T, S, F> filesInfo={filesInfo} registry={registry} />\n    </div>\n  );\n}\n\nexport default FileWidget;\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `HiddenWidget` is a widget for rendering a hidden input field.\n *  It is typically used by setting type to \"hidden\".\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction HiddenWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  id,\n  value,\n}: WidgetProps<T, S, F>) {\n  return <input type='hidden' id={id} name={id} value={typeof value === 'undefined' ? '' : value} />;\n}\n\nexport default HiddenWidget;\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `PasswordWidget` component uses the `BaseInputTemplate` changing the type to `password`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function PasswordWidget<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(props: WidgetProps<T, S, F>) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='password' {...props} />;\n}\n","import { FocusEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  enumOptionsIsSelected,\n  enumOptionsValueForIndex,\n  optionId,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from '@rjsf/utils';\n\n/** The `RadioWidget` is a widget for rendering a radio group.\n *  It is typically used with a string property constrained with enum options.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction RadioWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  autofocus = false,\n  onBlur,\n  onFocus,\n  onChange,\n  id,\n}: WidgetProps<T, S, F>) {\n  // Generating a unique field name to identify this set of radio buttons\n  const name = Math.random().toString();\n  const { enumOptions, enumDisabled, inline, emptyValue } = options;\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onBlur(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLInputElement>) =>\n      onFocus(id, enumOptionsValueForIndex<S>(value, enumOptions, emptyValue)),\n    [onFocus, id]\n  );\n\n  return (\n    <div className='field-radio-group' id={id}>\n      {Array.isArray(enumOptions) &&\n        enumOptions.map((option, i) => {\n          const checked = enumOptionsIsSelected<S>(option.value, value);\n          const itemDisabled = Array.isArray(enumDisabled) && enumDisabled.indexOf(option.value) !== -1;\n          const disabledCls = disabled || itemDisabled || readonly ? 'disabled' : '';\n\n          const handleChange = () => onChange(option.value);\n\n          const radio = (\n            <span>\n              <input\n                type='radio'\n                id={optionId(id, i)}\n                checked={checked}\n                name={name}\n                required={required}\n                value={String(i)}\n                disabled={disabled || itemDisabled || readonly}\n                autoFocus={autofocus && i === 0}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                onFocus={handleFocus}\n                aria-describedby={ariaDescribedByIds<T>(id)}\n              />\n              <span>{option.label}</span>\n            </span>\n          );\n\n          return inline ? (\n            <label key={i} className={`radio-inline ${disabledCls}`}>\n              {radio}\n            </label>\n          ) : (\n            <div key={i} className={`radio ${disabledCls}`}>\n              <label>{radio}</label>\n            </div>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default RadioWidget;\n","import { FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `RangeWidget` component uses the `BaseInputTemplate` changing the type to `range` and wrapping the result\n * in a div, with the value along side it.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function RangeWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const {\n    value,\n    registry: {\n      templates: { BaseInputTemplate },\n    },\n  } = props;\n  return (\n    <div className='field-range-wrapper'>\n      <BaseInputTemplate type='range' {...props} />\n      <span className='range-view'>{value}</span>\n    </div>\n  );\n}\n","import { ChangeEvent, FocusEvent, SyntheticEvent, useCallback } from 'react';\nimport {\n  ariaDescribedByIds,\n  enumOptionsIndexForValue,\n  enumOptionsValueForIndex,\n  FormContextType,\n  RJSFSchema,\n  StrictRJSFSchema,\n  WidgetProps,\n} from '@rjsf/utils';\n\nfunction getValue(event: SyntheticEvent<HTMLSelectElement>, multiple: boolean) {\n  if (multiple) {\n    return Array.from((event.target as HTMLSelectElement).options)\n      .slice()\n      .filter((o) => o.selected)\n      .map((o) => o.value);\n  }\n  return (event.target as HTMLSelectElement).value;\n}\n\n/** The `SelectWidget` is a widget for rendering dropdowns.\n *  It is typically used with string properties constrained with enum options.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction SelectWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  schema,\n  id,\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  multiple = false,\n  autofocus = false,\n  onChange,\n  onBlur,\n  onFocus,\n  placeholder,\n}: WidgetProps<T, S, F>) {\n  const { enumOptions, enumDisabled, emptyValue: optEmptyVal } = options;\n  const emptyValue = multiple ? [] : '';\n\n  const handleFocus = useCallback(\n    (event: FocusEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onFocus(id, enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyVal));\n    },\n    [onFocus, id, schema, multiple, options]\n  );\n\n  const handleBlur = useCallback(\n    (event: FocusEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onBlur(id, enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyVal));\n    },\n    [onBlur, id, schema, multiple, options]\n  );\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLSelectElement>) => {\n      const newValue = getValue(event, multiple);\n      return onChange(enumOptionsValueForIndex<S>(newValue, enumOptions, optEmptyVal));\n    },\n    [onChange, schema, multiple, options]\n  );\n\n  const selectedIndexes = enumOptionsIndexForValue<S>(value, enumOptions, multiple);\n\n  return (\n    <select\n      id={id}\n      name={id}\n      multiple={multiple}\n      className='form-control'\n      value={typeof selectedIndexes === 'undefined' ? emptyValue : selectedIndexes}\n      required={required}\n      disabled={disabled || readonly}\n      autoFocus={autofocus}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onChange={handleChange}\n      aria-describedby={ariaDescribedByIds<T>(id)}\n    >\n      {!multiple && schema.default === undefined && <option value=''>{placeholder}</option>}\n      {Array.isArray(enumOptions) &&\n        enumOptions.map(({ value, label }, i) => {\n          const disabled = enumDisabled && enumDisabled.indexOf(value) !== -1;\n          return (\n            <option key={i} value={String(i)} disabled={disabled}>\n              {label}\n            </option>\n          );\n        })}\n    </select>\n  );\n}\n\nexport default SelectWidget;\n","import { ChangeEvent, FocusEvent, useCallback } from 'react';\nimport { ariaDescribedByIds, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `TextareaWidget` is a widget for rendering input fields as textarea.\n *\n * @param props - The `WidgetProps` for this component\n */\nfunction TextareaWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>({\n  id,\n  options = {},\n  placeholder,\n  value,\n  required,\n  disabled,\n  readonly,\n  autofocus = false,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps<T, S, F>) {\n  const handleChange = useCallback(\n    ({ target: { value } }: ChangeEvent<HTMLTextAreaElement>) => onChange(value === '' ? options.emptyValue : value),\n    [onChange, options.emptyValue]\n  );\n\n  const handleBlur = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLTextAreaElement>) => onBlur(id, value),\n    [onBlur, id]\n  );\n\n  const handleFocus = useCallback(\n    ({ target: { value } }: FocusEvent<HTMLTextAreaElement>) => onFocus(id, value),\n    [id, onFocus]\n  );\n\n  return (\n    <textarea\n      id={id}\n      name={id}\n      className='form-control'\n      value={value ? value : ''}\n      placeholder={placeholder}\n      required={required}\n      disabled={disabled}\n      readOnly={readonly}\n      autoFocus={autofocus}\n      rows={options.rows}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onChange={handleChange}\n      aria-describedby={ariaDescribedByIds<T>(id)}\n    />\n  );\n}\n\nTextareaWidget.defaultProps = {\n  autofocus: false,\n  options: {},\n};\n\nexport default TextareaWidget;\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `TextWidget` component uses the `BaseInputTemplate`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function TextWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate {...props} />;\n}\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `URLWidget` component uses the `BaseInputTemplate` changing the type to `url`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function URLWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='url' {...props} />;\n}\n","import { getTemplate, FormContextType, RJSFSchema, StrictRJSFSchema, WidgetProps } from '@rjsf/utils';\n\n/** The `UpDownWidget` component uses the `BaseInputTemplate` changing the type to `number`.\n *\n * @param props - The `WidgetProps` for this component\n */\nexport default function UpDownWidget<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  props: WidgetProps<T, S, F>\n) {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<'BaseInputTemplate', T, S, F>('BaseInputTemplate', registry, options);\n  return <BaseInputTemplate type='number' {...props} />;\n}\n","import { FormContextType, RegistryWidgetsType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nimport AltDateWidget from './AltDateWidget';\nimport AltDateTimeWidget from './AltDateTimeWidget';\nimport CheckboxWidget from './CheckboxWidget';\nimport CheckboxesWidget from './CheckboxesWidget';\nimport ColorWidget from './ColorWidget';\nimport DateWidget from './DateWidget';\nimport DateTimeWidget from './DateTimeWidget';\nimport EmailWidget from './EmailWidget';\nimport FileWidget from './FileWidget';\nimport HiddenWidget from './HiddenWidget';\nimport PasswordWidget from './PasswordWidget';\nimport RadioWidget from './RadioWidget';\nimport RangeWidget from './RangeWidget';\nimport SelectWidget from './SelectWidget';\nimport TextareaWidget from './TextareaWidget';\nimport TextWidget from './TextWidget';\nimport URLWidget from './URLWidget';\nimport UpDownWidget from './UpDownWidget';\n\nfunction widgets<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): RegistryWidgetsType<T, S, F> {\n  return {\n    PasswordWidget,\n    RadioWidget,\n    UpDownWidget,\n    RangeWidget,\n    SelectWidget,\n    TextWidget,\n    DateWidget,\n    DateTimeWidget,\n    AltDateWidget,\n    AltDateTimeWidget,\n    EmailWidget,\n    URLWidget,\n    TextareaWidget,\n    HiddenWidget,\n    ColorWidget,\n    FileWidget,\n    CheckboxWidget,\n    CheckboxesWidget,\n  };\n}\n\nexport default widgets;\n","import { englishStringTranslator, FormContextType, Registry, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\nimport fields from './components/fields';\nimport templates from './components/templates';\nimport widgets from './components/widgets';\n\n/** The default registry consists of all the fields, templates and widgets provided in the core implementation,\n * plus an empty `rootSchema` and `formContext. We omit schemaUtils here because it cannot be defaulted without a\n * rootSchema and validator. It will be added into the computed registry later in the Form.\n */\nexport default function getDefaultRegistry<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n>(): Omit<Registry<T, S, F>, 'schemaUtils'> {\n  return {\n    fields: fields<T, S, F>(),\n    templates: templates<T, S, F>(),\n    widgets: widgets<T, S, F>(),\n    rootSchema: {} as S,\n    formContext: {} as F,\n    translateString: englishStringTranslator,\n  };\n}\n","import { Component, ElementType, FormEvent, ReactNode, Ref, RefObject, createRef } from 'react';\nimport {\n  createSchemaUtils,\n  CustomValidator,\n  deepEquals,\n  ErrorSchema,\n  ErrorTransformer,\n  FormContextType,\n  GenericObjectType,\n  getTemplate,\n  getUiOptions,\n  IdSchema,\n  isObject,\n  mergeObjects,\n  NAME_KEY,\n  PathSchema,\n  StrictRJSFSchema,\n  Registry,\n  RegistryFieldsType,\n  RegistryWidgetsType,\n  RJSFSchema,\n  RJSFValidationError,\n  RJSF_ADDITONAL_PROPERTIES_FLAG,\n  SchemaUtilsType,\n  shouldRender,\n  TemplatesType,\n  UiSchema,\n  ValidationData,\n  ValidatorType,\n} from '@rjsf/utils';\nimport _get from 'lodash/get';\nimport _isEmpty from 'lodash/isEmpty';\nimport _pick from 'lodash/pick';\nimport _toPath from 'lodash/toPath';\n\nimport getDefaultRegistry from '../getDefaultRegistry';\n\n/** The properties that are passed to the `Form` */\nexport interface FormProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> {\n  /** The JSON schema object for the form */\n  schema: S;\n  /** An implementation of the `ValidatorType` interface that is needed for form validation to work */\n  validator: ValidatorType<T, S, F>;\n  /** The optional children for the form, if provided, it will replace the default `SubmitButton` */\n  children?: ReactNode;\n  /** The uiSchema for the form */\n  uiSchema?: UiSchema<T, S, F>;\n  /** The data for the form, used to prefill a form with existing data */\n  formData?: T;\n  // Form presentation and behavior modifiers\n  /** You can provide a `formContext` object to the form, which is passed down to all fields and widgets. Useful for\n   * implementing context aware fields and widgets.\n   *\n   * NOTE: Setting `{readonlyAsDisabled: false}` on the formContext will make the antd theme treat readOnly fields as\n   * disabled.\n   */\n  formContext?: F;\n  /** To avoid collisions with existing ids in the DOM, it is possible to change the prefix used for ids;\n   * Default is `root`\n   */\n  idPrefix?: string;\n  /** To avoid using a path separator that is present in field names, it is possible to change the separator used for\n   * ids (Default is `_`)\n   */\n  idSeparator?: string;\n  /** It's possible to disable the whole form by setting the `disabled` prop. The `disabled` prop is then forwarded down\n   * to each field of the form. If you just want to disable some fields, see the `ui:disabled` parameter in `uiSchema`\n   */\n  disabled?: boolean;\n  /** It's possible to make the whole form read-only by setting the `readonly` prop. The `readonly` prop is then\n   * forwarded down to each field of the form. If you just want to make some fields read-only, see the `ui:readonly`\n   * parameter in `uiSchema`\n   */\n  readonly?: boolean;\n  // Form registry\n  /** The dictionary of registered fields in the form */\n  fields?: RegistryFieldsType<T, S, F>;\n  /** The dictionary of registered templates in the form; Partial allows a subset to be provided beyond the defaults */\n  templates?: Partial<Omit<TemplatesType<T, S, F>, 'ButtonTemplates'>> & {\n    ButtonTemplates?: Partial<TemplatesType<T, S, F>['ButtonTemplates']>;\n  };\n  /** The dictionary of registered widgets in the form */\n  widgets?: RegistryWidgetsType<T, S, F>;\n  // Callbacks\n  /** If you plan on being notified every time the form data are updated, you can pass an `onChange` handler, which will\n   * receive the same args as `onSubmit` any time a value is updated in the form. Can also return the `id` of the field\n   * that caused the change\n   */\n  onChange?: (data: IChangeEvent<T, S, F>, id?: string) => void;\n  /** To react when submitted form data are invalid, pass an `onError` handler. It will be passed the list of\n   * encountered errors\n   */\n  onError?: (errors: RJSFValidationError[]) => void;\n  /** You can pass a function as the `onSubmit` prop of your `Form` component to listen to when the form is submitted\n   * and its data are valid. It will be passed a result object having a `formData` attribute, which is the valid form\n   * data you're usually after. The original event will also be passed as a second parameter\n   */\n  onSubmit?: (data: IChangeEvent<T, S, F>, event: FormEvent<any>) => void;\n  /** Sometimes you may want to trigger events or modify external state when a field has been touched, so you can pass\n   * an `onBlur` handler, which will receive the id of the input that was blurred and the field value\n   */\n  onBlur?: (id: string, data: any) => void;\n  /** Sometimes you may want to trigger events or modify external state when a field has been focused, so you can pass\n   * an `onFocus` handler, which will receive the id of the input that is focused and the field value\n   */\n  onFocus?: (id: string, data: any) => void;\n  // <form /> HTML attributes\n  /** The value of this prop will be passed to the `accept-charset` HTML attribute on the form */\n  acceptcharset?: string;\n  /** The value of this prop will be passed to the `action` HTML attribute on the form\n   *\n   * NOTE: this just renders the `action` attribute in the HTML markup. There is no real network request being sent to\n   * this `action` on submit. Instead, react-jsonschema-form catches the submit event with `event.preventDefault()`\n   * and then calls the `onSubmit` function, where you could send a request programmatically with `fetch` or similar.\n   */\n  action?: string;\n  /** The value of this prop will be passed to the `autocomplete` HTML attribute on the form */\n  autoComplete?: string;\n  /** The value of this prop will be passed to the `class` HTML attribute on the form */\n  className?: string;\n  /** The value of this prop will be passed to the `enctype` HTML attribute on the form */\n  enctype?: string;\n  /** The value of this prop will be passed to the `id` HTML attribute on the form */\n  id?: string;\n  /** The value of this prop will be passed to the `name` HTML attribute on the form */\n  name?: string;\n  /** The value of this prop will be passed to the `method` HTML attribute on the form */\n  method?: string;\n  /** It's possible to change the default `form` tag name to a different HTML tag, which can be helpful if you are\n   * nesting forms. However, native browser form behaviour, such as submitting when the `Enter` key is pressed, may no\n   * longer work\n   */\n  tagName?: ElementType;\n  /** The value of this prop will be passed to the `target` HTML attribute on the form */\n  target?: string;\n  // Errors and validation\n  /** Formerly the `validate` prop; Takes a function that specifies custom validation rules for the form */\n  customValidate?: CustomValidator<T, S, F>;\n  /** This prop allows passing in custom errors that are augmented with the existing JSON Schema errors on the form; it\n   * can be used to implement asynchronous validation\n   */\n  extraErrors?: ErrorSchema<T>;\n  /** If set to true, turns off HTML5 validation on the form; Set to `false` by default */\n  noHtml5Validate?: boolean;\n  /** If set to true, turns off all validation. Set to `false` by default\n   *\n   * @deprecated - In a future release, this switch may be replaced by making `validator` prop optional\n   */\n  noValidate?: boolean;\n  /** If set to true, the form will perform validation and show any validation errors whenever the form data is changed,\n   * rather than just on submit\n   */\n  liveValidate?: boolean;\n  /** If `omitExtraData` and `liveOmit` are both set to true, then extra form data values that are not in any form field\n   * will be removed whenever `onChange` is called. Set to `false` by default\n   */\n  liveOmit?: boolean;\n  /** If set to true, then extra form data values that are not in any form field will be removed whenever `onSubmit` is\n   * called. Set to `false` by default.\n   */\n  omitExtraData?: boolean;\n  /** When this prop is set to `top` or 'bottom', a list of errors (or the custom error list defined in the `ErrorList`) will also\n   * show. When set to false, only inline input validation errors will be shown. Set to `top` by default\n   */\n  showErrorList?: false | 'top' | 'bottom';\n  /** A function can be passed to this prop in order to make modifications to the default errors resulting from JSON\n   * Schema validation\n   */\n  transformErrors?: ErrorTransformer<T, S, F>;\n  /** If set to true, then the first field with an error will receive the focus when the form is submitted with errors\n   */\n  focusOnFirstError?: boolean;\n  /** Optional string translation function, if provided, allows users to change the translation of the RJSF internal\n   * strings. Some strings contain replaceable parameter values as indicated by `%1`, `%2`, etc. The number after the\n   * `%` indicates the order of the parameter. The ordering of parameters is important because some languages may choose\n   * to put the second parameter before the first in its translation.\n   */\n  translateString?: Registry['translateString'];\n  // Private\n  /**\n   * _internalFormWrapper is currently used by the semantic-ui theme to provide a custom wrapper around `<Form />`\n   * that supports the proper rendering of those themes. To use this prop, one must pass a component that takes two\n   * props: `children` and `as`. That component, at minimum, should render the `children` inside of a <form /> tag\n   * unless `as` is provided, in which case, use the `as` prop in place of `<form />`.\n   * i.e.:\n   * ```\n   * export default function InternalForm({ children, as }) {\n   *   const FormTag = as || 'form';\n   *   return <FormTag>{children}</FormTag>;\n   * }\n   * ```\n   *\n   * Use at your own risk as this prop is private and may change at any time without notice.\n   */\n  _internalFormWrapper?: ElementType;\n  /** Support receiving a React ref to the Form\n   */\n  ref?: Ref<Form<T, S, F>>;\n}\n\n/** The data that is contained within the state for the `Form` */\nexport interface FormState<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> {\n  /** The JSON schema object for the form */\n  schema: S;\n  /** The uiSchema for the form */\n  uiSchema: UiSchema<T, S, F>;\n  /** The `IdSchema` for the form, computed from the `schema`, the `rootFieldId`, the `formData` and the `idPrefix` and\n   * `idSeparator` props.\n   */\n  idSchema: IdSchema<T>;\n  /** The schemaUtils implementation used by the `Form`, created from the `validator` and the `schema` */\n  schemaUtils: SchemaUtilsType<T, S, F>;\n  /** The current data for the form, computed from the `formData` prop and the changes made by the user */\n  formData?: T;\n  /** Flag indicating whether the form is in edit mode, true when `formData` is passed to the form, otherwise false */\n  edit: boolean;\n  /** The current list of errors for the form, includes `extraErrors` */\n  errors: RJSFValidationError[];\n  /** The current errors, in `ErrorSchema` format, for the form, includes `extraErrors` */\n  errorSchema: ErrorSchema<T>;\n  /** The current list of errors for the form directly from schema validation, does NOT include `extraErrors` */\n  schemaValidationErrors: RJSFValidationError[];\n  /** The current errors, in `ErrorSchema` format, for the form directly from schema validation, does NOT include\n   * `extraErrors`\n   */\n  schemaValidationErrorSchema: ErrorSchema<T>;\n}\n\n/** The event data passed when changes have been made to the form, includes everything from the `FormState` except\n * the schema validation errors. An additional `status` is added when returned from `onSubmit`\n */\nexport interface IChangeEvent<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>\n  extends Omit<FormState<T, S, F>, 'schemaValidationErrors' | 'schemaValidationErrorSchema'> {\n  /** The status of the form when submitted */\n  status?: 'submitted';\n}\n\n/** The `Form` component renders the outer form and all the fields defined in the `schema` */\nexport default class Form<\n  T = any,\n  S extends StrictRJSFSchema = RJSFSchema,\n  F extends FormContextType = any\n> extends Component<FormProps<T, S, F>, FormState<T, S, F>> {\n  /** The ref used to hold the `form` element, this needs to be `any` because `tagName` or `_internalFormWrapper` can\n   * provide any possible type here\n   */\n  formElement: RefObject<any>;\n\n  /** Constructs the `Form` from the `props`. Will setup the initial state from the props. It will also call the\n   * `onChange` handler if the initially provided `formData` is modified to add missing default values as part of the\n   * state construction.\n   *\n   * @param props - The initial props for the `Form`\n   */\n  constructor(props: FormProps<T, S, F>) {\n    super(props);\n\n    if (!props.validator) {\n      throw new Error('A validator is required for Form functionality to work');\n    }\n\n    this.state = this.getStateFromProps(props, props.formData);\n    if (this.props.onChange && !deepEquals(this.state.formData, this.props.formData)) {\n      this.props.onChange(this.state);\n    }\n    this.formElement = createRef();\n  }\n\n  /** React lifecycle method that gets called before new props are provided, updates the state based on new props. It\n   * will also call the`onChange` handler if the `formData` is modified to add missing default values as part of the\n   * state construction.\n   *\n   * @param nextProps - The new set of props about to be applied to the `Form`\n   */\n  UNSAFE_componentWillReceiveProps(nextProps: FormProps<T, S, F>) {\n    const nextState = this.getStateFromProps(nextProps, nextProps.formData);\n    if (\n      !deepEquals(nextState.formData, nextProps.formData) &&\n      !deepEquals(nextState.formData, this.state.formData) &&\n      nextProps.onChange\n    ) {\n      nextProps.onChange(nextState);\n    }\n    this.setState(nextState);\n  }\n\n  /** Extracts the updated state from the given `props` and `inputFormData`. As part of this process, the\n   * `inputFormData` is first processed to add any missing required defaults. After that, the data is run through the\n   * validation process IF required by the `props`.\n   *\n   * @param props - The props passed to the `Form`\n   * @param inputFormData - The new or current data for the `Form`\n   * @returns - The new state for the `Form`\n   */\n  getStateFromProps(props: FormProps<T, S, F>, inputFormData?: T): FormState<T, S, F> {\n    const state: FormState<T, S, F> = this.state || {};\n    const schema = 'schema' in props ? props.schema : this.props.schema;\n    const uiSchema: UiSchema<T, S, F> = ('uiSchema' in props ? props.uiSchema! : this.props.uiSchema!) || {};\n    const edit = typeof inputFormData !== 'undefined';\n    const liveValidate = 'liveValidate' in props ? props.liveValidate : this.props.liveValidate;\n    const mustValidate = edit && !props.noValidate && liveValidate;\n    const rootSchema = schema;\n    let schemaUtils: SchemaUtilsType<T, S, F> = state.schemaUtils;\n    if (!schemaUtils || schemaUtils.doesSchemaUtilsDiffer(props.validator, rootSchema)) {\n      schemaUtils = createSchemaUtils<T, S, F>(props.validator, rootSchema);\n    }\n    const formData: T = schemaUtils.getDefaultFormState(schema, inputFormData) as T;\n    const retrievedSchema = schemaUtils.retrieveSchema(schema, formData);\n\n    const getCurrentErrors = (): ValidationData<T> => {\n      if (props.noValidate) {\n        return { errors: [], errorSchema: {} };\n      } else if (!props.liveValidate) {\n        return {\n          errors: state.schemaValidationErrors || [],\n          errorSchema: state.schemaValidationErrorSchema || {},\n        };\n      }\n      return {\n        errors: state.errors || [],\n        errorSchema: state.errorSchema || {},\n      };\n    };\n\n    let errors: RJSFValidationError[];\n    let errorSchema: ErrorSchema<T> | undefined;\n    let schemaValidationErrors: RJSFValidationError[] = state.schemaValidationErrors;\n    let schemaValidationErrorSchema: ErrorSchema<T> = state.schemaValidationErrorSchema;\n    if (mustValidate) {\n      const schemaValidation = this.validate(formData, schema, schemaUtils);\n      errors = schemaValidation.errors;\n      errorSchema = schemaValidation.errorSchema;\n      schemaValidationErrors = errors;\n      schemaValidationErrorSchema = errorSchema;\n    } else {\n      const currentErrors = getCurrentErrors();\n      errors = currentErrors.errors;\n      errorSchema = currentErrors.errorSchema;\n    }\n    if (props.extraErrors) {\n      const merged = schemaUtils.mergeValidationData({ errorSchema, errors }, props.extraErrors);\n      errorSchema = merged.errorSchema;\n      errors = merged.errors;\n    }\n    const idSchema = schemaUtils.toIdSchema(\n      retrievedSchema,\n      uiSchema['ui:rootFieldId'],\n      formData,\n      props.idPrefix,\n      props.idSeparator\n    );\n    const nextState: FormState<T, S, F> = {\n      schemaUtils,\n      schema,\n      uiSchema,\n      idSchema,\n      formData,\n      edit,\n      errors,\n      errorSchema,\n      schemaValidationErrors,\n      schemaValidationErrorSchema,\n    };\n    return nextState;\n  }\n\n  /** React lifecycle method that is used to determine whether component should be updated.\n   *\n   * @param nextProps - The next version of the props\n   * @param nextState - The next version of the state\n   * @returns - True if the component should be updated, false otherwise\n   */\n  shouldComponentUpdate(nextProps: FormProps<T, S, F>, nextState: FormState<T, S, F>): boolean {\n    return shouldRender(this, nextProps, nextState);\n  }\n\n  /** Validates the `formData` against the `schema` using the `altSchemaUtils` (if provided otherwise it uses the\n   * `schemaUtils` in the state), returning the results.\n   *\n   * @param formData - The new form data to validate\n   * @param schema - The schema used to validate against\n   * @param altSchemaUtils - The alternate schemaUtils to use for validation\n   */\n  validate(\n    formData: T | undefined,\n    schema = this.props.schema,\n    altSchemaUtils?: SchemaUtilsType<T, S, F>\n  ): ValidationData<T> {\n    const schemaUtils = altSchemaUtils ? altSchemaUtils : this.state.schemaUtils;\n    const { customValidate, transformErrors, uiSchema } = this.props;\n    const resolvedSchema = schemaUtils.retrieveSchema(schema, formData);\n    return schemaUtils\n      .getValidator()\n      .validateFormData(formData, resolvedSchema, customValidate, transformErrors, uiSchema);\n  }\n\n  /** Renders any errors contained in the `state` in using the `ErrorList`, if not disabled by `showErrorList`. */\n  renderErrors(registry: Registry<T, S, F>) {\n    const { errors, errorSchema, schema, uiSchema } = this.state;\n    const { formContext } = this.props;\n    const options = getUiOptions<T, S, F>(uiSchema);\n    const ErrorListTemplate = getTemplate<'ErrorListTemplate', T, S, F>('ErrorListTemplate', registry, options);\n\n    if (errors && errors.length) {\n      return (\n        <ErrorListTemplate\n          errors={errors}\n          errorSchema={errorSchema || {}}\n          schema={schema}\n          uiSchema={uiSchema}\n          formContext={formContext}\n          registry={registry}\n        />\n      );\n    }\n    return null;\n  }\n\n  /** Returns the `formData` with only the elements specified in the `fields` list\n   *\n   * @param formData - The data for the `Form`\n   * @param fields - The fields to keep while filtering\n   */\n  getUsedFormData = (formData: T | undefined, fields: string[][]): T | undefined => {\n    // For the case of a single input form\n    if (fields.length === 0 && typeof formData !== 'object') {\n      return formData;\n    }\n\n    // _pick has incorrect type definition, it works with string[][], because lodash/hasIn supports it\n    const data: GenericObjectType = _pick(formData, fields as unknown as string[]);\n    if (Array.isArray(formData)) {\n      return Object.keys(data).map((key: string) => data[key]) as unknown as T;\n    }\n\n    return data as T;\n  };\n\n  /** Returns the list of field names from inspecting the `pathSchema` as well as using the `formData`\n   *\n   * @param pathSchema - The `PathSchema` object for the form\n   * @param [formData] - The form data to use while checking for empty objects/arrays\n   */\n  getFieldNames = (pathSchema: PathSchema<T>, formData?: T): string[][] => {\n    const getAllPaths = (_obj: GenericObjectType, acc: string[][] = [], paths: string[][] = [[]]) => {\n      Object.keys(_obj).forEach((key: string) => {\n        if (typeof _obj[key] === 'object') {\n          const newPaths = paths.map((path) => [...path, key]);\n          // If an object is marked with additionalProperties, all its keys are valid\n          if (_obj[key][RJSF_ADDITONAL_PROPERTIES_FLAG] && _obj[key][NAME_KEY] !== '') {\n            acc.push(_obj[key][NAME_KEY]);\n          } else {\n            getAllPaths(_obj[key], acc, newPaths);\n          }\n        } else if (key === NAME_KEY && _obj[key] !== '') {\n          paths.forEach((path) => {\n            const formValue = _get(formData, path);\n            // adds path to fieldNames if it points to a value\n            // or an empty object/array\n            if (typeof formValue !== 'object' || _isEmpty(formValue)) {\n              acc.push(path);\n            }\n          });\n        }\n      });\n      return acc;\n    };\n\n    return getAllPaths(pathSchema);\n  };\n\n  /** Function to handle changes made to a field in the `Form`. This handler receives an entirely new copy of the\n   * `formData` along with a new `ErrorSchema`. It will first update the `formData` with any missing default fields and\n   * then, if `omitExtraData` and `liveOmit` are turned on, the `formData` will be filterer to remove any extra data not\n   * in a form field. Then, the resulting formData will be validated if required. The state will be updated with the new\n   * updated (potentially filtered) `formData`, any errors that resulted from validation. Finally the `onChange`\n   * callback will be called if specified with the updated state.\n   *\n   * @param formData - The new form data from a change to a field\n   * @param newErrorSchema - The new `ErrorSchema` based on the field change\n   * @param id - The id of the field that caused the change\n   */\n  onChange = (formData: T | undefined, newErrorSchema?: ErrorSchema<T>, id?: string) => {\n    const { extraErrors, omitExtraData, liveOmit, noValidate, liveValidate, onChange } = this.props;\n    const { schemaUtils, schema } = this.state;\n    if (isObject(formData) || Array.isArray(formData)) {\n      const newState = this.getStateFromProps(this.props, formData);\n      formData = newState.formData;\n    }\n\n    const mustValidate = !noValidate && liveValidate;\n    let state: Partial<FormState<T, S, F>> = { formData, schema };\n    let newFormData = formData;\n\n    if (omitExtraData === true && liveOmit === true) {\n      const retrievedSchema = schemaUtils.retrieveSchema(schema, formData);\n      const pathSchema = schemaUtils.toPathSchema(retrievedSchema, '', formData);\n\n      const fieldNames = this.getFieldNames(pathSchema, formData);\n\n      newFormData = this.getUsedFormData(formData, fieldNames);\n      state = {\n        formData: newFormData,\n      };\n    }\n\n    if (mustValidate) {\n      const schemaValidation = this.validate(newFormData);\n      let errors = schemaValidation.errors;\n      let errorSchema = schemaValidation.errorSchema;\n      const schemaValidationErrors = errors;\n      const schemaValidationErrorSchema = errorSchema;\n      if (extraErrors) {\n        const merged = schemaUtils.mergeValidationData(schemaValidation, extraErrors);\n        errorSchema = merged.errorSchema;\n        errors = merged.errors;\n      }\n      state = {\n        formData: newFormData,\n        errors,\n        errorSchema,\n        schemaValidationErrors,\n        schemaValidationErrorSchema,\n      };\n    } else if (!noValidate && newErrorSchema) {\n      const errorSchema = extraErrors\n        ? (mergeObjects(newErrorSchema, extraErrors, 'preventDuplicates') as ErrorSchema<T>)\n        : newErrorSchema;\n      state = {\n        formData: newFormData,\n        errorSchema: errorSchema,\n        errors: schemaUtils.getValidator().toErrorList(errorSchema),\n      };\n    }\n    this.setState(state as FormState<T, S, F>, () => onChange && onChange({ ...this.state, ...state }, id));\n  };\n\n  /** Callback function to handle when a field on the form is blurred. Calls the `onBlur` callback for the `Form` if it\n   * was provided.\n   *\n   * @param id - The unique `id` of the field that was blurred\n   * @param data - The data associated with the field that was blurred\n   */\n  onBlur = (id: string, data: any) => {\n    const { onBlur } = this.props;\n    if (onBlur) {\n      onBlur(id, data);\n    }\n  };\n\n  /** Callback function to handle when a field on the form is focused. Calls the `onFocus` callback for the `Form` if it\n   * was provided.\n   *\n   * @param id - The unique `id` of the field that was focused\n   * @param data - The data associated with the field that was focused\n   */\n  onFocus = (id: string, data: any) => {\n    const { onFocus } = this.props;\n    if (onFocus) {\n      onFocus(id, data);\n    }\n  };\n\n  /** Callback function to handle when the form is submitted. First, it prevents the default event behavior. Nothing\n   * happens if the target and currentTarget of the event are not the same. It will omit any extra data in the\n   * `formData` in the state if `omitExtraData` is true. It will validate the resulting `formData`, reporting errors\n   * via the `onError()` callback unless validation is disabled. Finally it will add in any `extraErrors` and then call\n   * back the `onSubmit` callback if it was provided.\n   *\n   * @param event - The submit HTML form event\n   */\n  onSubmit = (event: FormEvent<any>) => {\n    event.preventDefault();\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    event.persist();\n    const { omitExtraData, extraErrors, noValidate, onSubmit } = this.props;\n    let { formData: newFormData } = this.state;\n    const { schema, schemaUtils } = this.state;\n\n    if (omitExtraData === true) {\n      const retrievedSchema = schemaUtils.retrieveSchema(schema, newFormData);\n      const pathSchema = schemaUtils.toPathSchema(retrievedSchema, '', newFormData);\n\n      const fieldNames = this.getFieldNames(pathSchema, newFormData);\n\n      newFormData = this.getUsedFormData(newFormData, fieldNames);\n    }\n\n    if (noValidate || this.validateForm()) {\n      // There are no errors generated through schema validation.\n      // Check for user provided errors and update state accordingly.\n      const errorSchema = extraErrors || {};\n      const errors = extraErrors ? schemaUtils.getValidator().toErrorList(extraErrors) : [];\n      this.setState(\n        {\n          formData: newFormData,\n          errors,\n          errorSchema,\n          schemaValidationErrors: [],\n          schemaValidationErrorSchema: {},\n        },\n        () => {\n          if (onSubmit) {\n            onSubmit({ ...this.state, formData: newFormData, status: 'submitted' }, event);\n          }\n        }\n      );\n    }\n  };\n\n  /** Returns the registry for the form */\n  getRegistry(): Registry<T, S, F> {\n    const { translateString: customTranslateString } = this.props;\n    const { schemaUtils } = this.state;\n    const { fields, templates, widgets, formContext, translateString } = getDefaultRegistry<T, S, F>();\n    return {\n      fields: { ...fields, ...this.props.fields },\n      templates: {\n        ...templates,\n        ...this.props.templates,\n        ButtonTemplates: {\n          ...templates.ButtonTemplates,\n          ...this.props.templates?.ButtonTemplates,\n        },\n      },\n      widgets: { ...widgets, ...this.props.widgets },\n      rootSchema: this.props.schema,\n      formContext: this.props.formContext || formContext,\n      schemaUtils,\n      translateString: customTranslateString || translateString,\n    };\n  }\n\n  /** Provides a function that can be used to programmatically submit the `Form` */\n  submit() {\n    if (this.formElement.current) {\n      this.formElement.current.dispatchEvent(\n        new CustomEvent('submit', {\n          cancelable: true,\n        })\n      );\n      this.formElement.current.requestSubmit();\n    }\n  }\n\n  /** Attempts to focus on the field associated with the `error`. Uses the `property` field to compute path of the error\n   * field, then, using the `idPrefix` and `idSeparator` converts that path into an id. Then the input element with that\n   * id is attempted to be found using the `formElement` ref. If it is located, then it is focused.\n   *\n   * @param error - The error on which to focus\n   */\n  focusOnError(error: RJSFValidationError) {\n    const { idPrefix = 'root', idSeparator = '_' } = this.props;\n    const { property } = error;\n    const path = _toPath(property);\n    if (path[0] === '') {\n      // Most of the time the `.foo` property results in the first element being empty, so replace it with the idPrefix\n      path[0] = idPrefix;\n    } else {\n      // Otherwise insert the idPrefix into the first location using unshift\n      path.unshift(idPrefix);\n    }\n\n    const elementId = path.join(idSeparator);\n    let field = this.formElement.current.elements[elementId];\n    if (!field) {\n      // if not an exact match, try finding an input starting with the element id (like radio buttons or checkboxes)\n      field = this.formElement.current.querySelector(`input[id^=${elementId}`);\n    }\n    if (field) {\n      field.focus();\n    }\n  }\n\n  /** Programmatically validate the form. If `onError` is provided, then it will be called with the list of errors the\n   * same way as would happen on form submission.\n   *\n   * @returns - True if the form is valid, false otherwise.\n   */\n  validateForm() {\n    const { extraErrors, focusOnFirstError, onError } = this.props;\n    const { formData } = this.state;\n    const { schemaUtils } = this.state;\n    const schemaValidation = this.validate(formData);\n    let errors = schemaValidation.errors;\n    let errorSchema = schemaValidation.errorSchema;\n    const schemaValidationErrors = errors;\n    const schemaValidationErrorSchema = errorSchema;\n    if (errors.length > 0) {\n      if (extraErrors) {\n        const merged = schemaUtils.mergeValidationData(schemaValidation, extraErrors);\n        errorSchema = merged.errorSchema;\n        errors = merged.errors;\n      }\n      if (focusOnFirstError) {\n        this.focusOnError(schemaValidation.errors[0]);\n      }\n      this.setState(\n        {\n          errors,\n          errorSchema,\n          schemaValidationErrors,\n          schemaValidationErrorSchema,\n        },\n        () => {\n          if (onError) {\n            onError(errors);\n          } else {\n            console.error('Form validation failed', errors);\n          }\n        }\n      );\n      return false;\n    }\n    return true;\n  }\n\n  /** Renders the `Form` fields inside the <form> | `tagName` or `_internalFormWrapper`, rendering any errors if\n   * needed along with the submit button or any children of the form.\n   */\n  render() {\n    const {\n      children,\n      id,\n      idPrefix,\n      idSeparator,\n      className = '',\n      tagName,\n      name,\n      method,\n      target,\n      action,\n      autoComplete,\n      enctype,\n      acceptcharset,\n      noHtml5Validate = false,\n      disabled = false,\n      readonly = false,\n      formContext,\n      showErrorList = 'top',\n      _internalFormWrapper,\n    } = this.props;\n\n    const { schema, uiSchema, formData, errorSchema, idSchema } = this.state;\n    const registry = this.getRegistry();\n    const { SchemaField: _SchemaField } = registry.fields;\n    const { SubmitButton } = registry.templates.ButtonTemplates;\n    // The `semantic-ui` and `material-ui` themes have `_internalFormWrapper`s that take an `as` prop that is the\n    // PropTypes.elementType to use for the inner tag, so we'll need to pass `tagName` along if it is provided.\n    // NOTE, the `as` prop is native to `semantic-ui` and is emulated in the `material-ui` theme\n    const as = _internalFormWrapper ? tagName : undefined;\n    const FormTag = _internalFormWrapper || tagName || 'form';\n\n    return (\n      <FormTag\n        className={className ? className : 'rjsf'}\n        id={id}\n        name={name}\n        method={method}\n        target={target}\n        action={action}\n        autoComplete={autoComplete}\n        encType={enctype}\n        acceptCharset={acceptcharset}\n        noValidate={noHtml5Validate}\n        onSubmit={this.onSubmit}\n        as={as}\n        ref={this.formElement}\n      >\n        {showErrorList === 'top' && this.renderErrors(registry)}\n        <_SchemaField\n          name=''\n          schema={schema}\n          uiSchema={uiSchema}\n          errorSchema={errorSchema}\n          idSchema={idSchema}\n          idPrefix={idPrefix}\n          idSeparator={idSeparator}\n          formContext={formContext}\n          formData={formData}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          onFocus={this.onFocus}\n          registry={registry}\n          disabled={disabled}\n          readonly={readonly}\n        />\n        {children ? children : <SubmitButton uiSchema={uiSchema} registry={registry} />}\n        {showErrorList === 'bottom' && this.renderErrors(registry)}\n      </FormTag>\n    );\n  }\n}\n","import { ComponentType, ForwardedRef, forwardRef } from 'react';\nimport Form, { FormProps } from './components/Form';\nimport { FormContextType, RJSFSchema, StrictRJSFSchema } from '@rjsf/utils';\n\n/** The properties for the `withTheme` function, essentially a subset of properties from the `FormProps` that can be\n * overridden while creating a theme\n */\nexport type ThemeProps<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any> = Pick<\n  FormProps<T, S, F>,\n  'fields' | 'templates' | 'widgets' | '_internalFormWrapper'\n>;\n\n/** A Higher-Order component that creates a wrapper around a `Form` with the overrides from the `WithThemeProps` */\nexport default function withTheme<T = any, S extends StrictRJSFSchema = RJSFSchema, F extends FormContextType = any>(\n  themeProps: ThemeProps<T, S, F>\n): ComponentType<FormProps<T, S, F>> {\n  return forwardRef(\n    ({ fields, widgets, templates, ...directProps }: FormProps<T, S, F>, ref: ForwardedRef<Form<T, S, F>>) => {\n      fields = { ...themeProps?.fields, ...fields };\n      widgets = { ...themeProps?.widgets, ...widgets };\n      templates = {\n        ...themeProps?.templates,\n        ...templates,\n        ButtonTemplates: {\n          ...themeProps?.templates?.ButtonTemplates,\n          ...templates?.ButtonTemplates,\n        },\n      };\n\n      return (\n        <Form<T, S, F>\n          {...themeProps}\n          {...directProps}\n          fields={fields}\n          widgets={widgets}\n          templates={templates}\n          ref={ref}\n        />\n      );\n    }\n  );\n}\n"],"names":["generateRowId","nanoid","generateKeyedFormData","formData","Array","isArray","map","item","key","keyedToPlainFormData","keyedFormData","keyedItem","ArrayField","props","_getNewFormDataRow","schema","registry","schemaUtils","itemSchema","items","isFixedItems","allowAdditionalItems","additionalItems","getDefaultFormState","onAddClick","event","_handleAddClick","onAddIndexClick","index","onDropIndexClick","preventDefault","onChange","errorSchema","state","newErrorSchema","idx","i","parseInt","set","newKeyedFormData","filter","_","setState","updatedKeyedFormData","onReorderClick","newIndex","currentTarget","blur","reOrderArray","_newKeyedFormData","slice","splice","onChangeForIndex","value","id","arrayData","newFormData","jsonValue","onSelectChange","idSchema","undefined","$id","getDerivedStateFromProps","nextProps","prevState","nextFormData","previousKeyedFormData","length","previousKeyedFormDatum","isItemRequired","type","includes","canAddItem","formItems","uiSchema","getUiOptions","addable","maxItems","newKeyedFormDataRow","push","render","translateString","ITEMS_KEY","uiOptions","UnsupportedFieldTemplate","getTemplate","_jsx","reason","TranslatableString","MissingItems","isMultiSelect","renderMultiSelect","isCustomWidget","renderCustomWidget","renderFixedArray","isFilesArray","renderFiles","renderNormalArray","name","disabled","readonly","autofocus","required","onBlur","onFocus","idPrefix","idSeparator","rawErrors","title","formContext","_schemaItems","isObject","itemsSchema","retrieveSchema","canAdd","arrayProps","itemCast","itemErrorSchema","itemIdPrefix","itemIdSchema","toIdSchema","renderArrayFieldItem","canMoveUp","canMoveDown","itemData","itemUiSchema","totalItems","className","Template","hideError","placeholder","widgets","widget","options","_excluded","Widget","getWidget","multiple","label","enumOptions","optionsList","itemSchemas","additionalSchema","concat","additional","canRemove","fields","ArraySchemaField","SchemaField","ItemSchemaField","orderable","removable","has","moveUp","moveDown","remove","toolbar","Object","keys","some","children","hasToolbar","hasMoveUp","hasMoveDown","hasRemove","get","ArrayItemTitle","Component","BooleanField","yes","YesLabel","no","NoLabel","oneOf","option","o","schemaWithEnumNames","enums","enumNames","every","v","AnyOfField","onOptionChange","selectedOption","retrievedOptions","intOption","newOption","oldOption","sanitizeDataForNewSchema","getFieldId","opt","getMatchingOption","componentDidUpdate","prevProps","newState","deepEquals","matchingOption","getClosestMatchingOption","baseType","_SchemaField","autocomplete","ERRORS_KEY","fieldErrorSchema","omit","optionSchema","assign","translateEnum","TitleOptionPrefix","OptionPrefix","translateParams","String","_jsxs","isEmpty","trailingCharMatcherWithPrefix","trailingCharMatcher","NumberField","initialValue","useState","lastValue","setLastValue","StringField","handleChange","useCallback","charAt","processed","match","asNumber","replace","re","RegExp","ObjectField","wasPropertyKeyModified","additionalProperties","onPropertyChange","addedByAdditionalProperties","onDropPropertyClick","copiedFormData","unset","getAvailableKey","preferredKey","duplicateKeySuffixSeparator","newKey","onKeyChange","oldValue","newKeys","keyValues","renamedObj","handleAddClick","apSchema","REF_KEY","$ref","ANY_OF_KEY","ONE_OF_KEY","getDefaultValue","isRequired","indexOf","NewStringDefault","rawSchema","properties","schemaProperties","description","orderedProperties","orderProperties","order","err","style","color","message","JSON","stringify","templateProps","PROPERTIES_KEY","ADDITIONAL_PROPERTY_FLAG","fieldUiSchema","hidden","fieldIdSchema","content","COMPONENT_TYPES","array","integer","number","object","string","getFieldComponent","field","schemaType","getSchemaType","componentName","anyOf","UnknownFieldType","SchemaFieldRender","_schema","_idSchema","FieldTemplate","DescriptionFieldTemplate","FieldHelpTemplate","FieldErrorTemplate","fieldId","ID_KEY","mergeObjects","handleFieldComponentChange","theId","FieldComponent","Boolean","readOnly","uiSchemaHideError","displayLabel","getDisplayLabel","__errors","UI_OPTIONS_KEY","help","classNames","process","env","NODE_ENV","console","warn","helpComponent","hasErrors","errorsComponent","errors","fieldProps","descriptionId","rawDescription","rawHelp","join","trim","_AnyOfField","_OneOfField","OneOfField","isReplacingAnyOrOneOf","_Fragment","isSelect","shouldComponentUpdate","format","defaultWidget","hasWidget","NullField","useEffect","MultiSchemaField","ArrayFieldDescriptionTemplate","ArrayFieldItemTemplate","templates","ButtonTemplates","MoveDownButton","MoveUpButton","RemoveButton","btnStyle","flex","paddingLeft","paddingRight","fontWeight","display","justifyContent","onClick","ArrayFieldTemplate","ArrayFieldTitleTemplate","AddButton","itemProps","TitleFieldTemplate","titleId","BaseInputTemplate","onChangeOverride","rest","log","Error","inputProps","getInputProps","inputValue","_onChange","target","emptyValue","_onBlur","_onFocus","autoFocus","list","examples","examplesId","ariaDescribedByIds","example","SubmitButton","getSubmitButtonOptions","submitText","norender","submitButtonProps","IconButton","iconType","icon","otherProps","buttonTemplates","DescriptionField","ErrorList","ErrorsLabel","error","stack","REQUIRED_FIELD_SYMBOL","Label","htmlFor","WrapIfAdditionalTemplate","errorId","elem","helpId","ObjectFieldTemplate","prop","canExpand","TitleField","UnsupportedField","UnsupportedFieldWithId","UnsupportedFieldWithReason","UnsupportedFieldWithIdAndReason","Markdown","keyLabel","KeyLabel","defaultValue","border","ErrorListTemplate","rangeOptions","start","stop","pad","readyForChange","values","dateElementProps","time","yearsRange","Date","getFullYear","year","month","day","hour","minute","second","data","range","DateElement","select","rootId","SelectWidget","AltDateWidget","useReducer","action","parseDateString","toDateString","property","handleSetNow","nowDateObj","toJSON","handleClear","elemProps","hideNowButton","href","NowLabel","hideClearButton","ClearLabel","AltDateTimeWidget","CheckboxWidget","schemaRequiresTrueValue","checked","handleBlur","handleFocus","CheckboxesWidget","inline","enumDisabled","checkboxesValues","enumOptionsValueForIndex","enumOptionsIsSelected","itemDisabled","disabledCls","enumOptionsSelectValue","enumOptionsDeselectValue","checkbox","optionId","ColorWidget","DateWidget","DateTimeWidget","utcToLocal","localToUTC","EmailWidget","addNameToDataURL","dataURL","encodeURIComponent","processFile","file","size","Promise","resolve","reject","reader","window","FileReader","onerror","onload","result","readAsDataURL","processFiles","files","all","from","FilesInfo","filesInfo","fileInfo","extractFileInfo","dataURLs","dataURItoBlob","blob","FileWidget","extractedFilesInfo","useMemo","setFilesInfo","then","filesInfoEvent","newValue","accept","HiddenWidget","PasswordWidget","RadioWidget","Math","random","toString","radio","RangeWidget","getValue","selected","optEmptyVal","selectedIndexes","enumOptionsIndexForValue","TextareaWidget","rows","defaultProps","TextWidget","URLWidget","UpDownWidget","getDefaultRegistry","rootSchema","englishStringTranslator","Form","formElement","getUsedFormData","_pick","getFieldNames","pathSchema","getAllPaths","_obj","acc","paths","forEach","newPaths","path","RJSF_ADDITONAL_PROPERTIES_FLAG","NAME_KEY","formValue","_get","_isEmpty","extraErrors","omitExtraData","liveOmit","noValidate","liveValidate","getStateFromProps","mustValidate","retrievedSchema","toPathSchema","fieldNames","schemaValidation","validate","schemaValidationErrors","schemaValidationErrorSchema","merged","mergeValidationData","getValidator","toErrorList","onSubmit","persist","validateForm","status","validator","createRef","UNSAFE_componentWillReceiveProps","nextState","inputFormData","edit","doesSchemaUtilsDiffer","createSchemaUtils","getCurrentErrors","currentErrors","shouldRender","altSchemaUtils","customValidate","transformErrors","resolvedSchema","validateFormData","renderErrors","getRegistry","customTranslateString","submit","current","dispatchEvent","CustomEvent","cancelable","requestSubmit","focusOnError","_toPath","unshift","elementId","elements","querySelector","focus","focusOnFirstError","onError","tagName","method","autoComplete","enctype","acceptcharset","noHtml5Validate","showErrorList","_internalFormWrapper","as","FormTag","encType","acceptCharset","ref","withTheme","themeProps","forwardRef","directProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA,SAASA,aAAa,GAAA;AACpB,EAAA,OAAOC,MAAM,EAAE,CAAA;AACjB,CAAA;AAEA;;;;AAIG;AACH,SAASC,qBAAqB,CAAIC,QAAa,EAAA;AAC7C,EAAA,OAAO,CAACC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,GAC3B,EAAE,GACFA,QAAQ,CAACG,GAAG,CAAC,UAACC,IAAI,EAAI;IACpB,OAAO;MACLC,GAAG,EAAER,aAAa,EAAE;AACpBO,MAAAA,IAAI,EAAJA,IAAAA;KACD,CAAA;AACH,GAAC,CAAC,CAAA;AACR,CAAA;AAEA;;;;AAIG;AACH,SAASE,oBAAoB,CAAIC,aAA4D,EAAA;AAC3F,EAAA,IAAIN,KAAK,CAACC,OAAO,CAACK,aAAa,CAAC,EAAE;AAChC,IAAA,OAAOA,aAAa,CAACJ,GAAG,CAAC,UAACK,SAAS,EAAA;MAAA,OAAKA,SAAS,CAACJ,IAAI,CAAA;KAAC,CAAA,CAAA;AACxD,GAAA;AACD,EAAA,OAAO,EAAE,CAAA;AACX,CAAA;AAEA;;AAEG;AAFH,IAGMK,UAA8F,gBAAA,UAAA,UAAA,EAAA;AAAA,EAAA,cAAA,CAAA,UAAA,EAAA,UAAA,CAAA,CAAA;AAIlG;;;AAGG;AACH,EAAA,SAAA,UAAA,CAAYC,KAA4B,EAAA;AAAA,IAAA,IAAA,KAAA,CAAA;AACtC,IAAA,KAAA,GAAA,UAAA,CAAA,IAAA,CAAA,IAAA,EAAMA,KAAK,CAAC,IAAA,IAAA,CAAA;IAAC,KA+FfC,CAAAA,kBAAkB,GAAG,YAAQ;AAC3B,MAAA,IAAA,WAAA,GAA6B,MAAKD,KAAK;AAA/BE,QAAAA,MAAM,eAANA,MAAM;AAAEC,QAAAA,QAAQ,eAARA,QAAQ,CAAA;AACxB,MAAA,IAAQC,WAAW,GAAKD,QAAQ,CAAxBC,WAAW,CAAA;AACnB,MAAA,IAAIC,UAAU,GAAGH,MAAM,CAACI,KAAU,CAAA;MAClC,IAAIC,YAAY,CAACL,MAAM,CAAC,IAAIM,oBAAoB,CAACN,MAAM,CAAC,EAAE;QACxDG,UAAU,GAAGH,MAAM,CAACO,eAAoB,CAAA;AACzC,OAAA;AACD;AACA,MAAA,OAAOL,WAAW,CAACM,mBAAmB,CAACL,UAAU,CAAiB,CAAA;KACnE,CAAA;AAAA,IAAA,KAAA,CAyCDM,UAAU,GAAG,UAACC,KAAiB,EAAI;MACjC,KAAKC,CAAAA,eAAe,CAACD,KAAK,CAAC,CAAA;KAC5B,CAAA;AAAA,IAAA,KAAA,CAQDE,eAAe,GAAG,UAACC,KAAa,EAAI;MAClC,OAAO,UAACH,KAAiB,EAAI;AAC3B,QAAA,KAAA,CAAKC,eAAe,CAACD,KAAK,EAAEG,KAAK,CAAC,CAAA;OACnC,CAAA;KACF,CAAA;AAAA,IAAA,KAAA,CAQDC,gBAAgB,GAAG,UAACD,KAAa,EAAI;MACnC,OAAO,UAACH,KAAiB,EAAI;AAC3B,QAAA,IAAIA,KAAK,EAAE;UACTA,KAAK,CAACK,cAAc,EAAE,CAAA;AACvB,SAAA;AACD,QAAA,IAAA,YAAA,GAAkC,MAAKjB,KAAK;AAApCkB,UAAAA,QAAQ,gBAARA,QAAQ;AAAEC,UAAAA,WAAW,gBAAXA,WAAW,CAAA;AAC7B,QAAA,IAAQtB,aAAa,GAAK,KAAKuB,CAAAA,KAAK,CAA5BvB,aAAa,CAAA;AACrB;AACA,QAAA,IAAIwB,cAA8B,CAAA;AAClC,QAAA,IAAIF,WAAW,EAAE;UACfE,cAAc,GAAG,EAAE,CAAA;AACnB,UAAA,KAAK,IAAMC,GAAG,IAAIH,WAAW,EAAE;AAC7B,YAAA,IAAMI,CAAC,GAAGC,QAAQ,CAACF,GAAG,CAAC,CAAA;YACvB,IAAIC,CAAC,GAAGR,KAAK,EAAE;cACbU,GAAG,CAACJ,cAAc,EAAE,CAACE,CAAC,CAAC,EAAEJ,WAAW,CAACG,GAAG,CAAC,CAAC,CAAA;AAC3C,aAAA,MAAM,IAAIC,CAAC,GAAGR,KAAK,EAAE;AACpBU,cAAAA,GAAG,CAACJ,cAAc,EAAE,CAACE,CAAC,GAAG,CAAC,CAAC,EAAEJ,WAAW,CAACG,GAAG,CAAC,CAAC,CAAA;AAC/C,aAAA;AACF,WAAA;AACF,SAAA;QACD,IAAMI,gBAAgB,GAAG7B,aAAa,CAAC8B,MAAM,CAAC,UAACC,CAAC,EAAEL,CAAC,EAAA;UAAA,OAAKA,CAAC,KAAKR,KAAK,CAAA;SAAC,CAAA,CAAA;AACpE,QAAA,KAAA,CAAKc,QAAQ,CACX;AACEhC,UAAAA,aAAa,EAAE6B,gBAAgB;AAC/BI,UAAAA,oBAAoB,EAAE,IAAA;AACvB,SAAA,EACD,YAAA;UAAA,OAAMZ,QAAQ,CAACtB,oBAAoB,CAAC8B,gBAAgB,CAAC,EAAEL,cAAkC,CAAC,CAAA;SAC3F,CAAA,CAAA;OACF,CAAA;KACF,CAAA;AAAA,IAAA,KAAA,CASDU,cAAc,GAAG,UAAChB,KAAa,EAAEiB,QAAgB,EAAI;MACnD,OAAO,UAACpB,KAAoC,EAAI;AAC9C,QAAA,IAAIA,KAAK,EAAE;UACTA,KAAK,CAACK,cAAc,EAAE,CAAA;AACtBL,UAAAA,KAAK,CAACqB,aAAa,CAACC,IAAI,EAAE,CAAA;AAC3B,SAAA;AACD,QAAA,IAAA,YAAA,GAAkC,MAAKlC,KAAK;AAApCkB,UAAAA,QAAQ,gBAARA,QAAQ;AAAEC,UAAAA,WAAW,gBAAXA,WAAW,CAAA;AAC7B,QAAA,IAAIE,cAA8B,CAAA;AAClC,QAAA,IAAIF,WAAW,EAAE;UACfE,cAAc,GAAG,EAAE,CAAA;AACnB,UAAA,KAAK,IAAMC,GAAG,IAAIH,WAAW,EAAE;AAC7B,YAAA,IAAMI,CAAC,GAAGC,QAAQ,CAACF,GAAG,CAAC,CAAA;YACvB,IAAIC,CAAC,IAAIR,KAAK,EAAE;cACdU,GAAG,CAACJ,cAAc,EAAE,CAACW,QAAQ,CAAC,EAAEb,WAAW,CAACJ,KAAK,CAAC,CAAC,CAAA;AACpD,aAAA,MAAM,IAAIQ,CAAC,IAAIS,QAAQ,EAAE;cACxBP,GAAG,CAACJ,cAAc,EAAE,CAACN,KAAK,CAAC,EAAEI,WAAW,CAACa,QAAQ,CAAC,CAAC,CAAA;AACpD,aAAA,MAAM;cACLP,GAAG,CAACJ,cAAc,EAAE,CAACC,GAAG,CAAC,EAAEH,WAAW,CAACI,CAAC,CAAC,CAAC,CAAA;AAC3C,aAAA;AACF,WAAA;AACF,SAAA;AAED,QAAA,IAAQ1B,aAAa,GAAK,KAAKuB,CAAAA,KAAK,CAA5BvB,aAAa,CAAA;AACrB,QAAA,SAASsC,YAAY,GAAA;AACnB;AACA,UAAA,IAAMC,iBAAiB,GAAGvC,aAAa,CAACwC,KAAK,EAAE,CAAA;AAE/C;AACAD,UAAAA,iBAAiB,CAACE,MAAM,CAACvB,KAAK,EAAE,CAAC,CAAC,CAAA;UAClCqB,iBAAiB,CAACE,MAAM,CAACN,QAAQ,EAAE,CAAC,EAAEnC,aAAa,CAACkB,KAAK,CAAC,CAAC,CAAA;AAE3D,UAAA,OAAOqB,iBAAiB,CAAA;AAC1B,SAAA;QACA,IAAMV,gBAAgB,GAAGS,YAAY,EAAE,CAAA;AACvC,QAAA,KAAA,CAAKN,QAAQ,CACX;AACEhC,UAAAA,aAAa,EAAE6B,gBAAAA;AAChB,SAAA,EACD,YAAA;UAAA,OAAMR,QAAQ,CAACtB,oBAAoB,CAAC8B,gBAAgB,CAAC,EAAEL,cAAkC,CAAC,CAAA;SAC3F,CAAA,CAAA;OACF,CAAA;KACF,CAAA;AAAA,IAAA,KAAA,CAODkB,gBAAgB,GAAG,UAACxB,KAAa,EAAI;AACnC,MAAA,OAAO,UAACyB,KAAU,EAAEnB,cAA+B,EAAEoB,EAAW,EAAI;AAAA,QAAA,IAAA,SAAA,CAAA;AAClE,QAAA,IAAA,YAAA,GAA4C,MAAKzC,KAAK;AAA9CV,UAAAA,QAAQ,gBAARA,QAAQ;AAAE4B,UAAAA,QAAQ,gBAARA,QAAQ;AAAEC,UAAAA,WAAW,gBAAXA,WAAW,CAAA;QACvC,IAAMuB,SAAS,GAAGnD,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,GAAGA,QAAQ,GAAG,EAAE,CAAA;QACzD,IAAMqD,WAAW,GAAGD,SAAS,CAACjD,GAAG,CAAC,UAACC,IAAO,EAAE6B,CAAS,EAAI;AACvD;AACA;UACA,IAAMqB,SAAS,GAAG,OAAOJ,KAAK,KAAK,WAAW,GAAG,IAAI,GAAGA,KAAK,CAAA;AAC7D,UAAA,OAAOzB,KAAK,KAAKQ,CAAC,GAAGqB,SAAS,GAAGlD,IAAI,CAAA;AACvC,SAAC,CAAC,CAAA;AACFwB,QAAAA,QAAQ,CACNyB,WAAW,EACXxB,WAAW,IACTA,WAAW,IAAA,QAAA,CAAA,EAAA,EACNA,WAAW,GAAA,SAAA,GAAA,EAAA,EAAA,SAAA,CACbJ,KAAK,CAAGM,GAAAA,cAAc,EACxB,SAAA,EAAA,EACHoB,EAAE,CACH,CAAA;OACF,CAAA;KACF,CAAA;AAAA,IAAA,KAAA,CAGDI,cAAc,GAAG,UAACL,KAAU,EAAI;AAC9B,MAAA,IAAA,YAAA,GAA+B,MAAKxC,KAAK;AAAjCkB,QAAAA,QAAQ,gBAARA,QAAQ;AAAE4B,QAAAA,QAAQ,gBAARA,QAAQ,CAAA;MAC1B5B,QAAQ,CAACsB,KAAK,EAAEO,SAAS,EAAED,QAAQ,IAAIA,QAAQ,CAACE,GAAG,CAAC,CAAA;KACrD,CAAA;IAtRC,IAA0BhD,eAAAA,GAAAA,KAAK,CAAvBV,QAAQ;AAARA,MAAAA,SAAQ,gCAAG,EAAE,GAAA,eAAA,CAAA;AACrB,IAAA,IAAMO,cAAa,GAAGR,qBAAqB,CAAIC,SAAQ,CAAC,CAAA;AACxD,IAAA,KAAA,CAAK8B,KAAK,GAAG;AACXvB,MAAAA,aAAa,EAAbA,cAAa;AACbiC,MAAAA,oBAAoB,EAAE,KAAA;KACvB,CAAA;AAAC,IAAA,OAAA,KAAA,CAAA;AACJ,GAAA;AAEA;;;;;AAKG;AALH,EAAA,UAAA,CAMOmB,wBAAwB,GAA/B,SAAA,wBAAA,CACEC,SAA0C,EAC1CC,SAAuC,EAAA;AAEvC;IACA,IAAIA,SAAS,CAACrB,oBAAoB,EAAE;MAClC,OAAO;AACLA,QAAAA,oBAAoB,EAAE,KAAA;OACvB,CAAA;AACF,KAAA;AACD,IAAA,IAAMsB,YAAY,GAAG7D,KAAK,CAACC,OAAO,CAAC0D,SAAS,CAAC5D,QAAQ,CAAC,GAAG4D,SAAS,CAAC5D,QAAQ,GAAG,EAAE,CAAA;AAChF,IAAA,IAAM+D,qBAAqB,GAAGF,SAAS,CAACtD,aAAa,IAAI,EAAE,CAAA;AAC3D,IAAA,IAAM6B,gBAAgB,GACpB0B,YAAY,CAACE,MAAM,KAAKD,qBAAqB,CAACC,MAAM,GAChDD,qBAAqB,CAAC5D,GAAG,CAAC,UAAC8D,sBAAsB,EAAExC,KAAK,EAAI;MAC1D,OAAO;QACLpB,GAAG,EAAE4D,sBAAsB,CAAC5D,GAAG;QAC/BD,IAAI,EAAE0D,YAAY,CAACrC,KAAK,CAAA;OACzB,CAAA;AACH,KAAC,CAAC,GACF1B,qBAAqB,CAAI+D,YAAY,CAAC,CAAA;IAC5C,OAAO;AACLvD,MAAAA,aAAa,EAAE6B,gBAAAA;KAChB,CAAA;AACH,GAAA;AAEA;;AAEG,MAFH;AAAA,EAAA,IAAA,MAAA,GAAA,UAAA,CAAA,SAAA,CAAA;AAaA;;;;;AAKG;AALH,EAAA,MAAA,CAMA8B,cAAc,GAAd,SAAenD,cAAAA,CAAAA,UAAa,EAAA;IAC1B,IAAId,KAAK,CAACC,OAAO,CAACa,UAAU,CAACoD,IAAI,CAAC,EAAE;AAClC;AACA;MACA,OAAO,CAACpD,UAAU,CAACoD,IAAI,CAACC,QAAQ,CAAC,MAAM,CAAC,CAAA;AACzC,KAAA;AACD;AACA,IAAA,OAAOrD,UAAU,CAACoD,IAAI,KAAK,MAAM,CAAA;AACnC,GAAA;AAEA;;;;;;AAMG,MANH;AAAA,EAAA,MAAA,CAOAE,UAAU,GAAV,SAAWC,UAAAA,CAAAA,SAAgB,EAAA;IACzB,IAA6B,YAAA,GAAA,IAAI,CAAC5D,KAAK;AAA/BE,MAAAA,MAAM,gBAANA,MAAM;AAAE2D,MAAAA,QAAQ,gBAARA,QAAQ,CAAA;IACxB,IAAkBC,aAAAA,GAAAA,YAAY,CAAYD,QAAQ,CAAC;AAA7CE,MAAAA,OAAO,iBAAPA,OAAO,CAAA;IACb,IAAIA,OAAO,KAAK,KAAK,EAAE;AACrB;AACA;AACA,MAAA,IAAI7D,MAAM,CAAC8D,QAAQ,KAAKjB,SAAS,EAAE;AACjCgB,QAAAA,OAAO,GAAGH,SAAS,CAACN,MAAM,GAAGpD,MAAM,CAAC8D,QAAQ,CAAA;AAC7C,OAAA,MAAM;AACLD,QAAAA,OAAO,GAAG,IAAI,CAAA;AACf,OAAA;AACF,KAAA;AACD,IAAA,OAAOA,OAAO,CAAA;AAChB,GAAA;AAEA;;AAEG,MAFH;AAcA;;;;;;AAMG;AANH,EAAA,MAAA,CAOAlD,eAAe,GAAf,SAAA,eAAA,CAAgBD,KAAiB,EAAEG,KAAc,EAAA;AAC/C,IAAA,IAAIH,KAAK,EAAE;MACTA,KAAK,CAACK,cAAc,EAAE,CAAA;AACvB,KAAA;AAED,IAAA,IAAQC,QAAQ,GAAK,IAAI,CAAClB,KAAK,CAAvBkB,QAAQ,CAAA;AAChB,IAAA,IAAQrB,aAAa,GAAK,IAAI,CAACuB,KAAK,CAA5BvB,aAAa,CAAA;AACrB,IAAA,IAAMoE,mBAAmB,GAAyB;MAChDtE,GAAG,EAAER,aAAa,EAAE;MACpBO,IAAI,EAAE,IAAI,CAACO,kBAAkB,EAAA;KAC9B,CAAA;IACD,IAAMyB,gBAAgB,GAAO7B,EAAAA,CAAAA,MAAAA,CAAAA,aAAa,CAAC,CAAA;IAC3C,IAAIkB,KAAK,KAAKgC,SAAS,EAAE;MACvBrB,gBAAgB,CAACY,MAAM,CAACvB,KAAK,EAAE,CAAC,EAAEkD,mBAAmB,CAAC,CAAA;AACvD,KAAA,MAAM;AACLvC,MAAAA,gBAAgB,CAACwC,IAAI,CAACD,mBAAmB,CAAC,CAAA;AAC3C,KAAA;IACD,IAAI,CAACpC,QAAQ,CACX;AACEhC,MAAAA,aAAa,EAAE6B,gBAAgB;AAC/BI,MAAAA,oBAAoB,EAAE,IAAA;KACvB,EACD,YAAA;AAAA,MAAA,OAAMZ,QAAQ,CAACtB,oBAAoB,CAAC8B,gBAAgB,CAAC,CAAC,CAAA;KACvD,CAAA,CAAA;AACH,GAAA;AAEA;;;;;AAKG,MALH;AA8IA;AACG;EADH,MAEAyC,CAAAA,MAAM,GAAN,SAAM,MAAA,GAAA;IACJ,IAAiD,YAAA,GAAA,IAAI,CAACnE,KAAK;AAAnDE,MAAAA,MAAM,gBAANA,MAAM;AAAE2D,MAAAA,QAAQ,gBAARA,QAAQ;AAAEf,MAAAA,QAAQ,gBAARA,QAAQ;AAAE3C,MAAAA,QAAQ,gBAARA,QAAQ,CAAA;AAC5C,IAAA,IAAQC,WAAW,GAAsBD,QAAQ,CAAzCC,WAAW;MAAEgE,eAAe,GAAKjE,QAAQ,CAA5BiE,eAAe,CAAA;AACpC,IAAA,IAAI,EAAEC,SAAS,IAAInE,MAAM,CAAC,EAAE;AAC1B,MAAA,IAAMoE,SAAS,GAAGR,YAAY,CAAYD,QAAQ,CAAC,CAAA;MACnD,IAAMU,wBAAwB,GAAGC,WAAW,CAC1C,0BAA0B,EAC1BrE,QAAQ,EACRmE,SAAS,CACV,CAAA;MAED,OACEG,GAAC,CAAAF,wBAAwB,EACvB;AAAArE,QAAAA,MAAM,EAAEA,MAAM;AACd4C,QAAAA,QAAQ,EAAEA,QAAQ;AAClB4B,QAAAA,MAAM,EAAEN,eAAe,CAACO,kBAAkB,CAACC,YAAY,CAAC;AACxDzE,QAAAA,QAAQ,EAAEA,QAAAA;AACV,OAAA,CAAA,CAAA;AAEL,KAAA;AACD,IAAA,IAAIC,WAAW,CAACyE,aAAa,CAAC3E,MAAM,CAAC,EAAE;AACrC;MACA,OAAO,IAAI,CAAC4E,iBAAiB,EAAE,CAAA;AAChC,KAAA;AACD,IAAA,IAAIC,cAAc,CAAYlB,QAAQ,CAAC,EAAE;MACvC,OAAO,IAAI,CAACmB,kBAAkB,EAAE,CAAA;AACjC,KAAA;AACD,IAAA,IAAIzE,YAAY,CAACL,MAAM,CAAC,EAAE;MACxB,OAAO,IAAI,CAAC+E,gBAAgB,EAAE,CAAA;AAC/B,KAAA;IACD,IAAI7E,WAAW,CAAC8E,YAAY,CAAChF,MAAM,EAAE2D,QAAQ,CAAC,EAAE;MAC9C,OAAO,IAAI,CAACsB,WAAW,EAAE,CAAA;AAC1B,KAAA;IACD,OAAO,IAAI,CAACC,iBAAiB,EAAE,CAAA;AACjC,GAAA;AAEA;AACG,MADH;EAAA,MAEAA,CAAAA,iBAAiB,GAAjB,SAAiB,iBAAA,GAAA;AAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;IACf,IAgBI,YAAA,GAAA,IAAI,CAACpF,KAAK;AAfZE,MAAAA,MAAM,gBAANA,MAAM;AAAA,MAAA,qBAAA,GAAA,YAAA,CACN2D,QAAQ;MAARA,QAAQ,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAG,EAAE,GAAA,qBAAA;AACb1C,MAAAA,WAAW,gBAAXA,WAAW;AACX2B,MAAAA,QAAQ,gBAARA,QAAQ;AACRuC,MAAAA,IAAI,gBAAJA,IAAI;AAAA,MAAA,qBAAA,GAAA,YAAA,CACJC,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,YAAA,CAChBC,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,YAAA,CAChBC,SAAS;AAATA,MAAAA,SAAS,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,YAAA,CACjBC,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAChBtF,MAAAA,QAAQ,gBAARA,QAAQ;AACRuF,MAAAA,MAAM,gBAANA,MAAM;AACNC,MAAAA,OAAO,gBAAPA,OAAO;AACPC,MAAAA,QAAQ,gBAARA,QAAQ;AAAA,MAAA,qBAAA,GAAA,YAAA,CACRC,WAAW;AAAXA,MAAAA,WAAW,sCAAG,GAAG,GAAA,qBAAA;AACjBC,MAAAA,SAAS,gBAATA,SAAS,CAAA;AAEX,IAAA,IAAQjG,aAAa,GAAK,IAAI,CAACuB,KAAK,CAA5BvB,aAAa,CAAA;AACrB,IAAA,IAAMkG,KAAK,GAAG7F,MAAM,CAAC6F,KAAK,KAAKhD,SAAS,GAAGsC,IAAI,GAAGnF,MAAM,CAAC6F,KAAK,CAAA;AAC9D,IAAA,IAAQ3F,WAAW,GAAkBD,QAAQ,CAArCC,WAAW;MAAE4F,WAAW,GAAK7F,QAAQ,CAAxB6F,WAAW,CAAA;AAChC,IAAA,IAAM1B,SAAS,GAAGR,YAAY,CAAYD,QAAQ,CAAC,CAAA;AACnD,IAAA,IAAMoC,YAAY,GAAMC,QAAQ,CAAChG,MAAM,CAACI,KAAK,CAAC,GAAIJ,MAAM,CAACI,KAAW,GAAI,EAAQ,CAAA;AAChF,IAAA,IAAM6F,WAAW,GAAM/F,WAAW,CAACgG,cAAc,CAACH,YAAY,CAAC,CAAA;IAC/D,IAAM3G,QAAQ,GAAGM,oBAAoB,CAAC,IAAI,CAACwB,KAAK,CAACvB,aAAa,CAAC,CAAA;AAC/D,IAAA,IAAMwG,MAAM,GAAG,IAAI,CAAC1C,UAAU,CAACrE,QAAQ,CAAC,CAAA;AACxC,IAAA,IAAMgH,UAAU,GAAuC;AACrDD,MAAAA,MAAM,EAANA,MAAM;MACN/F,KAAK,EAAET,aAAa,CAACJ,GAAG,CAAC,UAACK,SAAS,EAAEiB,KAAK,EAAI;AAC5C,QAAA,IAAQpB,GAAG,GAAWG,SAAS,CAAvBH,GAAG;UAAED,IAAI,GAAKI,SAAS,CAAlBJ,IAAI,CAAA;AACjB;QACA,IAAM6G,QAAQ,GAAG7G,IAAsB,CAAA;QACvC,IAAMW,UAAU,GAAGD,WAAW,CAACgG,cAAc,CAACH,YAAY,EAAEM,QAAQ,CAAC,CAAA;QACrE,IAAMC,eAAe,GAAGrF,WAAW,GAAIA,WAAW,CAACJ,KAAK,CAAsB,GAAGgC,SAAS,CAAA;QAC1F,IAAM0D,YAAY,GAAG3D,QAAQ,CAACE,GAAG,GAAG6C,WAAW,GAAG9E,KAAK,CAAA;AACvD,QAAA,IAAM2F,YAAY,GAAGtG,WAAW,CAACuG,UAAU,CAACtG,UAAU,EAAEoG,YAAY,EAAEF,QAAQ,EAAEX,QAAQ,EAAEC,WAAW,CAAC,CAAA;QACtG,OAAO,MAAI,CAACe,oBAAoB,CAAC;AAC/BjH,UAAAA,GAAG,EAAHA,GAAG;AACHoB,UAAAA,KAAK,EAALA,KAAK;AACLsE,UAAAA,IAAI,EAAEA,IAAI,IAAOA,IAAI,SAAItE,KAAO;AAChCsF,UAAAA,MAAM,EAANA,MAAM;UACNQ,SAAS,EAAE9F,KAAK,GAAG,CAAC;AACpB+F,UAAAA,WAAW,EAAE/F,KAAK,GAAGzB,QAAQ,CAACgE,MAAM,GAAG,CAAC;AACxCjD,UAAAA,UAAU,EAAVA,UAAU;AACVqG,UAAAA,YAAY,EAAZA,YAAY;AACZF,UAAAA,eAAe,EAAfA,eAAe;AACfO,UAAAA,QAAQ,EAAER,QAAQ;UAClBS,YAAY,EAAEnD,QAAQ,CAACvD,KAAK;AAC5BkF,UAAAA,SAAS,EAAEA,SAAS,IAAIzE,KAAK,KAAK,CAAC;AACnC2E,UAAAA,MAAM,EAANA,MAAM;AACNC,UAAAA,OAAO,EAAPA,OAAO;AACPG,UAAAA,SAAS,EAATA,SAAS;UACTmB,UAAU,EAAEpH,aAAa,CAACyD,MAAAA;AAC3B,SAAA,CAAC,CAAA;AACJ,OAAC,CAAC;MACF4D,SAAS,EAAA,mCAAA,GAAsCf,WAAW,CAAC1C,IAAM;AACjE6B,MAAAA,QAAQ,EAARA,QAAQ;AACRxC,MAAAA,QAAQ,EAARA,QAAQ;AACRe,MAAAA,QAAQ,EAARA,QAAQ;MACRlD,UAAU,EAAE,IAAI,CAACA,UAAU;AAC3B4E,MAAAA,QAAQ,EAARA,QAAQ;AACRE,MAAAA,QAAQ,EAARA,QAAQ;AACRvF,MAAAA,MAAM,EAANA,MAAM;AACN6F,MAAAA,KAAK,EAALA,KAAK;AACLC,MAAAA,WAAW,EAAXA,WAAW;AACX1G,MAAAA,QAAQ,EAARA,QAAQ;AACRwG,MAAAA,SAAS,EAATA,SAAS;AACT3F,MAAAA,QAAQ,EAARA,QAAAA;KACD,CAAA;IAED,IAAMgH,QAAQ,GAAG3C,WAAW,CAAkC,oBAAoB,EAAErE,QAAQ,EAAEmE,SAAS,CAAC,CAAA;AACxG,IAAA,OAAOG,GAAC,CAAA0C,QAAQ,EAAA,QAAA,CAAA,EAAA,EAAKb,UAAU,CAAI,CAAA,CAAA;AACrC,GAAA;AAEA;AACG,MADH;EAAA,MAEAtB,CAAAA,kBAAkB,GAAlB,SAAkB,kBAAA,GAAA;IAChB,IAgBI,YAAA,GAAA,IAAI,CAAChF,KAAK;AAfZE,MAAAA,MAAM,gBAANA,MAAM;AACN4C,MAAAA,QAAQ,gBAARA,QAAQ;AACRe,MAAAA,QAAQ,gBAARA,QAAQ;AAAA,MAAA,qBAAA,GAAA,YAAA,CACRyB,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,YAAA,CAChBC,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,YAAA,CAChBC,SAAS;AAATA,MAAAA,SAAS,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,YAAA,CACjBC,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAChB2B,MAAAA,SAAS,gBAATA,SAAS;AACTC,MAAAA,WAAW,gBAAXA,WAAW;AACX3B,MAAAA,MAAM,gBAANA,MAAM;AACNC,MAAAA,OAAO,gBAAPA,OAAO;AAAA,MAAA,qBAAA,GAAA,YAAA,CACPrG,QAAQ;AAAEgB,MAAAA,KAAK,sCAAG,EAAE,GAAA,qBAAA;AACpBH,MAAAA,QAAQ,gBAARA,QAAQ;AACR2F,MAAAA,SAAS,gBAATA,SAAS;AACTT,MAAAA,IAAI,gBAAJA,IAAI,CAAA;AAEN,IAAA,IAAQiC,OAAO,GAAkBnH,QAAQ,CAAjCmH,OAAO;MAAEtB,WAAW,GAAK7F,QAAQ,CAAxB6F,WAAW,CAAA;AAC5B,IAAA,IAAMD,KAAK,GAAG7F,MAAM,CAAC6F,KAAK,IAAIV,IAAI,CAAA;IAElC,IAA+BvB,cAAAA,GAAAA,YAAY,CAAYD,QAAQ,CAAC;AAAxD0D,MAAAA,MAAM,kBAANA,MAAM;MAAKC,OAAO,GAAA,6BAAA,CAAA,cAAA,EAAAC,WAAA,CAAA,CAAA;IAC1B,IAAMC,MAAM,GAAGC,SAAS,CAAYzH,MAAM,EAAEqH,MAAM,EAAED,OAAO,CAAC,CAAA;IAC5D,OACE7C,GAAC,CAAAiD,MAAM;MACLjF,EAAE,EAAEK,QAAQ,CAACE,GAAG;AAChBqC,MAAAA,IAAI,EAAEA,IAAI;AACVuC,MAAAA,QAAQ,EACR,IAAA;MAAA1G,QAAQ,EAAE,IAAI,CAAC2B,cAAc;AAC7B6C,MAAAA,MAAM,EAAEA,MAAM;AACdC,MAAAA,OAAO,EAAEA,OAAO;AAChB6B,MAAAA,OAAO,EAAEA,OAAO;AAChBtH,MAAAA,MAAM,EAAEA,MAAM;AACd2D,MAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,MAAAA,QAAQ,EAAEA,QAAQ;AAClBqC,MAAAA,KAAK,EAAElC,KAAK;AACZgF,MAAAA,QAAQ,EAAEA,QAAQ;AAClBC,MAAAA,QAAQ,EAAEA,QAAQ;AAClB6B,MAAAA,SAAS,EAAEA,SAAS;AACpB3B,MAAAA,QAAQ,EAAEA,QAAQ;AAClBoC,MAAAA,KAAK,EAAE9B,KAAK;AACZsB,MAAAA,WAAW,EAAEA,WAAW;AACxBrB,MAAAA,WAAW,EAAEA,WAAW;AACxBR,MAAAA,SAAS,EAAEA,SAAS;AACpBM,MAAAA,SAAS,EAAEA,SAAAA;AAAS,KAAA,CACpB,CAAA;AAEN,GAAA;AAEA;AACG,MADH;EAAA,MAEAhB,CAAAA,iBAAiB,GAAjB,SAAiB,iBAAA,GAAA;IACf,IAeI,aAAA,GAAA,IAAI,CAAC9E,KAAK;AAdZE,MAAAA,MAAM,iBAANA,MAAM;AACN4C,MAAAA,QAAQ,iBAARA,QAAQ;AACRe,MAAAA,QAAQ,iBAARA,QAAQ;AAAA,MAAA,qBAAA,GAAA,aAAA,CACRvE,QAAQ;AAAEgB,MAAAA,KAAK,sCAAG,EAAE,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,aAAA,CACpBgF,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,aAAA,CAChBC,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,aAAA,CAChBC,SAAS;AAATA,MAAAA,SAAS,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,aAAA,CACjBC,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAChB4B,MAAAA,WAAW,iBAAXA,WAAW;AACX3B,MAAAA,MAAM,iBAANA,MAAM;AACNC,MAAAA,OAAO,iBAAPA,OAAO;AACPxF,MAAAA,QAAQ,iBAARA,QAAQ;AACR2F,MAAAA,SAAS,iBAATA,SAAS;AACTT,MAAAA,IAAI,iBAAJA,IAAI,CAAA;AAEN,IAAA,IAAQiC,OAAO,GAA+BnH,QAAQ,CAA9CmH,OAAO;MAAElH,WAAW,GAAkBD,QAAQ,CAArCC,WAAW;MAAE4F,WAAW,GAAK7F,QAAQ,CAAxB6F,WAAW,CAAA;IACzC,IAAMG,WAAW,GAAG/F,WAAW,CAACgG,cAAc,CAAClG,MAAM,CAACI,KAAU,EAAEA,KAAK,CAAC,CAAA;AACxE,IAAA,IAAMyF,KAAK,GAAG7F,MAAM,CAAC6F,KAAK,IAAIV,IAAI,CAAA;AAClC,IAAA,IAAMyC,WAAW,GAAGC,WAAW,CAAC5B,WAAW,CAAC,CAAA;IAC5C,IAA0CrC,cAAAA,GAAAA,YAAY,CAAYD,QAAQ,CAAC;AAAA,MAAA,qBAAA,GAAA,cAAA,CAAnE0D,MAAM;AAANA,MAAAA,MAAM,sCAAG,QAAQ,GAAA,qBAAA;MAAKC,OAAO,GAAA,6BAAA,CAAA,cAAA,EAAA,UAAA,CAAA,CAAA;IACrC,IAAME,MAAM,GAAGC,SAAS,CAAYzH,MAAM,EAAEqH,MAAM,EAAED,OAAO,CAAC,CAAA;IAC5D,OACE7C,GAAC,CAAAiD,MAAM;MACLjF,EAAE,EAAEK,QAAQ,CAACE,GAAG;AAChBqC,MAAAA,IAAI,EAAEA,IAAI;AACVuC,MAAAA,QAAQ;MACR1G,QAAQ,EAAE,IAAI,CAAC2B,cAAc;AAC7B6C,MAAAA,MAAM,EAAEA,MAAM;AACdC,MAAAA,OAAO,EAAEA,OAAO;AAChB6B,MAAAA,OAAO,eAAOA,OAAO,EAAA;AAAEM,QAAAA,WAAW,EAAXA,WAAAA;OAAa,CAAA;AACpC5H,MAAAA,MAAM,EAAEA,MAAM;AACd2D,MAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,MAAAA,QAAQ,EAAEA,QAAQ;AAClBqC,MAAAA,KAAK,EAAElC,KAAK;AACZgF,MAAAA,QAAQ,EAAEA,QAAQ;AAClBC,MAAAA,QAAQ,EAAEA,QAAQ;AAClBE,MAAAA,QAAQ,EAAEA,QAAQ;AAClBoC,MAAAA,KAAK,EAAE9B,KAAK;AACZsB,MAAAA,WAAW,EAAEA,WAAW;AACxBrB,MAAAA,WAAW,EAAEA,WAAW;AACxBR,MAAAA,SAAS,EAAEA,SAAS;AACpBM,MAAAA,SAAS,EAAEA,SAAAA;AAAS,KAAA,CACpB,CAAA;AAEN,GAAA;AAEA;AACG,MADH;EAAA,MAEAX,CAAAA,WAAW,GAAX,SAAW,WAAA,GAAA;IACT,IAcI,aAAA,GAAA,IAAI,CAACnF,KAAK;AAbZE,MAAAA,MAAM,iBAANA,MAAM;AACN2D,MAAAA,QAAQ,iBAARA,QAAQ;AACRf,MAAAA,QAAQ,iBAARA,QAAQ;AACRuC,MAAAA,IAAI,iBAAJA,IAAI;AAAA,MAAA,qBAAA,GAAA,aAAA,CACJC,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,aAAA,CAChBC,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,aAAA,CAChBC,SAAS;AAATA,MAAAA,SAAS,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,aAAA,CACjBC,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAChBC,MAAAA,MAAM,iBAANA,MAAM;AACNC,MAAAA,OAAO,iBAAPA,OAAO;AACPxF,MAAAA,QAAQ,iBAARA,QAAQ;AAAA,MAAA,qBAAA,GAAA,aAAA,CACRb,QAAQ;AAAEgB,MAAAA,KAAK,sCAAG,EAAE,GAAA,qBAAA;AACpBwF,MAAAA,SAAS,iBAATA,SAAS,CAAA;AAEX,IAAA,IAAMC,KAAK,GAAG7F,MAAM,CAAC6F,KAAK,IAAIV,IAAI,CAAA;AAClC,IAAA,IAAQiC,OAAO,GAAkBnH,QAAQ,CAAjCmH,OAAO;MAAEtB,WAAW,GAAK7F,QAAQ,CAAxB6F,WAAW,CAAA;IAC5B,IAAyClC,cAAAA,GAAAA,YAAY,CAAYD,QAAQ,CAAC;AAAA,MAAA,qBAAA,GAAA,cAAA,CAAlE0D,MAAM;AAANA,MAAAA,MAAM,sCAAG,OAAO,GAAA,qBAAA;MAAKC,OAAO,GAAA,6BAAA,CAAA,cAAA,EAAA,UAAA,CAAA,CAAA;IACpC,IAAME,MAAM,GAAGC,SAAS,CAAYzH,MAAM,EAAEqH,MAAM,EAAED,OAAO,CAAC,CAAA;IAC5D,OACE7C,GAAC,CAAAiD,MAAM,EACL;AAAAF,MAAAA,OAAO,EAAEA,OAAO;MAChB/E,EAAE,EAAEK,QAAQ,CAACE,GAAG;AAChBqC,MAAAA,IAAI,EAAEA,IAAI;AACVuC,MAAAA,QAAQ,EACR,IAAA;MAAA1G,QAAQ,EAAE,IAAI,CAAC2B,cAAc;AAC7B6C,MAAAA,MAAM,EAAEA,MAAM;AACdC,MAAAA,OAAO,EAAEA,OAAO;AAChBzF,MAAAA,MAAM,EAAEA,MAAM;AACd2D,MAAAA,QAAQ,EAAEA,QAAQ;AAClBkC,MAAAA,KAAK,EAAEA,KAAK;AACZvD,MAAAA,KAAK,EAAElC,KAAK;AACZgF,MAAAA,QAAQ,EAAEA,QAAQ;AAClBC,MAAAA,QAAQ,EAAEA,QAAQ;AAClBE,MAAAA,QAAQ,EAAEA,QAAQ;AAClBtF,MAAAA,QAAQ,EAAEA,QAAQ;AAClB6F,MAAAA,WAAW,EAAEA,WAAW;AACxBR,MAAAA,SAAS,EAAEA,SAAS;AACpBM,MAAAA,SAAS,EAAEA,SAAS;AACpB+B,MAAAA,KAAK,EAAC,EAAA;AAAE,KAAA,CACR,CAAA;AAEN,GAAA;AAEA;AACG,MADH;EAAA,MAEA5C,CAAAA,gBAAgB,GAAhB,SAAgB,gBAAA,GAAA;AAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;IACd,IAiBI,aAAA,GAAA,IAAI,CAACjF,KAAK;AAhBZE,MAAAA,MAAM,iBAANA,MAAM;AAAA,MAAA,qBAAA,GAAA,aAAA,CACN2D,QAAQ;MAARA,QAAQ,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAG,EAAE,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,aAAA,CACbvE,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,EAAE,GAAA,qBAAA;AACb6B,MAAAA,WAAW,iBAAXA,WAAW;AACXyE,MAAAA,QAAQ,iBAARA,QAAQ;AAAA,MAAA,qBAAA,GAAA,aAAA,CACRC,WAAW;AAAXA,MAAAA,WAAW,sCAAG,GAAG,GAAA,qBAAA;AACjB/C,MAAAA,QAAQ,iBAARA,QAAQ;AACRuC,MAAAA,IAAI,iBAAJA,IAAI;AAAA,MAAA,qBAAA,GAAA,aAAA,CACJC,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,aAAA,CAChBC,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,aAAA,CAChBC,SAAS;AAATA,MAAAA,SAAS,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,aAAA,CACjBC,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAChBtF,MAAAA,QAAQ,iBAARA,QAAQ;AACRuF,MAAAA,MAAM,iBAANA,MAAM;AACNC,MAAAA,OAAO,iBAAPA,OAAO;AACPG,MAAAA,SAAS,iBAATA,SAAS,CAAA;AAEX,IAAA,IAAQjG,aAAa,GAAK,IAAI,CAACuB,KAAK,CAA5BvB,aAAa,CAAA;AACrB,IAAA,IAAA,oBAAA,GAA+B,IAAI,CAACG,KAAK,CAAnCV,QAAQ;AAAEgB,MAAAA,KAAK,qCAAG,EAAE,GAAA,oBAAA,CAAA;AAC1B,IAAA,IAAMyF,KAAK,GAAG7F,MAAM,CAAC6F,KAAK,IAAIV,IAAI,CAAA;AAClC,IAAA,IAAMf,SAAS,GAAGR,YAAY,CAAYD,QAAQ,CAAC,CAAA;AACnD,IAAA,IAAQzD,WAAW,GAAkBD,QAAQ,CAArCC,WAAW;MAAE4F,WAAW,GAAK7F,QAAQ,CAAxB6F,WAAW,CAAA;AAChC,IAAA,IAAMC,YAAY,GAAQC,QAAQ,CAAChG,MAAM,CAACI,KAAK,CAAC,GAAIJ,MAAM,CAACI,KAAa,GAAI,EAAU,CAAA;IACtF,IAAM0H,WAAW,GAAG/B,YAAY,CAACxG,GAAG,CAAC,UAACC,IAAO,EAAEqB,KAAa,EAAA;MAAA,OAC1DX,WAAW,CAACgG,cAAc,CAAC1G,IAAI,EAAEJ,QAAQ,CAACyB,KAAK,CAAmB,CAAC,CAAA;KACpE,CAAA,CAAA;IACD,IAAMkH,gBAAgB,GAAG/B,QAAQ,CAAChG,MAAM,CAACO,eAAe,CAAC,GACrDL,WAAW,CAACgG,cAAc,CAAClG,MAAM,CAACO,eAAoB,EAAEnB,QAAQ,CAAC,GACjE,IAAI,CAAA;IAER,IAAI,CAACgB,KAAK,IAAIA,KAAK,CAACgD,MAAM,GAAG0E,WAAW,CAAC1E,MAAM,EAAE;AAC/C;MACAhD,KAAK,GAAGA,KAAK,IAAI,EAAE,CAAA;AACnBA,MAAAA,KAAK,GAAGA,KAAK,CAAC4H,MAAM,CAAC,IAAI3I,KAAK,CAACyI,WAAW,CAAC1E,MAAM,GAAGhD,KAAK,CAACgD,MAAM,CAAC,CAAC,CAAA;AACnE,KAAA;AAED;IACA,IAAM+C,MAAM,GAAG,IAAI,CAAC1C,UAAU,CAACrD,KAAK,CAAC,IAAI,CAAC,CAAC2H,gBAAgB,CAAA;AAC3D,IAAA,IAAM3B,UAAU,GAAuC;AACrDD,MAAAA,MAAM,EAANA,MAAM;AACNa,MAAAA,SAAS,EAAE,2CAA2C;AACtD5B,MAAAA,QAAQ,EAARA,QAAQ;AACRxC,MAAAA,QAAQ,EAARA,QAAQ;AACRxD,MAAAA,QAAQ,EAARA,QAAQ;MACRgB,KAAK,EAAET,aAAa,CAACJ,GAAG,CAAC,UAACK,SAAS,EAAEiB,KAAK,EAAI;AAC5C,QAAA,IAAQpB,GAAG,GAAWG,SAAS,CAAvBH,GAAG;UAAED,IAAI,GAAKI,SAAS,CAAlBJ,IAAI,CAAA;AACjB;QACA,IAAM6G,QAAQ,GAAG7G,IAAsB,CAAA;AACvC,QAAA,IAAMyI,UAAU,GAAGpH,KAAK,IAAIiH,WAAW,CAAC1E,MAAM,CAAA;QAC9C,IAAMjD,UAAU,GACd8H,UAAU,IAAIjC,QAAQ,CAAChG,MAAM,CAACO,eAAe,CAAC,GAC1CL,WAAW,CAACgG,cAAc,CAAClG,MAAM,CAACO,eAAoB,EAAE8F,QAAQ,CAAC,GACjEyB,WAAW,CAACjH,KAAK,CAAC,CAAA;QACxB,IAAM0F,YAAY,GAAG3D,QAAQ,CAACE,GAAG,GAAG6C,WAAW,GAAG9E,KAAK,CAAA;AACvD,QAAA,IAAM2F,YAAY,GAAGtG,WAAW,CAACuG,UAAU,CAACtG,UAAU,EAAEoG,YAAY,EAAEF,QAAQ,EAAEX,QAAQ,EAAEC,WAAW,CAAC,CAAA;AACtG,QAAA,IAAMmB,YAAY,GAAGmB,UAAU,GAC3BtE,QAAQ,CAACpD,eAAe,IAAI,EAAE,GAC9BlB,KAAK,CAACC,OAAO,CAACqE,QAAQ,CAACvD,KAAK,CAAC,GAC7BuD,QAAQ,CAACvD,KAAK,CAACS,KAAK,CAAC,GACrB8C,QAAQ,CAACvD,KAAK,IAAI,EAAE,CAAA;QACxB,IAAMkG,eAAe,GAAGrF,WAAW,GAAIA,WAAW,CAACJ,KAAK,CAAsB,GAAGgC,SAAS,CAAA;QAE1F,OAAO,MAAI,CAAC6D,oBAAoB,CAAC;AAC/BjH,UAAAA,GAAG,EAAHA,GAAG;AACHoB,UAAAA,KAAK,EAALA,KAAK;AACLsE,UAAAA,IAAI,EAAEA,IAAI,IAAOA,IAAI,SAAItE,KAAO;AAChCsF,UAAAA,MAAM,EAANA,MAAM;AACN+B,UAAAA,SAAS,EAAED,UAAU;AACrBtB,UAAAA,SAAS,EAAE9F,KAAK,IAAIiH,WAAW,CAAC1E,MAAM,GAAG,CAAC;UAC1CwD,WAAW,EAAEqB,UAAU,IAAIpH,KAAK,GAAGT,KAAK,CAACgD,MAAM,GAAG,CAAC;AACnDjD,UAAAA,UAAU,EAAVA,UAAU;AACV0G,UAAAA,QAAQ,EAAER,QAAQ;AAClBS,UAAAA,YAAY,EAAZA,YAAY;AACZN,UAAAA,YAAY,EAAZA,YAAY;AACZF,UAAAA,eAAe,EAAfA,eAAe;AACfhB,UAAAA,SAAS,EAAEA,SAAS,IAAIzE,KAAK,KAAK,CAAC;AACnC2E,UAAAA,MAAM,EAANA,MAAM;AACNC,UAAAA,OAAO,EAAPA,OAAO;AACPG,UAAAA,SAAS,EAATA,SAAS;UACTmB,UAAU,EAAEpH,aAAa,CAACyD,MAAAA;AAC3B,SAAA,CAAC,CAAA;AACJ,OAAC,CAAC;MACF3C,UAAU,EAAE,IAAI,CAACA,UAAU;AAC3B4E,MAAAA,QAAQ,EAARA,QAAQ;AACRE,MAAAA,QAAQ,EAARA,QAAQ;AACRtF,MAAAA,QAAQ,EAARA,QAAQ;AACRD,MAAAA,MAAM,EAANA,MAAM;AACN2D,MAAAA,QAAQ,EAARA,QAAQ;AACRkC,MAAAA,KAAK,EAALA,KAAK;AACLC,MAAAA,WAAW,EAAXA,WAAW;AACXF,MAAAA,SAAS,EAATA,SAAAA;KACD,CAAA;IAED,IAAMqB,QAAQ,GAAG3C,WAAW,CAAkC,oBAAoB,EAAErE,QAAQ,EAAEmE,SAAS,CAAC,CAAA;AACxG,IAAA,OAAOG,GAAC,CAAA0C,QAAQ,EAAA,QAAA,CAAA,EAAA,EAAKb,UAAU,CAAI,CAAA,CAAA;AACrC,GAAA;AAEA;;;;AAIG,MAJH;AAAA,EAAA,MAAA,CAKAM,oBAAoB,GAApB,SAAqB5G,oBAAAA,CAAAA,KAkBpB,EAAA;AACC,IAAA,IACEL,GAAG,GAiBDK,KAAK,CAjBPL,GAAG;MACHoB,KAAK,GAgBHf,KAAK,CAhBPe,KAAK;MACLsE,IAAI,GAeFrF,KAAK,CAfPqF,IAAI;MACJgB,MAAM,GAcJrG,KAAK,CAdPqG,MAAM;MAAA,gBAcJrG,GAAAA,KAAK,CAbPoI,SAAS;AAATA,MAAAA,SAAS,iCAAG,IAAI,GAAA,gBAAA;MAAA,gBAadpI,GAAAA,KAAK,CAZP6G,SAAS;AAATA,MAAAA,SAAS,iCAAG,IAAI,GAAA,gBAAA;MAAA,kBAYd7G,GAAAA,KAAK,CAXP8G,WAAW;AAAXA,MAAAA,WAAW,mCAAG,IAAI,GAAA,kBAAA;MAClBzG,UAAU,GAURL,KAAK,CAVPK,UAAU;MACV0G,QAAQ,GASN/G,KAAK,CATP+G,QAAQ;MACRC,YAAY,GAQVhH,KAAK,CARPgH,YAAY;MACZN,YAAY,GAOV1G,KAAK,CAPP0G,YAAY;MACZF,eAAe,GAMbxG,KAAK,CANPwG,eAAe;MACfhB,SAAS,GAKPxF,KAAK,CALPwF,SAAS;MACTE,MAAM,GAIJ1F,KAAK,CAJP0F,MAAM;MACNC,OAAO,GAGL3F,KAAK,CAHP2F,OAAO;MACPG,SAAS,GAEP9F,KAAK,CAFP8F,SAAS;MACTmB,UAAU,GACRjH,KAAK,CADPiH,UAAU,CAAA;IAEZ,IAAkG,aAAA,GAAA,IAAI,CAACjH,KAAK;AAApGsF,MAAAA,QAAQ,iBAARA,QAAQ;AAAE8B,MAAAA,SAAS,iBAATA,SAAS;AAAExB,MAAAA,QAAQ,iBAARA,QAAQ;AAAEC,MAAAA,WAAW,iBAAXA,WAAW;AAAEN,MAAAA,QAAQ,iBAARA,QAAQ;AAAE1B,MAAAA,QAAQ,iBAARA,QAAQ;AAAE1D,MAAAA,QAAQ,iBAARA,QAAQ;AAAE6F,MAAAA,WAAW,iBAAXA,WAAW,CAAA;IAC7F,IAEI7F,gBAAAA,GAAAA,QAAQ,CADVkI,MAAM;AAAIC,MAAAA,gBAAgB,oBAAhBA,gBAAgB;AAAEC,MAAAA,WAAW,oBAAXA,WAAW,CAAA;AAEzC,IAAA,IAAMC,eAAe,GAAGF,gBAAgB,IAAIC,WAAW,CAAA;IACvD,IAA+CzE,cAAAA,GAAAA,YAAY,CAAYD,QAAQ,CAAC;AAAA,MAAA,qBAAA,GAAA,cAAA,CAAxE4E,SAAS;AAATA,MAAAA,SAAS,sCAAG,IAAI,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,cAAA,CAAEC,SAAS;AAATA,MAAAA,SAAS,sCAAG,IAAI,GAAA,qBAAA,CAAA;AAC1C,IAAA,IAAMC,GAAG,GAA+B;MACtCC,MAAM,EAAEH,SAAS,IAAI5B,SAAS;MAC9BgC,QAAQ,EAAEJ,SAAS,IAAI3B,WAAW;MAClCgC,MAAM,EAAEJ,SAAS,IAAIN,SAAS;AAC9BW,MAAAA,OAAO,EAAE,KAAA;KACV,CAAA;AACDJ,IAAAA,GAAG,CAACI,OAAO,GAAGC,MAAM,CAACC,IAAI,CAACN,GAAG,CAAC,CAACO,IAAI,CAAC,UAACvJ,GAAqB,EAAA;MAAA,OAAKgJ,GAAG,CAAChJ,GAAG,CAAC,CAAA;KAAC,CAAA,CAAA;IAExE,OAAO;AACLwJ,MAAAA,QAAQ,EACN1E,GAAC,CAAA+D,eAAe;AACdnD,QAAAA,IAAI,EAAEA,IAAI;AACVtE,QAAAA,KAAK,EAAEA,KAAK;AACZb,QAAAA,MAAM,EAAEG,UAAU;AAClBwD,QAAAA,QAAQ,EAAEmD,YAAY;AACtB1H,QAAAA,QAAQ,EAAEyH,QAAQ;AAClBf,QAAAA,WAAW,EAAEA,WAAW;AACxB7E,QAAAA,WAAW,EAAEqF,eAAe;AAC5BZ,QAAAA,QAAQ,EAAEA,QAAQ;AAClBC,QAAAA,WAAW,EAAEA,WAAW;AACxB/C,QAAAA,QAAQ,EAAE4D,YAAY;AACtBjB,QAAAA,QAAQ,EAAE,IAAI,CAACjC,cAAc,CAACnD,UAAU,CAAC;AACzCa,QAAAA,QAAQ,EAAE,IAAI,CAACqB,gBAAgB,CAACxB,KAAK,CAAC;AACtC2E,QAAAA,MAAM,EAAEA,MAAM;AACdC,QAAAA,OAAO,EAAEA,OAAO;AAChBxF,QAAAA,QAAQ,EAAEA,QAAQ;AAClBmF,QAAAA,QAAQ,EAAEA,QAAQ;AAClBC,QAAAA,QAAQ,EAAEA,QAAQ;AAClB6B,QAAAA,SAAS,EAAEA,SAAS;AACpB5B,QAAAA,SAAS,EAAEA,SAAS;AACpBM,QAAAA,SAAS,EAAEA,SAAAA;AAAS,OAAA,CAEvB;AACDoB,MAAAA,SAAS,EAAE,YAAY;AACvB5B,MAAAA,QAAQ,EAARA,QAAQ;AACRe,MAAAA,MAAM,EAANA,MAAM;MACN+C,UAAU,EAAET,GAAG,CAACI,OAAO;MACvBM,SAAS,EAAEV,GAAG,CAACC,MAAM;MACrBU,WAAW,EAAEX,GAAG,CAACE,QAAQ;MACzBU,SAAS,EAAEZ,GAAG,CAACG,MAAM;AACrB/H,MAAAA,KAAK,EAALA,KAAK;AACLkG,MAAAA,UAAU,EAAVA,UAAU;AACVtH,MAAAA,GAAG,EAAHA,GAAG;MACHmB,eAAe,EAAE,IAAI,CAACA,eAAe;MACrCE,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;MACvCe,cAAc,EAAE,IAAI,CAACA,cAAc;AACnCwD,MAAAA,QAAQ,EAARA,QAAQ;AACRpF,MAAAA,QAAQ,EAARA,QAAQ;AACRD,MAAAA,MAAM,EAAEG,UAAU;AAClBwD,MAAAA,QAAQ,EAAEmD,YAAAA;KACX,CAAA;GACF,CAAA;AAAA,EAAA,YAAA,CAAA,UAAA,EAAA,CAAA;AAAA,IAAA,GAAA,EAAA,WAAA;AAAA,IAAA,GAAA,EA5rBD,SAAawC,KAAA,GAAA;MACX,IAA6B,aAAA,GAAA,IAAI,CAACxJ,KAAK;AAA/BE,QAAAA,MAAM,iBAANA,MAAM;AAAEC,QAAAA,QAAQ,iBAARA,QAAQ,CAAA;AACxB,MAAA,IAAQiE,eAAe,GAAKjE,QAAQ,CAA5BiE,eAAe,CAAA;MACvB,OAAOoF,GAAG,CACRtJ,MAAM,EACN,CAACmE,SAAS,EAAE,OAAO,CAAC,EACpBmF,GAAG,CAACtJ,MAAM,EAAE,CAACmE,SAAS,EAAE,aAAa,CAAC,EAAED,eAAe,CAACO,kBAAkB,CAAC8E,cAAc,CAAC,CAAC,CAC5F,CAAA;AACH,KAAA;AAAC,GAAA,CAAA,CAAA,CAAA;AAAA,EAAA,OAAA,UAAA,CAAA;AAAA,CAAA,CA7DyGC,SAG3G,CAAA;;;AC9DD;;;;AAIG;AACH,SAASC,YAAY,CACnB3J,KAA0B,EAAA;AAE1B,EAAA,IACEE,MAAM,GAcJF,KAAK,CAdPE,MAAM;IACNmF,IAAI,GAaFrF,KAAK,CAbPqF,IAAI;IACJxB,QAAQ,GAYN7D,KAAK,CAZP6D,QAAQ;IACRf,QAAQ,GAWN9C,KAAK,CAXP8C,QAAQ;IACRxD,QAAQ,GAUNU,KAAK,CAVPV,QAAQ;IACRa,QAAQ,GASNH,KAAK,CATPG,QAAQ;IACRsF,QAAQ,GAQNzF,KAAK,CARPyF,QAAQ;IACRH,QAAQ,GAONtF,KAAK,CAPPsF,QAAQ;IACRC,QAAQ,GAMNvF,KAAK,CANPuF,QAAQ;IACRC,SAAS,GAKPxF,KAAK,CALPwF,SAAS;IACTtE,QAAQ,GAINlB,KAAK,CAJPkB,QAAQ;IACRyE,OAAO,GAGL3F,KAAK,CAHP2F,OAAO;IACPD,MAAM,GAEJ1F,KAAK,CAFP0F,MAAM;IACNI,SAAS,GACP9F,KAAK,CADP8F,SAAS,CAAA;AAEX,EAAA,IAAQC,KAAK,GAAK7F,MAAM,CAAhB6F,KAAK,CAAA;AACb,EAAA,IAAQuB,OAAO,GAAmCnH,QAAQ,CAAlDmH,OAAO;IAAEtB,WAAW,GAAsB7F,QAAQ,CAAzC6F,WAAW;IAAE5B,eAAe,GAAKjE,QAAQ,CAA5BiE,eAAe,CAAA;EAC7C,IAA4CN,aAAAA,GAAAA,YAAY,CAAUD,QAAQ,CAAC;AAAA,IAAA,oBAAA,GAAA,aAAA,CAAnE0D,MAAM;AAANA,IAAAA,MAAM,qCAAG,UAAU,GAAA,oBAAA;IAAKC,OAAO,GAAA,6BAAA,CAAA,aAAA,EAAAC,WAAA,CAAA,CAAA;EACvC,IAAMC,MAAM,GAAGC,SAAS,CAACzH,MAAM,EAAEqH,MAAM,EAAED,OAAO,CAAC,CAAA;AACjD,EAAA,IAAMsC,GAAG,GAAGxF,eAAe,CAACO,kBAAkB,CAACkF,QAAQ,CAAC,CAAA;AACxD,EAAA,IAAMC,EAAE,GAAG1F,eAAe,CAACO,kBAAkB,CAACoF,OAAO,CAAC,CAAA;AAEtD,EAAA,IAAIjC,WAA6C,CAAA;EAEjD,IAAIvI,KAAK,CAACC,OAAO,CAACU,MAAM,CAAC8J,KAAK,CAAC,EAAE;IAC/BlC,WAAW,GAAGC,WAAW,CAAI;MAC3BiC,KAAK,EAAE9J,MAAM,CAAC8J,KAAK,CAChBvK,GAAG,CAAC,UAACwK,MAAM,EAAI;AACd,QAAA,IAAI/D,QAAQ,CAAC+D,MAAM,CAAC,EAAE;AACpB,UAAA,OAAA,QAAA,CAAA,EAAA,EACKA,MAAM,EAAA;AACTlE,YAAAA,KAAK,EAAEkE,MAAM,CAAClE,KAAK,KAAKkE,MAAM,CAAM,OAAA,CAAA,KAAK,IAAI,GAAGL,GAAG,GAAGE,EAAE,CAAA;AAAC,WAAA,CAAA,CAAA;AAE5D,SAAA;AACD,QAAA,OAAO/G,SAAS,CAAA;AAClB,OAAC,CAAC,CACDpB,MAAM,CAAC,UAACuI,CAAM,EAAA;AAAA,QAAA,OAAKA,CAAC,CAAA;AAAA,OAAA,CAAQ;AAChB,KAAA,CAAC,CAAA;AACnB,GAAA,MAAM;AAAA,IAAA,IAAA,YAAA,CAAA;AACL;IACA,IAAMC,mBAAmB,GAAGjK,MAAsC,CAAA;IAClE,IAAMkK,KAAK,mBAAGlK,MAAM,CAAA,MAAA,CAAK,2BAAI,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;AAC1C,IAAA,IAAI,CAACiK,mBAAmB,CAACE,SAAS,IAAID,KAAK,CAAC9G,MAAM,KAAK,CAAC,IAAI8G,KAAK,CAACE,KAAK,CAAC,UAACC,CAAM,EAAA;MAAA,OAAK,OAAOA,CAAC,KAAK,SAAS,CAAA;AAAA,KAAA,CAAC,EAAE;AAC3GzC,MAAAA,WAAW,GAAG,CACZ;AACEtF,QAAAA,KAAK,EAAE4H,KAAK,CAAC,CAAC,CAAC;AACfvC,QAAAA,KAAK,EAAEuC,KAAK,CAAC,CAAC,CAAC,GAAGR,GAAG,GAAGE,EAAAA;AACzB,OAAA,EACD;AACEtH,QAAAA,KAAK,EAAE4H,KAAK,CAAC,CAAC,CAAC;AACfvC,QAAAA,KAAK,EAAEuC,KAAK,CAAC,CAAC,CAAC,GAAGR,GAAG,GAAGE,EAAAA;AACzB,OAAA,CACF,CAAA;AACF,KAAA,MAAM;MACLhC,WAAW,GAAGC,WAAW,CAAI;AAC3B,QAAA,MAAA,EAAMqC,KAAK;AACX;QACAC,SAAS,EAAEF,mBAAmB,CAACE,SAAAA;AAChB,OAAA,CAAC,CAAA;AACnB,KAAA;AACF,GAAA;EAED,OACE5F,GAAC,CAAAiD,MAAM;AACLF,IAAAA,OAAO,eAAOA,OAAO,EAAA;AAAEM,MAAAA,WAAW,EAAXA,WAAAA;KAAa,CAAA;AACpC5H,IAAAA,MAAM,EAAEA,MAAM;AACd2D,IAAAA,QAAQ,EAAEA,QAAQ;IAClBpB,EAAE,EAAEK,QAAQ,CAACE,GAAG;AAChBqC,IAAAA,IAAI,EAAEA,IAAI;AACVnE,IAAAA,QAAQ,EAAEA,QAAQ;AAClByE,IAAAA,OAAO,EAAEA,OAAO;AAChBD,IAAAA,MAAM,EAAEA,MAAM;AACdmC,IAAAA,KAAK,EAAE9B,KAAK,KAAKhD,SAAS,GAAGsC,IAAI,GAAGU,KAAK;AACzCvD,IAAAA,KAAK,EAAElD,QAAQ;AACfmG,IAAAA,QAAQ,EAAEA,QAAQ;AAClBH,IAAAA,QAAQ,EAAEA,QAAQ;AAClBC,IAAAA,QAAQ,EAAEA,QAAQ;AAClBpF,IAAAA,QAAQ,EAAEA,QAAQ;AAClB6F,IAAAA,WAAW,EAAEA,WAAW;AACxBR,IAAAA,SAAS,EAAEA,SAAS;AACpBM,IAAAA,SAAS,EAAEA,SAAAA;AAAS,GAAA,CACpB,CAAA;AAEN;;;ACjFA;;;;AAIG;AAJH,IAKM0E,UAA8F,gBAAA,UAAA,UAAA,EAAA;AAAA,EAAA,cAAA,CAAA,UAAA,EAAA,UAAA,CAAA,CAAA;AAIlG;;;AAGG;AACH,EAAA,SAAA,UAAA,CAAYxK,KAA0B,EAAA;AAAA,IAAA,IAAA,KAAA,CAAA;AACpC,IAAA,KAAA,GAAA,UAAA,CAAA,IAAA,CAAA,IAAA,EAAMA,KAAK,CAAC,IAAA,IAAA,CAAA;AAAC,IAAA,KAAA,CAuEfyK,cAAc,GAAG,UAACR,MAAe,EAAI;AACnC,MAAA,IAAA,WAAA,GAA6C,MAAK7I,KAAK;AAA/CsJ,QAAAA,cAAc,eAAdA,cAAc;AAAEC,QAAAA,gBAAgB,eAAhBA,gBAAgB,CAAA;AACxC,MAAA,IAAA,WAAA,GAAyC,MAAK3K,KAAK;AAA3CV,QAAAA,QAAQ,eAARA,QAAQ;AAAE4B,QAAAA,QAAQ,eAARA,QAAQ;AAAEf,QAAAA,QAAQ,eAARA,QAAQ,CAAA;AACpC,MAAA,IAAQC,WAAW,GAAKD,QAAQ,CAAxBC,WAAW,CAAA;AACnB,MAAA,IAAMwK,SAAS,GAAGX,MAAM,KAAKlH,SAAS,GAAGvB,QAAQ,CAACyI,MAAM,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;MAClE,IAAIW,SAAS,KAAKF,cAAc,EAAE;AAChC,QAAA,OAAA;AACD,OAAA;MACD,IAAMG,SAAS,GAAGD,SAAS,IAAI,CAAC,GAAGD,gBAAgB,CAACC,SAAS,CAAC,GAAG7H,SAAS,CAAA;MAC1E,IAAM+H,SAAS,GAAGJ,cAAc,IAAI,CAAC,GAAGC,gBAAgB,CAACD,cAAc,CAAC,GAAG3H,SAAS,CAAA;MAEpF,IAAIJ,WAAW,GAAGvC,WAAW,CAAC2K,wBAAwB,CAACF,SAAS,EAAEC,SAAS,EAAExL,QAAQ,CAAC,CAAA;MACtF,IAAIqD,WAAW,IAAIkI,SAAS,EAAE;AAC5B;AACA;QACAlI,WAAW,GAAGvC,WAAW,CAACM,mBAAmB,CAACmK,SAAS,EAAElI,WAAW,EAAE,uBAAuB,CAAM,CAAA;AACpG,OAAA;MACDzB,QAAQ,CAACyB,WAAW,EAAEI,SAAS,EAAE,KAAKiI,CAAAA,UAAU,EAAE,CAAC,CAAA;AAEnD,MAAA,KAAA,CAAKnJ,QAAQ,CAAC;AAAE6I,QAAAA,cAAc,EAAEE,SAAAA;AAAW,OAAA,CAAC,CAAA;KAC7C,CAAA;AAzFC,IAAA,IAAA,YAAA,GAII,MAAK5K,KAAK;AAHZV,MAAAA,SAAQ,gBAARA,QAAQ;AACRkI,MAAAA,OAAO,gBAAPA,OAAO;MACKpH,YAAW,GAAA,YAAA,CAAvBD,QAAQ,CAAIC,WAAW,CAAA;AAEzB;AACA,IAAA,IAAMuK,iBAAgB,GAAGnD,OAAO,CAAC/H,GAAG,CAAC,UAACwL,GAAM,EAAA;AAAA,MAAA,OAAK7K,YAAW,CAACgG,cAAc,CAAC6E,GAAG,EAAE3L,SAAQ,CAAC,CAAA;KAAC,CAAA,CAAA;AAE3F,IAAA,KAAA,CAAK8B,KAAK,GAAG;AACXuJ,MAAAA,gBAAgB,EAAhBA,iBAAgB;MAChBD,cAAc,EAAE,MAAKQ,iBAAiB,CAAC,CAAC,EAAE5L,SAAQ,EAAEqL,iBAAgB,CAAA;KACrE,CAAA;AAAC,IAAA,OAAA,KAAA,CAAA;AACJ,GAAA;AAEA;;;;;AAKG;AALH,EAAA,IAAA,MAAA,GAAA,UAAA,CAAA,SAAA,CAAA;AAAA,EAAA,MAAA,CAMAQ,kBAAkB,GAAlB,SAAA,kBAAA,CAAmBC,SAAwC,EAAEjI,SAAoC,EAAA;IAC/F,IAAwC,YAAA,GAAA,IAAI,CAACnD,KAAK;AAA1CV,MAAAA,QAAQ,gBAARA,QAAQ;AAAEkI,MAAAA,OAAO,gBAAPA,OAAO;AAAE1E,MAAAA,QAAQ,gBAARA,QAAQ,CAAA;AACnC,IAAA,IAAQ4H,cAAc,GAAK,IAAI,CAACtJ,KAAK,CAA7BsJ,cAAc,CAAA;AACtB,IAAA,IAAIW,QAAQ,GAAG,IAAI,CAACjK,KAAK,CAAA;IACzB,IAAI,CAACkK,UAAU,CAACF,SAAS,CAAC5D,OAAO,EAAEA,OAAO,CAAC,EAAE;MAC3C,IACcpH,WAAW,GACrB,IAAI,CAACJ,KAAK,CADZG,QAAQ,CAAIC,WAAW,CAAA;AAEzB;AACA,MAAA,IAAMuK,gBAAgB,GAAGnD,OAAO,CAAC/H,GAAG,CAAC,UAACwL,GAAM,EAAA;AAAA,QAAA,OAAK7K,WAAW,CAACgG,cAAc,CAAC6E,GAAG,EAAE3L,QAAQ,CAAC,CAAA;OAAC,CAAA,CAAA;AAC3F+L,MAAAA,QAAQ,GAAG;AAAEX,QAAAA,cAAc,EAAdA,cAAc;AAAEC,QAAAA,gBAAgB,EAAhBA,gBAAAA;OAAkB,CAAA;AAChD,KAAA;AACD,IAAA,IAAI,CAACW,UAAU,CAAChM,QAAQ,EAAE8L,SAAS,CAAC9L,QAAQ,CAAC,IAAIwD,QAAQ,CAACE,GAAG,KAAKoI,SAAS,CAACtI,QAAQ,CAACE,GAAG,EAAE;AACxF,MAAA,IAAA,SAAA,GAA6BqI,QAAQ;AAA7BV,QAAAA,kBAAgB,aAAhBA,gBAAgB,CAAA;MACxB,IAAMY,cAAc,GAAG,IAAI,CAACL,iBAAiB,CAACR,cAAc,EAAEpL,QAAQ,EAAEqL,kBAAgB,CAAC,CAAA;AAEzF,MAAA,IAAIxH,SAAS,IAAIoI,cAAc,KAAKb,cAAc,EAAE;AAClDW,QAAAA,QAAQ,GAAG;AAAEX,UAAAA,cAAc,EAAEa,cAAc;AAAEZ,UAAAA,gBAAgB,EAAhBA,kBAAAA;SAAkB,CAAA;AAChE,OAAA;AACF,KAAA;AACD,IAAA,IAAIU,QAAQ,KAAK,IAAI,CAACjK,KAAK,EAAE;AAC3B,MAAA,IAAI,CAACS,QAAQ,CAACwJ,QAAQ,CAAC,CAAA;AACxB,KAAA;AACH,GAAA;AAEA;;;;;AAKG,MALH;EAAA,MAMAH,CAAAA,iBAAiB,GAAjB,SAAkBR,iBAAAA,CAAAA,cAAsB,EAAEpL,QAAuB,EAAEkI,OAAY,EAAA;IAC7E,IAAQpH,WAAW,GAAK,IAAI,CAACJ,KAAK,CAACG,QAAQ,CAAnCC,WAAW,CAAA;IAEnB,IAAM6J,MAAM,GAAG7J,WAAW,CAACoL,wBAAwB,CAAClM,QAAQ,EAAEkI,OAAO,EAAEkD,cAAc,CAAC,CAAA;IACtF,IAAIT,MAAM,GAAG,CAAC,EAAE;AACd,MAAA,OAAOA,MAAM,CAAA;AACd,KAAA;AACD;AACA;IACA,OAAOS,cAAc,IAAI,CAAC,CAAA;AAC5B,GAAA;AAEA;;;;;AAKG,MALH;EAAA,MA4BAM,CAAAA,UAAU,GAAV,SAAU,UAAA,GAAA;IACR,IAA6B,YAAA,GAAA,IAAI,CAAChL,KAAK;AAA/B8C,MAAAA,QAAQ,gBAARA,QAAQ;AAAE5C,MAAAA,MAAM,gBAANA,MAAM,CAAA;IACxB,OAAU4C,EAAAA,GAAAA,QAAQ,CAACE,GAAG,IAAG9C,MAAM,CAAC8J,KAAK,GAAG,gBAAgB,GAAG,gBAAgB,CAAA,CAAA;AAC7E,GAAA;AAEA;AACG,MADH;EAAA,MAEA7F,CAAAA,MAAM,GAAN,SAAM,MAAA,GAAA;IACJ,IAWI,YAAA,GAAA,IAAI,CAACnE,KAAK;AAVZqF,MAAAA,IAAI,gBAAJA,IAAI;AACJoG,MAAAA,QAAQ,gBAARA,QAAQ;AAAA,MAAA,qBAAA,GAAA,YAAA,CACRnG,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,YAAA,CAChBnE,WAAW;MAAXA,WAAW,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAG,EAAE,GAAA,qBAAA;AAChB6E,MAAAA,WAAW,gBAAXA,WAAW;AACXN,MAAAA,MAAM,gBAANA,MAAM;AACNC,MAAAA,OAAO,gBAAPA,OAAO;AACPxF,MAAAA,QAAQ,gBAARA,QAAQ;AACRD,MAAAA,MAAM,gBAANA,MAAM;AACN2D,MAAAA,QAAQ,gBAARA,QAAQ,CAAA;AAGV,IAAA,IAAQyD,OAAO,GAA8BnH,QAAQ,CAA7CmH,OAAO;MAAEe,MAAM,GAAsBlI,QAAQ,CAApCkI,MAAM;MAAEjE,eAAe,GAAKjE,QAAQ,CAA5BiE,eAAe,CAAA;AACxC,IAAA,IAAqBsH,YAAY,GAAKrD,MAAM,CAApCE,WAAW,CAAA;IACnB,IAA6C,YAAA,GAAA,IAAI,CAACnH,KAAK;AAA/CsJ,MAAAA,cAAc,gBAAdA,cAAc;AAAEC,MAAAA,gBAAgB,gBAAhBA,gBAAgB,CAAA;IACxC,IAOI7G,aAAAA,GAAAA,YAAY,CAAUD,QAAQ,CAAC;AAAA,MAAA,oBAAA,GAAA,aAAA,CANjC0D,MAAM;AAANA,MAAAA,MAAM,qCAAG,QAAQ,GAAA,oBAAA;AACjBF,MAAAA,WAAW,iBAAXA,WAAW;AACX7B,MAAAA,SAAS,iBAATA,SAAS;AACTmG,MAAAA,YAAY,iBAAZA,YAAY;AAAA,MAAA,mBAAA,GAAA,aAAA,CACZ5F,KAAK;MAALA,KAAK,GAAA,mBAAA,KAAA,KAAA,CAAA,GAAG7F,MAAM,CAAC6F,KAAK,GAAA,mBAAA;MACjBzB,SAAS,GAAA,6BAAA,CAAA,aAAA,EAAAmD,WAAA,CAAA,CAAA;IAEd,IAAMC,MAAM,GAAGC,SAAS,CAAU;AAAElE,MAAAA,IAAI,EAAE,QAAA;AAAQ,KAAE,EAAE8D,MAAM,EAAED,OAAO,CAAC,CAAA;IACtE,IAAMxB,SAAS,GAAG0D,GAAG,CAACrI,WAAW,EAAEyK,UAAU,EAAE,EAAE,CAAC,CAAA;IAClD,IAAMC,gBAAgB,GAAGC,IAAI,CAAC3K,WAAW,EAAE,CAACyK,UAAU,CAAC,CAAC,CAAA;AAExD,IAAA,IAAM3B,MAAM,GAAGS,cAAc,IAAI,CAAC,GAAGC,gBAAgB,CAACD,cAAc,CAAC,IAAI,IAAI,GAAG,IAAI,CAAA;AACpF,IAAA,IAAIqB,YAAe,CAAA;AAEnB,IAAA,IAAI9B,MAAM,EAAE;AACV;AACA;AACA8B,MAAAA,YAAY,GAAG9B,MAAM,CAACxG,IAAI,GAAGwG,MAAM,GAAGjB,MAAM,CAACgD,MAAM,CAAC,EAAE,EAAE/B,MAAM,EAAE;AAAExG,QAAAA,IAAI,EAAEgI,QAAAA;AAAU,OAAA,CAAC,CAAA;AACpF,KAAA;IAED,IAAMQ,aAAa,GAAuBlG,KAAK,GAC3CpB,kBAAkB,CAACuH,iBAAiB,GACpCvH,kBAAkB,CAACwH,YAAY,CAAA;IACnC,IAAMC,eAAe,GAAGrG,KAAK,GAAG,CAACA,KAAK,CAAC,GAAG,EAAE,CAAA;IAC5C,IAAM+B,WAAW,GAAG6C,gBAAgB,CAAClL,GAAG,CAAC,UAACwL,GAAuB,EAAElK,KAAa,EAAA;MAAA,OAAM;QACpF8G,KAAK,EAAEoD,GAAG,CAAClF,KAAK,IAAI3B,eAAe,CAAC6H,aAAa,EAAEG,eAAe,CAAClE,MAAM,CAACmE,MAAM,CAACtL,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;AAC7FyB,QAAAA,KAAK,EAAEzB,KAAAA;OACR,CAAA;AAAA,KAAC,CAAC,CAAA;IAEH,OACEuL,IAAA,CAAA,KAAA,EAAA;AAAKpF,MAAAA,SAAS,EAAC,gCAAgC;AAC7CiC,MAAAA,QAAA,EAAA,CAAA1E,GAAA,CAAA,KAAA,EAAA;AAAKyC,QAAAA,SAAS,EAAC,YAAY;AACzBiC,QAAAA,QAAA,EAAA1E,GAAA,CAACiD,MAAM,EAAA;AACLjF,UAAAA,EAAE,EAAE,IAAI,CAACuI,UAAU,EAAE;UACrB3F,IAAI,EAAA,EAAA,GAAKA,IAAI,IAAGnF,MAAM,CAAC8J,KAAK,GAAG,gBAAgB,GAAG,gBAAgB,CAAE;AACpE9J,UAAAA,MAAM,EAAE;AAAEuD,YAAAA,IAAI,EAAE,QAAQ;YAAE,SAAS,EAAA,CAAA;WAAQ;UAC3CvC,QAAQ,EAAE,IAAI,CAACuJ,cAAc;AAC7B/E,UAAAA,MAAM,EAAEA,MAAM;AACdC,UAAAA,OAAO,EAAEA,OAAO;AAChBL,UAAAA,QAAQ,EAAEA,QAAQ,IAAIiH,OAAO,CAACzE,WAAW,CAAC;AAC1CF,UAAAA,QAAQ,EAAE,KAAK;AACf9B,UAAAA,SAAS,EAAEA,SAAS;AACpB3E,UAAAA,WAAW,EAAE0K,gBAAgB;AAC7BrJ,UAAAA,KAAK,EAAEkI,cAAc,IAAI,CAAC,GAAGA,cAAc,GAAG3H,SAAS;UACvDyE,OAAO,EAAA,QAAA,CAAA;AAAIM,YAAAA,WAAW,EAAXA,WAAAA;AAAW,WAAA,EAAKxD,SAAS,CAAE;AACtCnE,UAAAA,QAAQ,EAAEA,QAAQ;AAClB6F,UAAAA,WAAW,EAAEA,WAAW;AACxBqB,UAAAA,WAAW,EAAEA,WAAW;AACxBsE,UAAAA,YAAY,EAAEA,YAAY;AAC1BnG,UAAAA,SAAS,EAAEA,SAAS;AACpBqC,UAAAA,KAAK,EAAC,EAAA;SACN,CAAA;AAAA,OAAA,CACE,EACLoC,MAAM,KAAK,IAAI,IAAIxF,GAAC,CAAAiH,YAAY,EAAA,QAAA,CAAA,EAAA,EAAK,IAAI,CAAC1L,KAAK,EAAA;AAAEE,QAAAA,MAAM,EAAE6L,YAAAA;OAAiB,CAAA,CAAA,CAAA;AAAA,KAAA,CACvE,CAAA;GAET,CAAA;AAAA,EAAA,OAAA,UAAA,CAAA;AAAA,CAAA,CAvLyGrC,SAG3G,CAAA;;AC7BD;AACA;AACA;AACA;AACA,IAAM8C,6BAA6B,GAAG,eAAe,CAAA;AAErD;AACA;AACA;AACA;AACA,IAAMC,mBAAmB,GAAG,SAAS,CAAA;AAErC;;;;;;;;;;;;;;;;AAgBG;AACH,SAASC,WAAW,CAClB1M,KAA0B,EAAA;AAE1B,EAAA,IAAQG,QAAQ,GAA8CH,KAAK,CAA3DG,QAAQ;IAAEe,QAAQ,GAAoClB,KAAK,CAAjDkB,QAAQ;IAAE5B,QAAQ,GAA0BU,KAAK,CAAvCV,QAAQ;IAASqN,YAAY,GAAK3M,KAAK,CAA7BwC,KAAK,CAAA;EAC3C,IAAkCoK,SAAAA,GAAAA,QAAQ,CAACD,YAAY,CAAC;IAAjDE,SAAS,GAAA,SAAA,CAAA,CAAA,CAAA;IAAEC,YAAY,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAC9B,EAAA,IAAQC,WAAW,GAAK5M,QAAQ,CAACkI,MAAM,CAA/B0E,WAAW,CAAA;EAEnB,IAAIvK,KAAK,GAAGlD,QAAQ,CAAA;AAEpB;;;AAGG;AACH,EAAA,IAAM0N,YAAY,GAAGC,WAAW,CAC9B,UAACzK,KAAmC,EAAI;AACtC;IACAsK,YAAY,CAACtK,KAAK,CAAC,CAAA;AAEnB;AACA;IACA,IAAI,CAAA,EAAA,GAAGA,KAAK,EAAG0K,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,EAAE;AAChC1K,MAAAA,KAAK,SAAOA,KAAO,CAAA;AACpB,KAAA;AAED;AACA;AACA;AACA,IAAA,IAAM2K,SAAS,GACb,OAAO3K,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAAC4K,KAAK,CAACZ,6BAA6B,CAAC,GACnEa,QAAQ,CAAC7K,KAAK,CAAC8K,OAAO,CAACb,mBAAmB,EAAE,EAAE,CAAC,CAAC,GAChDY,QAAQ,CAAC7K,KAAK,CAAC,CAAA;IAErBtB,QAAQ,CAACiM,SAAyB,CAAC,CAAA;AACrC,GAAC,EACD,CAACjM,QAAQ,CAAC,CACX,CAAA;EAED,IAAI,OAAO2L,SAAS,KAAK,QAAQ,IAAI,OAAOrK,KAAK,KAAK,QAAQ,EAAE;AAC9D;AACA;AACA;AACA,IAAA,IAAM+K,EAAE,GAAG,IAAIC,MAAM,CAAC,MAAGhL,KAAK,EAAG8K,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,GAAG,SAAS,CAAC,CAAA;AAEjE;AACA;AACA,IAAA,IAAIT,SAAS,CAACO,KAAK,CAACG,EAAE,CAAC,EAAE;AACvB/K,MAAAA,KAAK,GAAGqK,SAAyB,CAAA;AAClC,KAAA;AACF,GAAA;AAED,EAAA,OAAOpI,GAAC,CAAAsI,WAAW,EAAA,QAAA,CAAA,EAAA,EAAK/M,KAAK,EAAA;AAAEV,IAAAA,QAAQ,EAAEkD,KAAK;AAAEtB,IAAAA,QAAQ,EAAE8L,YAAAA;GAAgB,CAAA,CAAA,CAAA;AAC5E;;AClDA;;;;AAIG;AAJH,IAKMS,WAA+F,gBAAA,UAAA,UAAA,EAAA;AAAA,EAAA,cAAA,CAAA,WAAA,EAAA,UAAA,CAAA,CAAA;AAAA,EAAA,SAAA,WAAA,GAAA;AAAA,IAAA,IAAA,KAAA,CAAA;AAAA,IAAA,KAAA,IAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAA,IAAA,GAAA,IAAA,KAAA,CAAA,IAAA,CAAA,EAAA,IAAA,GAAA,CAAA,EAAA,IAAA,GAAA,IAAA,EAAA,IAAA,EAAA,EAAA;AAAA,MAAA,IAAA,CAAA,IAAA,CAAA,GAAA,SAAA,CAAA,IAAA,CAAA,CAAA;AAAA,KAAA;AAAA,IAAA,KAAA,GAAA,UAAA,CAAA,IAAA,CAAA,KAAA,CAAA,UAAA,EAAA,CAAA,IAAA,CAAA,CAAA,MAAA,CAAA,IAAA,CAAA,CAAA,IAAA,IAAA,CAAA;AAAA,IAAA,KAAA,CAKnGrM,KAAK,GAAG;AACNsM,MAAAA,sBAAsB,EAAE,KAAK;AAC7BC,MAAAA,oBAAoB,EAAE,EAAE;KACzB,CAAA;AAAA,IAAA,KAAA,CAoBDC,gBAAgB,GAAG,UAACvI,IAAY,EAAEwI,2BAA2B,EAAY;AAAA,MAAA,IAAvCA,2BAA2B,KAAA,KAAA,CAAA,EAAA;AAA3BA,QAAAA,2BAA2B,GAAG,KAAK,CAAA;AAAA,OAAA;AACnE,MAAA,OAAO,UAACrL,KAAoB,EAAEnB,cAA+B,EAAEoB,EAAW,EAAI;AAAA,QAAA,IAAA,SAAA,EAAA,SAAA,CAAA;AAC5E,QAAA,IAAA,WAAA,GAA4C,MAAKzC,KAAK;AAA9CV,UAAAA,QAAQ,eAARA,QAAQ;AAAE4B,UAAAA,QAAQ,eAARA,QAAQ;AAAEC,UAAAA,WAAW,eAAXA,WAAW,CAAA;AACvC,QAAA,IAAIqB,KAAK,KAAKO,SAAS,IAAI8K,2BAA2B,EAAE;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACArL,UAAAA,KAAK,GAAG,EAAkB,CAAA;AAC3B,SAAA;AACD,QAAA,IAAMG,WAAW,GAAQrD,QAAAA,CAAAA,EAAAA,EAAAA,QAAQ,6BAAG+F,IAAI,CAAA,GAAG7C,KAAK,EAAkB,SAAA,EAAA,CAAA;AAClEtB,QAAAA,QAAQ,CACNyB,WAAW,EACXxB,WAAW,IACTA,WAAW,IAAA,QAAA,CAAA,EAAA,EACNA,WAAW,GAAA,SAAA,GAAA,EAAA,EAAA,SAAA,CACbkE,IAAI,CAAGhE,GAAAA,cAAc,EACvB,SAAA,EAAA,EACHoB,EAAE,CACH,CAAA;OACF,CAAA;KACF,CAAA;AAAA,IAAA,KAAA,CAQDqL,mBAAmB,GAAG,UAACnO,GAAW,EAAI;MACpC,OAAO,UAACiB,KAAgB,EAAI;QAC1BA,KAAK,CAACK,cAAc,EAAE,CAAA;AACtB,QAAA,IAAA,YAAA,GAA+B,MAAKjB,KAAK;AAAjCkB,UAAAA,QAAQ,gBAARA,QAAQ;AAAE5B,UAAAA,QAAQ,gBAARA,QAAQ,CAAA;QAC1B,IAAMyO,cAAc,GAAQzO,QAAAA,CAAAA,EAAAA,EAAAA,QAAQ,CAAO,CAAA;AAC3C0O,QAAAA,KAAK,CAACD,cAAc,EAAEpO,GAAG,CAAC,CAAA;QAC1BuB,QAAQ,CAAC6M,cAAc,CAAC,CAAA;OACzB,CAAA;KACF,CAAA;AAAA,IAAA,KAAA,CASDE,eAAe,GAAG,UAACC,YAAoB,EAAE5O,QAAY,EAAI;AACvD,MAAA,IAAQuE,QAAQ,GAAK,KAAK7D,CAAAA,KAAK,CAAvB6D,QAAQ,CAAA;MAChB,IAA8CC,aAAAA,GAAAA,YAAY,CAAUD,QAAQ,CAAC;AAAA,QAAA,qBAAA,GAAA,aAAA,CAArEsK,2BAA2B;AAA3BA,QAAAA,2BAA2B,sCAAG,GAAG,GAAA,qBAAA,CAAA;MAEzC,IAAIpN,KAAK,GAAG,CAAC,CAAA;MACb,IAAIqN,MAAM,GAAGF,YAAY,CAAA;AACzB,MAAA,OAAOvF,GAAG,CAACrJ,QAAQ,EAAE8O,MAAM,CAAC,EAAE;AAC5BA,QAAAA,MAAM,QAAMF,YAAY,GAAGC,2BAA2B,GAAG,EAAEpN,KAAO,CAAA;AACnE,OAAA;AACD,MAAA,OAAOqN,MAAM,CAAA;KACd,CAAA;AAAA,IAAA,KAAA,CAQDC,WAAW,GAAG,UAACC,QAAa,EAAI;AAC9B,MAAA,OAAO,UAAC9L,KAAU,EAAEnB,cAA8B,EAAI;AAAA,QAAA,IAAA,QAAA,EAAA,SAAA,CAAA;QACpD,IAAIiN,QAAQ,KAAK9L,KAAK,EAAE;AACtB,UAAA,OAAA;AACD,SAAA;AACD,QAAA,IAAA,YAAA,GAA4C,MAAKxC,KAAK;AAA9CV,UAAAA,QAAQ,gBAARA,QAAQ;AAAE4B,UAAAA,QAAQ,gBAARA,QAAQ;AAAEC,UAAAA,WAAW,gBAAXA,WAAW,CAAA;AAEvCqB,QAAAA,KAAK,GAAG,KAAKyL,CAAAA,eAAe,CAACzL,KAAK,EAAElD,QAAQ,CAAC,CAAA;QAC7C,IAAMqD,WAAW,GACXrD,QAAAA,CAAAA,EAAAA,EAAAA,QAA8B,CACnC,CAAA;AACD,QAAA,IAAMiP,OAAO,IAAA,QAAA,GAAA,EAAA,EAAA,QAAA,CAAyBD,QAAQ,CAAA,GAAG9L,KAAK,EAAE,QAAA,CAAA,CAAA;AACxD,QAAA,IAAMgM,SAAS,GAAGxF,MAAM,CAACC,IAAI,CAACtG,WAAW,CAAC,CAAClD,GAAG,CAAC,UAACE,GAAG,EAAI;AAAA,UAAA,IAAA,IAAA,CAAA;AACrD,UAAA,IAAMyO,MAAM,GAAGG,OAAO,CAAC5O,GAAG,CAAC,IAAIA,GAAG,CAAA;AAClC,UAAA,OAAA,IAAA,GAAA,EAAA,EAAA,IAAA,CAAUyO,MAAM,CAAA,GAAGzL,WAAW,CAAChD,GAAG,CAAC,EAAA,IAAA,CAAA;AACrC,SAAC,CAAC,CAAA;AACF,QAAA,IAAM8O,UAAU,GAAGzF,MAAM,CAACgD,MAAM,CAAA,KAAA,CAAbhD,MAAM,EAAA,CAAQ,EAAE,CAAKwF,CAAAA,MAAAA,CAAAA,SAAS,CAAC,CAAA,CAAA;AAElD,QAAA,KAAA,CAAK3M,QAAQ,CAAC;AAAE6L,UAAAA,sBAAsB,EAAE,IAAA;AAAM,SAAA,CAAC,CAAA;AAE/CxM,QAAAA,QAAQ,CACNuN,UAAU,EACVtN,WAAW,IACTA,WAAW,IACNA,QAAAA,CAAAA,EAAAA,EAAAA,WAAW,GACbqB,SAAAA,GAAAA,EAAAA,EAAAA,SAAAA,CAAAA,KAAK,CAAGnB,GAAAA,cAAc,aACxB,CACJ,CAAA;OACF,CAAA;KACF,CAAA;IAAA,KAiCDqN,CAAAA,cAAc,GAAG,UAACxO,MAAS,EAAA;AAAA,MAAA,OAAK,YAAK;AACnC,QAAA,IAAI,CAACA,MAAM,CAACyN,oBAAoB,EAAE;AAChC,UAAA,OAAA;AACD,SAAA;AACD,QAAA,IAAA,YAAA,GAAyC,MAAK3N,KAAK;AAA3CV,UAAAA,QAAQ,gBAARA,QAAQ;AAAE4B,UAAAA,QAAQ,gBAARA,QAAQ;AAAEf,UAAAA,QAAQ,gBAARA,QAAQ,CAAA;QACpC,IAAMwC,WAAW,GAAQrD,QAAAA,CAAAA,EAAAA,EAAAA,QAAQ,CAAO,CAAA;QAExC,IAAImE,IAAI,GAAuBV,SAAS,CAAA;AACxC,QAAA,IAAImD,QAAQ,CAAChG,MAAM,CAACyN,oBAAoB,CAAC,EAAE;AACzClK,UAAAA,IAAI,GAAGvD,MAAM,CAACyN,oBAAoB,CAAClK,IAAI,CAAA;AACvC,UAAA,IAAIkL,QAAQ,GAAGzO,MAAM,CAACyN,oBAAoB,CAAA;UAC1C,IAAIiB,OAAO,IAAID,QAAQ,EAAE;AACvB,YAAA,IAAQvO,WAAW,GAAKD,QAAQ,CAAxBC,WAAW,CAAA;AACnBuO,YAAAA,QAAQ,GAAGvO,WAAW,CAACgG,cAAc,CAAC;cAAEyI,IAAI,EAAEF,QAAQ,CAACC,OAAO,CAAA;aAAQ,EAAEtP,QAAQ,CAAC,CAAA;YACjFmE,IAAI,GAAGkL,QAAQ,CAAClL,IAAI,CAAA;AACrB,WAAA;UACD,IAAI,CAACA,IAAI,KAAKqL,UAAU,IAAIH,QAAQ,IAAII,UAAU,IAAIJ,QAAQ,CAAC,EAAE;AAC/DlL,YAAAA,IAAI,GAAG,QAAQ,CAAA;AAChB,WAAA;AACF,SAAA;QAED,IAAM2K,MAAM,GAAG,KAAKH,CAAAA,eAAe,CAAC,QAAQ,EAAEtL,WAAW,CAAC,CAAA;AAC1D;QACAlB,GAAG,CAACkB,WAAgC,EAAEyL,MAAM,EAAE,MAAKY,eAAe,CAACvL,IAAI,CAAC,CAAC,CAAA;QAEzEvC,QAAQ,CAACyB,WAAW,CAAC,CAAA;OACtB,CAAA;AAAA,KAAA,CAAA;AAAA,IAAA,OAAA,KAAA,CAAA;AAAA,GAAA;AAAA,EAAA,IAAA,MAAA,GAAA,WAAA,CAAA,SAAA,CAAA;AA7KD;;;;AAIG;AAJH,EAAA,MAAA,CAKAsM,UAAU,GAAV,SAAW5J,UAAAA,CAAAA,IAAY,EAAA;AACrB,IAAA,IAAQnF,MAAM,GAAK,IAAI,CAACF,KAAK,CAArBE,MAAM,CAAA;AACd,IAAA,OAAOX,KAAK,CAACC,OAAO,CAACU,MAAM,CAACuF,QAAQ,CAAC,IAAIvF,MAAM,CAACuF,QAAQ,CAACyJ,OAAO,CAAC7J,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;AAC/E,GAAA;AAEA;;;;;;;AAOG,MAPH;AA0GA;;;AAGG;AAHH,EAAA,MAAA,CAIA2J,eAAe,GAAf,SAAgBvL,eAAAA,CAAAA,IAAyB,EAAA;IACvC,IACcW,eAAe,GACzB,IAAI,CAACpE,KAAK,CADZG,QAAQ,CAAIiE,eAAe,CAAA;AAE7B,IAAA,QAAQX,IAAI;AACV,MAAA,KAAK,OAAO;AACV,QAAA,OAAO,EAAE,CAAA;AACX,MAAA,KAAK,SAAS;AACZ,QAAA,OAAO,KAAK,CAAA;AACd,MAAA,KAAK,MAAM;AACT,QAAA,OAAO,IAAI,CAAA;AACb,MAAA,KAAK,QAAQ;AACX,QAAA,OAAO,CAAC,CAAA;AACV,MAAA,KAAK,QAAQ;AACX,QAAA,OAAO,EAAE,CAAA;AACX,MAAA,KAAK,QAAQ,CAAA;AACb,MAAA;AACE;AACA,QAAA,OAAOW,eAAe,CAACO,kBAAkB,CAACwK,gBAAgB,CAAC,CAAA;AAAC,KAAA;AAElE,GAAA;AAEA;;;;AAIG,MAJH;AAiCA;AACG;EADH,MAEAhL,CAAAA,MAAM,GAAN,SAAM,MAAA,GAAA;AAAA,IAAA,IAAA,MAAA,GAAA,IAAA,CAAA;IACJ,IAgBI,YAAA,GAAA,IAAI,CAACnE,KAAK;AAfJoP,MAAAA,SAAS,gBAAjBlP,MAAM;AAAA,MAAA,qBAAA,GAAA,YAAA,CACN2D,QAAQ;MAARA,QAAQ,GAAA,qBAAA,KAAA,KAAA,CAAA,GAAG,EAAE,GAAA,qBAAA;AACbvE,MAAAA,QAAQ,gBAARA,QAAQ;AACR6B,MAAAA,WAAW,gBAAXA,WAAW;AACX2B,MAAAA,QAAQ,gBAARA,QAAQ;AACRuC,MAAAA,IAAI,gBAAJA,IAAI;AAAA,MAAA,qBAAA,GAAA,YAAA,CACJI,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,YAAA,CAChBH,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,YAAA,CAChBC,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAChB6B,MAAAA,SAAS,gBAATA,SAAS;AACTxB,MAAAA,QAAQ,gBAARA,QAAQ;AACRC,MAAAA,WAAW,gBAAXA,WAAW;AACXH,MAAAA,MAAM,gBAANA,MAAM;AACNC,MAAAA,OAAO,gBAAPA,OAAO;AACPxF,MAAAA,QAAQ,gBAARA,QAAQ,CAAA;AAGV,IAAA,IAAQkI,MAAM,GAA+BlI,QAAQ,CAA7CkI,MAAM;MAAErC,WAAW,GAAkB7F,QAAQ,CAArC6F,WAAW;MAAE5F,WAAW,GAAKD,QAAQ,CAAxBC,WAAW,CAAA;AACxC,IAAA,IAAQmI,WAAW,GAAKF,MAAM,CAAtBE,WAAW,CAAA;IACnB,IAAMrI,MAAM,GAAME,WAAW,CAACgG,cAAc,CAACgJ,SAAS,EAAE9P,QAAQ,CAAC,CAAA;AACjE,IAAA,IAAMgF,SAAS,GAAGR,YAAY,CAAUD,QAAQ,CAAC,CAAA;IACjD,IAA8C3D,kBAAAA,GAAAA,MAAM,CAA5CmP,UAAU;MAAEC,gBAAgB,GAAA,kBAAA,KAAA,KAAA,CAAA,GAAG,EAAE,GAAA,kBAAA,CAAA;AAEzC,IAAA,IAAMvJ,KAAK,GAAG7F,MAAM,CAAC6F,KAAK,KAAKhD,SAAS,GAAGsC,IAAI,GAAGnF,MAAM,CAAC6F,KAAK,CAAA;IAC9D,IAAMwJ,WAAW,GAAGjL,SAAS,CAACiL,WAAW,IAAIrP,MAAM,CAACqP,WAAW,CAAA;AAC/D,IAAA,IAAIC,iBAA2B,CAAA;IAC/B,IAAI;AACF,MAAA,IAAMH,UAAU,GAAGrG,MAAM,CAACC,IAAI,CAACqG,gBAAgB,CAAC,CAAA;MAChDE,iBAAiB,GAAGC,eAAe,CAACJ,UAAU,EAAE/K,SAAS,CAACoL,KAAK,CAAC,CAAA;KACjE,CAAC,OAAOC,GAAG,EAAE;MACZ,OACErD,IACE,CAAA,KAAA,EAAA;AAAAnD,QAAAA,QAAA,EAAA,CAAAmD,IAAA,CAAA,GAAA,EAAA;AAAGpF,UAAAA,SAAS,EAAC,cAAc;AAAC0I,UAAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,KAAA;WAAO;AAAA1G,UAAAA,QAAA,EAAA,CAAA,UAAA,EACxC9D,IAAI,IAAI,MAAM,EACvB,8BAAA,EAAAZ,GAAA,CAAA,IAAA,EAAA;YAAA0E,QAAA,EAAMwG,GAAa,CAACG,OAAAA;WAAa,CAAA,EAAA,GAAA,CAAA;AAAA,SAAA,CAC/B,EACJrL,GAAM,CAAA,KAAA,EAAA;AAAA0E,UAAAA,QAAA,EAAA4G,IAAI,CAACC,SAAS,CAAC9P,MAAM,CAAA;AAAQ,SAAA,CAAA,CAAA;AAAA,OAAA,CAC/B,CAAA;AAET,KAAA;IAED,IAAMiH,QAAQ,GAAG3C,WAAW,CAAiC,qBAAqB,EAAErE,QAAQ,EAAEmE,SAAS,CAAC,CAAA;AAExG,IAAA,IAAM2L,aAAa,GAAG;AACpBlK,MAAAA,KAAK,EAAEzB,SAAS,CAACyB,KAAK,IAAIA,KAAK;AAC/BwJ,MAAAA,WAAW,EAAXA,WAAW;AACXF,MAAAA,UAAU,EAAEG,iBAAiB,CAAC/P,GAAG,CAAC,UAAC4F,IAAI,EAAI;AACzC,QAAA,IAAMwI,2BAA2B,GAAGlF,GAAG,CAACzI,MAAM,EAAE,CAACgQ,cAAc,EAAE7K,IAAI,EAAE8K,wBAAwB,CAAC,CAAC,CAAA;QACjG,IAAMC,aAAa,GAAGvC,2BAA2B,GAAGhK,QAAQ,CAAC8J,oBAAoB,GAAG9J,QAAQ,CAACwB,IAAI,CAAC,CAAA;QAClG,IAAMgL,MAAM,GAAGvM,YAAY,CAAUsM,aAAa,CAAC,CAAC7I,MAAM,KAAK,QAAQ,CAAA;AACvE,QAAA,IAAM+I,aAAa,GAAgB9G,GAAG,CAAC1G,QAAQ,EAAE,CAACuC,IAAI,CAAC,EAAE,EAAE,CAAC,CAAA;QAE5D,OAAO;AACLkL,UAAAA,OAAO,EACL9L,GAAC,CAAA8D,WAAW,EAEV;AAAAlD,YAAAA,IAAI,EAAEA,IAAI;AACVI,YAAAA,QAAQ,EAAE,MAAI,CAACwJ,UAAU,CAAC5J,IAAI,CAAC;AAC/BnF,YAAAA,MAAM,EAAEsJ,GAAG,CAACtJ,MAAM,EAAE,CAACgQ,cAAc,EAAE7K,IAAI,CAAC,EAAE,EAAE,CAAC;AAC/CxB,YAAAA,QAAQ,EAAEuM,aAAa;AACvBjP,YAAAA,WAAW,EAAEqI,GAAG,CAACrI,WAAW,EAAEkE,IAAI,CAAC;AACnCvC,YAAAA,QAAQ,EAAEwN,aAAa;AACvB1K,YAAAA,QAAQ,EAAEA,QAAQ;AAClBC,YAAAA,WAAW,EAAEA,WAAW;AACxBvG,YAAAA,QAAQ,EAAEkK,GAAG,CAAClK,QAAQ,EAAE+F,IAAI,CAAC;AAC7BW,YAAAA,WAAW,EAAEA,WAAW;AACxB0H,YAAAA,sBAAsB,EAAE,MAAI,CAACtM,KAAK,CAACsM,sBAAsB;AACzDW,YAAAA,WAAW,EAAE,MAAI,CAACA,WAAW,CAAChJ,IAAI,CAAC;YACnCnE,QAAQ,EAAE,MAAI,CAAC0M,gBAAgB,CAACvI,IAAI,EAAEwI,2BAA2B,CAAC;AAClEnI,YAAAA,MAAM,EAAEA,MAAM;AACdC,YAAAA,OAAO,EAAEA,OAAO;AAChBxF,YAAAA,QAAQ,EAAEA,QAAQ;AAClBmF,YAAAA,QAAQ,EAAEA,QAAQ;AAClBC,YAAAA,QAAQ,EAAEA,QAAQ;AAClB6B,YAAAA,SAAS,EAAEA,SAAS;YACpB0G,mBAAmB,EAAE,MAAI,CAACA,mBAAAA;WApBrB,EAAAzI,IAAI,CAsBZ;AACDA,UAAAA,IAAI,EAAJA,IAAI;AACJE,UAAAA,QAAQ,EAARA,QAAQ;AACRD,UAAAA,QAAQ,EAARA,QAAQ;AACRG,UAAAA,QAAQ,EAARA,QAAQ;AACR4K,UAAAA,MAAM,EAANA,MAAAA;SACD,CAAA;AACH,OAAC,CAAC;AACF9K,MAAAA,QAAQ,EAARA,QAAQ;AACRD,MAAAA,QAAQ,EAARA,QAAQ;AACRG,MAAAA,QAAQ,EAARA,QAAQ;AACR3C,MAAAA,QAAQ,EAARA,QAAQ;AACRe,MAAAA,QAAQ,EAARA,QAAQ;AACR3D,MAAAA,MAAM,EAANA,MAAM;AACNZ,MAAAA,QAAQ,EAARA,QAAQ;AACR0G,MAAAA,WAAW,EAAXA,WAAW;AACX7F,MAAAA,QAAQ,EAARA,QAAAA;KACD,CAAA;AACD,IAAA,OAAOsE,GAAA,CAAC0C,QAAQ,EAAA,QAAA,CAAA,EAAA,EAAK8I,aAAa,EAAA;MAAEtP,UAAU,EAAE,IAAI,CAAC+N,cAAAA;KAAkB,CAAA,CAAA,CAAA;GACxE,CAAA;AAAA,EAAA,OAAA,WAAA,CAAA;AAAA,CAAA,CA7R0GhF,SAG5G,CAAA;;;AChBD;AACA,IAAM8G,eAAe,GAA8B;AACjDC,EAAAA,KAAK,EAAE,YAAY;AACnB,EAAA,SAAA,EAAS,cAAc;AACvBC,EAAAA,OAAO,EAAE,aAAa;AACtBC,EAAAA,MAAM,EAAE,aAAa;AACrBC,EAAAA,MAAM,EAAE,aAAa;AACrBC,EAAAA,MAAM,EAAE,aAAa;EACrB,MAAM,EAAA,WAAA;CACP,CAAA;AAED;;;;;;;;;AASG;AACH,SAASC,iBAAiB,CACxB5Q,MAAS,EACToE,SAAiC,EACjCxB,QAAqB,EACrB3C,QAA2B,EAAA;AAE3B,EAAA,IAAM4Q,KAAK,GAAGzM,SAAS,CAACyM,KAAK,CAAA;AAC7B,EAAA,IAAQ1I,MAAM,GAAsBlI,QAAQ,CAApCkI,MAAM;IAAEjE,eAAe,GAAKjE,QAAQ,CAA5BiE,eAAe,CAAA;AAC/B,EAAA,IAAI,OAAO2M,KAAK,KAAK,UAAU,EAAE;AAC/B,IAAA,OAAOA,KAAK,CAAA;AACb,GAAA;EACD,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,IAAI1I,MAAM,EAAE;IAChD,OAAOA,MAAM,CAAC0I,KAAK,CAAC,CAAA;AACrB,GAAA;AAED,EAAA,IAAMC,UAAU,GAAGC,aAAa,CAAC/Q,MAAM,CAAC,CAAA;AACxC,EAAA,IAAMuD,IAAI,GAAWlE,KAAK,CAACC,OAAO,CAACwR,UAAU,CAAC,GAAGA,UAAU,CAAC,CAAC,CAAC,GAAGA,UAAU,IAAI,EAAE,CAAA;AACjF,EAAA,IAAME,aAAa,GAAGV,eAAe,CAAC/M,IAAI,CAAC,CAAA;AAE3C;AACA;EACA,IAAI,CAACyN,aAAa,KAAKhR,MAAM,CAACiR,KAAK,IAAIjR,MAAM,CAAC8J,KAAK,CAAC,EAAE;IACpD,OAAO,YAAA;AAAA,MAAA,OAAM,IAAI,CAAA;AAAA,KAAA,CAAA;AAClB,GAAA;EAED,OAAOkH,aAAa,IAAI7I,MAAM,GAC1BA,MAAM,CAAC6I,aAAa,CAAC,GACrB,YAAK;IACH,IAAM3M,wBAAwB,GAAGC,WAAW,CAC1C,0BAA0B,EAC1BrE,QAAQ,EACRmE,SAAS,CACV,CAAA;IAED,OACEG,GAAA,CAACF,wBAAwB,EAAA;AACvBrE,MAAAA,MAAM,EAAEA,MAAM;AACd4C,MAAAA,QAAQ,EAAEA,QAAQ;AAClB4B,MAAAA,MAAM,EAAEN,eAAe,CAACO,kBAAkB,CAACyM,gBAAgB,EAAE,CAAC/E,MAAM,CAACnM,MAAM,CAACuD,IAAI,CAAC,CAAC,CAAC;AACnFtD,MAAAA,QAAQ,EAAEA,QAAAA;AAAQ,KAAA,CAClB,CAAA;GAEL,CAAA;AACP,CAAA;AAEA;;;;;AAKG;AACH,SAASkR,iBAAiB,CACxBrR,KAA0B,EAAA;AAE1B,EAAA,IACUsR,OAAO,GAcbtR,KAAK,CAdPE,MAAM;IACIqR,SAAS,GAajBvR,KAAK,CAbP8C,QAAQ;IACRe,QAAQ,GAYN7D,KAAK,CAZP6D,QAAQ;IACRvE,QAAQ,GAWNU,KAAK,CAXPV,QAAQ;IACR6B,WAAW,GAUTnB,KAAK,CAVPmB,WAAW;IACXyE,QAAQ,GASN5F,KAAK,CATP4F,QAAQ;IACRC,WAAW,GAQT7F,KAAK,CARP6F,WAAW;IACXR,IAAI,GAOFrF,KAAK,CAPPqF,IAAI;IACJnE,QAAQ,GAMNlB,KAAK,CANPkB,QAAQ;IACRmN,WAAW,GAKTrO,KAAK,CALPqO,WAAW;IACXP,mBAAmB,GAIjB9N,KAAK,CAJP8N,mBAAmB;IACnBrI,QAAQ,GAGNzF,KAAK,CAHPyF,QAAQ;IACRtF,QAAQ,GAENH,KAAK,CAFPG,QAAQ;IAAA,qBAENH,GAAAA,KAAK,CADP0N,sBAAsB;AAAtBA,IAAAA,sBAAsB,sCAAG,KAAK,GAAA,qBAAA,CAAA;AAEhC,EAAA,IAAQ1H,WAAW,GAAkB7F,QAAQ,CAArC6F,WAAW;IAAE5F,WAAW,GAAKD,QAAQ,CAAxBC,WAAW,CAAA;AAChC,EAAA,IAAMkE,SAAS,GAAGR,YAAY,CAAUD,QAAQ,CAAC,CAAA;EACjD,IAAM2N,aAAa,GAAGhN,WAAW,CAA2B,eAAe,EAAErE,QAAQ,EAAEmE,SAAS,CAAC,CAAA;EACjG,IAAMmN,wBAAwB,GAAGjN,WAAW,CAC1C,0BAA0B,EAC1BrE,QAAQ,EACRmE,SAAS,CACV,CAAA;EACD,IAAMoN,iBAAiB,GAAGlN,WAAW,CAA+B,mBAAmB,EAAErE,QAAQ,EAAEmE,SAAS,CAAC,CAAA;EAC7G,IAAMqN,kBAAkB,GAAGnN,WAAW,CAAgC,oBAAoB,EAAErE,QAAQ,EAAEmE,SAAS,CAAC,CAAA;EAChH,IAAMpE,MAAM,GAAGE,WAAW,CAACgG,cAAc,CAACkL,OAAO,EAAEhS,QAAQ,CAAC,CAAA;AAC5D,EAAA,IAAMsS,OAAO,GAAGL,SAAS,CAACM,MAAM,CAAC,CAAA;EACjC,IAAM/O,QAAQ,GAAGgP,YAAY,CAC3B1R,WAAW,CAACuG,UAAU,CAACzG,MAAM,EAAE0R,OAAO,EAAEtS,QAAQ,EAAEsG,QAAQ,EAAEC,WAAW,CAAC,EACxE0L,SAAS,CACK,CAAA;AAEhB;;AAEG;EACH,IAAMQ,0BAA0B,GAAG9E,WAAW,CAC5C,UAAC3N,QAAuB,EAAE+B,cAA+B,EAAEoB,EAAW,EAAI;AACxE,IAAA,IAAMuP,KAAK,GAAGvP,EAAE,IAAImP,OAAO,CAAA;AAC3B,IAAA,OAAO1Q,QAAQ,CAAC5B,QAAQ,EAAE+B,cAAc,EAAE2Q,KAAK,CAAC,CAAA;AAClD,GAAC,EACD,CAACJ,OAAO,EAAE1Q,QAAQ,CAAC,CACpB,CAAA;EAED,IAAM+Q,cAAc,GAAGnB,iBAAiB,CAAU5Q,MAAM,EAAEoE,SAAS,EAAExB,QAAQ,EAAE3C,QAAQ,CAAC,CAAA;EACxF,IAAMmF,QAAQ,GAAG4M,OAAO,CAAClS,KAAK,CAACsF,QAAQ,IAAIhB,SAAS,CAACgB,QAAQ,CAAC,CAAA;EAC9D,IAAMC,QAAQ,GAAG2M,OAAO,CAAClS,KAAK,CAACuF,QAAQ,IAAIjB,SAAS,CAACiB,QAAQ,IAAIvF,KAAK,CAACE,MAAM,CAACiS,QAAQ,IAAIjS,MAAM,CAACiS,QAAQ,CAAC,CAAA;AAC1G,EAAA,IAAMC,iBAAiB,GAAG9N,SAAS,CAAC8C,SAAS,CAAA;AAC7C;AACA,EAAA,IAAMA,SAAS,GAAGgL,iBAAiB,KAAKrP,SAAS,GAAG/C,KAAK,CAACoH,SAAS,GAAG8K,OAAO,CAACE,iBAAiB,CAAC,CAAA;EAChG,IAAM5M,SAAS,GAAG0M,OAAO,CAAClS,KAAK,CAACwF,SAAS,IAAIlB,SAAS,CAACkB,SAAS,CAAC,CAAA;EACjE,IAAIwD,MAAM,CAACC,IAAI,CAAC/I,MAAM,CAAC,CAACoD,MAAM,KAAK,CAAC,EAAE;AACpC,IAAA,OAAO,IAAI,CAAA;AACZ,GAAA;EAED,IAAM+O,YAAY,GAAGjS,WAAW,CAACkS,eAAe,CAACpS,MAAM,EAAE2D,QAAQ,CAAC,CAAA;EAElE,IAA0C1C,IAAAA,GAAAA,WAAW,IAAI,EAAE;AAAnDoR,IAAAA,QAAQ,QAARA,QAAQ;IAAK1G,gBAAgB,GAAA,6BAAA,CAAA,IAAA,EAAApE,WAAA,CAAA,CAAA;AACrC;AACA,EAAA,IAAM2I,aAAa,GAAGtE,IAAI,CAACjI,QAAQ,EAAE,CAAC,eAAe,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC,CAAA;EACjF,IAAI2O,cAAc,IAAIpC,aAAa,EAAE;AACnCA,IAAAA,aAAa,CAACoC,cAAc,CAAC,GAAG1G,IAAI,CAACsE,aAAa,CAACoC,cAAc,CAAC,EAAE,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC,CAAA;AAC7F,GAAA;AAED,EAAA,IAAMzB,KAAK,GACTtM,GAAC,CAAAwN,cAAc,eACTjS,KAAK,EAAA;AACTkB,IAAAA,QAAQ,EAAE6Q,0BAA0B;AACpCjP,IAAAA,QAAQ,EAAEA,QAAQ;AAClB5C,IAAAA,MAAM,EAAEA,MAAM;AACd2D,IAAAA,QAAQ,EAAEuM,aAAa;AACvB9K,IAAAA,QAAQ,EAAEA,QAAQ;AAClBC,IAAAA,QAAQ,EAAEA,QAAQ;AAClB6B,IAAAA,SAAS,EAAEA,SAAS;AACpB5B,IAAAA,SAAS,EAAEA,SAAS;AACpBrE,IAAAA,WAAW,EAAE0K,gBAAgB;AAC7B7F,IAAAA,WAAW,EAAEA,WAAW;AACxBF,IAAAA,SAAS,EAAEyM,QAAAA;GAEd,CAAA,CAAA,CAAA;AAED,EAAA,IAAM9P,EAAE,GAAGK,QAAQ,CAAC+O,MAAM,CAAC,CAAA;AAE3B;AACA,EAAA,IAAIhK,KAAK,CAAA;AACT,EAAA,IAAI6F,sBAAsB,EAAE;AAC1B7F,IAAAA,KAAK,GAAGxC,IAAI,CAAA;AACb,GAAA,MAAM;IACLwC,KAAK,GAAGsI,wBAAwB,IAAIjQ,MAAM,GAAGmF,IAAI,GAAGf,SAAS,CAACyB,KAAK,IAAI/F,KAAK,CAACE,MAAM,CAAC6F,KAAK,IAAI7F,MAAM,CAAC6F,KAAK,IAAIV,IAAI,CAAA;AAClH,GAAA;AAED,EAAA,IAAMkK,WAAW,GAAGjL,SAAS,CAACiL,WAAW,IAAIvP,KAAK,CAACE,MAAM,CAACqP,WAAW,IAAIrP,MAAM,CAACqP,WAAW,IAAI,EAAE,CAAA;AACjG,EAAA,IAAMkD,IAAI,GAAGnO,SAAS,CAACmO,IAAI,CAAA;AAC3B,EAAA,IAAMpC,MAAM,GAAG/L,SAAS,CAACiD,MAAM,KAAK,QAAQ,CAAA;EAE5C,IAAMmL,UAAU,GAAG,CAAC,YAAY,EAAE,OAAO,EAAWxS,QAAAA,GAAAA,MAAM,CAACuD,IAAI,CAAG,CAAA;EAClE,IAAI,CAAC2D,SAAS,IAAImL,QAAQ,IAAIA,QAAQ,CAACjP,MAAM,GAAG,CAAC,EAAE;AACjDoP,IAAAA,UAAU,CAACxO,IAAI,CAAC,kCAAkC,CAAC,CAAA;AACpD,GAAA;AACD,EAAA,IAAIL,QAAQ,KAARA,IAAAA,IAAAA,QAAQ,eAARA,QAAQ,CAAE6O,UAAU,EAAE;AACxB,IAAA,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;AACzCC,MAAAA,OAAO,CAACC,IAAI,CACV,yGAAyG,CAC1G,CAAA;AACF,KAAA;AACDL,IAAAA,UAAU,CAACxO,IAAI,CAACL,QAAQ,CAAC6O,UAAU,CAAC,CAAA;AACrC,GAAA;EACD,IAAIpO,SAAS,CAACoO,UAAU,EAAE;AACxBA,IAAAA,UAAU,CAACxO,IAAI,CAACI,SAAS,CAACoO,UAAU,CAAC,CAAA;AACtC,GAAA;AAED,EAAA,IAAMM,aAAa,GACjBvO,IAACiN,iBAAiB,EAAA;AAChBe,IAAAA,IAAI,EAAEA,IAAI;AACV3P,IAAAA,QAAQ,EAAEA,QAAQ;AAClB5C,IAAAA,MAAM,EAAEA,MAAM;AACd2D,IAAAA,QAAQ,EAAEA,QAAQ;IAClBoP,SAAS,EAAE,CAAC7L,SAAS,IAAImL,QAAQ,IAAIA,QAAQ,CAACjP,MAAM,GAAG,CAAC;AACxDnD,IAAAA,QAAQ,EAAEA,QAAAA;AAAQ,GAAA,CAErB,CAAA;EACD,IAAM+S,eAAe,GAAG9L,SAAS,GAAGrE,SAAS,GAC3C0B,GAAC,CAAAkN,kBAAkB;AACjBwB,IAAAA,MAAM,EAAEZ,QAAQ;AAChBpR,IAAAA,WAAW,EAAEA,WAAW;AACxB2B,IAAAA,QAAQ,EAAEA,QAAQ;AAClB5C,IAAAA,MAAM,EAAEA,MAAM;AACd2D,IAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,IAAAA,QAAQ,EAAEA,QAAAA;AAAQ,GAAA,CAErB,CAAA;AACD,EAAA,IAAMiT,UAAU,GAAkD;AAChE7D,IAAAA,WAAW,EACT9K,GAAC,CAAAgN,wBAAwB,EACvB;AAAAhP,MAAAA,EAAE,EAAE4Q,aAAa,CAAI5Q,EAAE,CAAC;AACxB8M,MAAAA,WAAW,EAAEA,WAAW;AACxBrP,MAAAA,MAAM,EAAEA,MAAM;AACd2D,MAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,MAAAA,QAAQ,EAAEA,QAAAA;AAAQ,KAAA,CAErB;AACDmT,IAAAA,cAAc,EAAE/D,WAAW;AAC3BkD,IAAAA,IAAI,EAAEO,aAAa;IACnBO,OAAO,EAAE,OAAOd,IAAI,KAAK,QAAQ,GAAGA,IAAI,GAAG1P,SAAS;AACpDoQ,IAAAA,MAAM,EAAED,eAAe;AACvBpN,IAAAA,SAAS,EAAEsB,SAAS,GAAGrE,SAAS,GAAGwP,QAAQ;AAC3C9P,IAAAA,EAAE,EAAFA,EAAE;AACFoF,IAAAA,KAAK,EAALA,KAAK;AACLwI,IAAAA,MAAM,EAANA,MAAM;AACNnP,IAAAA,QAAQ,EAARA,QAAQ;AACRmN,IAAAA,WAAW,EAAXA,WAAW;AACXP,IAAAA,mBAAmB,EAAnBA,mBAAmB;AACnBrI,IAAAA,QAAQ,EAARA,QAAQ;AACRH,IAAAA,QAAQ,EAARA,QAAQ;AACRC,IAAAA,QAAQ,EAARA,QAAQ;AACR6B,IAAAA,SAAS,EAATA,SAAS;AACTiL,IAAAA,YAAY,EAAZA,YAAY;IACZK,UAAU,EAAEA,UAAU,CAACc,IAAI,CAAC,GAAG,CAAC,CAACC,IAAI,EAAE;IACvC7D,KAAK,EAAEtL,SAAS,CAACsL,KAAK;AACtB5J,IAAAA,WAAW,EAAXA,WAAW;AACX1G,IAAAA,QAAQ,EAARA,QAAQ;AACRY,IAAAA,MAAM,EAANA,MAAM;AACN2D,IAAAA,QAAQ,EAARA,QAAQ;AACR1D,IAAAA,QAAQ,EAARA,QAAAA;GACD,CAAA;AAED,EAAA,IAAMuT,WAAW,GAAGvT,QAAQ,CAACkI,MAAM,CAACmC,UAAU,CAAA;AAC9C,EAAA,IAAMmJ,WAAW,GAAGxT,QAAQ,CAACkI,MAAM,CAACuL,UAAU,CAAA;EAC9C,IAAMC,qBAAqB,GAAG,CAAAhQ,QAAQ,aAARA,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAARA,QAAQ,CAAG,UAAU,CAAC,KAAI,CAAAA,QAAQ,aAARA,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAARA,QAAQ,CAAG,4BAA4B,CAAC,MAAK,IAAI,CAAA;AAEzG,EAAA,OACEY,GAAA,CAAC+M,aAAa,EAAA,QAAA,CAAA,EAAA,EAAK4B,UAAU,EAAA;AAAAjK,IAAAA,QAAA,EAC3BmD,IACG,CAAAwH,QAAA,EAAA;MAAA3K,QAAA,EAAA,CAAA4H,KAAK,EAML7Q,MAAM,CAACiR,KAAK,IAAI,CAAC0C,qBAAqB,IAAI,CAACzT,WAAW,CAAC2T,QAAQ,CAAC7T,MAAM,CAAC,IACtEuE,GAAC,CAAAiP,WAAW,EACV;AAAArO,QAAAA,IAAI,EAAEA,IAAI;AACVC,QAAAA,QAAQ,EAAEA,QAAQ;AAClBC,QAAAA,QAAQ,EAAEA,QAAQ;AAClB6B,QAAAA,SAAS,EAAEA,SAAS;AACpBjG,QAAAA,WAAW,EAAEA,WAAW;AACxB7B,QAAAA,QAAQ,EAAEA,QAAQ;AAClB0G,QAAAA,WAAW,EAAEA,WAAW;AACxBJ,QAAAA,QAAQ,EAAEA,QAAQ;AAClB9C,QAAAA,QAAQ,EAAEA,QAAQ;AAClB+C,QAAAA,WAAW,EAAEA,WAAW;QACxBH,MAAM,EAAE1F,KAAK,CAAC0F,MAAM;QACpBxE,QAAQ,EAAElB,KAAK,CAACkB,QAAQ;QACxByE,OAAO,EAAE3F,KAAK,CAAC2F,OAAO;QACtB6B,OAAO,EAAEtH,MAAM,CAACiR,KAAK,CAAC1R,GAAG,CAAC,UAAC6R,OAAO,EAAA;AAAA,UAAA,OAChClR,WAAW,CAACgG,cAAc,CAACF,QAAQ,CAACoL,OAAO,CAAC,GAAIA,OAAa,GAAI,EAAQ,EAAEhS,QAAQ,CAAC,CAAA;SACrF,CAAA;QACDmM,QAAQ,EAAEvL,MAAM,CAACuD,IAAI;AACrBtD,QAAAA,QAAQ,EAAEA,QAAQ;AAClBD,QAAAA,MAAM,EAAEA,MAAM;AACd2D,QAAAA,QAAQ,EAAEA,QAAAA;OAAQ,CAErB,EACA3D,MAAM,CAAC8J,KAAK,IAAI,CAAC6J,qBAAqB,IAAI,CAACzT,WAAW,CAAC2T,QAAQ,CAAC7T,MAAM,CAAC,IACtEuE,GAAA,CAACkP,WAAW,EAAA;AACVtO,QAAAA,IAAI,EAAEA,IAAI;AACVC,QAAAA,QAAQ,EAAEA,QAAQ;AAClBC,QAAAA,QAAQ,EAAEA,QAAQ;AAClB6B,QAAAA,SAAS,EAAEA,SAAS;AACpBjG,QAAAA,WAAW,EAAEA,WAAW;AACxB7B,QAAAA,QAAQ,EAAEA,QAAQ;AAClB0G,QAAAA,WAAW,EAAEA,WAAW;AACxBJ,QAAAA,QAAQ,EAAEA,QAAQ;AAClB9C,QAAAA,QAAQ,EAAEA,QAAQ;AAClB+C,QAAAA,WAAW,EAAEA,WAAW;QACxBH,MAAM,EAAE1F,KAAK,CAAC0F,MAAM;QACpBxE,QAAQ,EAAElB,KAAK,CAACkB,QAAQ;QACxByE,OAAO,EAAE3F,KAAK,CAAC2F,OAAO;QACtB6B,OAAO,EAAEtH,MAAM,CAAC8J,KAAK,CAACvK,GAAG,CAAC,UAAC6R,OAAO,EAAA;AAAA,UAAA,OAChClR,WAAW,CAACgG,cAAc,CAACF,QAAQ,CAACoL,OAAO,CAAC,GAAIA,OAAa,GAAI,EAAQ,EAAEhS,QAAQ,CAAC,CAAA;SACrF,CAAA;QACDmM,QAAQ,EAAEvL,MAAM,CAACuD,IAAI;AACrBtD,QAAAA,QAAQ,EAAEA,QAAQ;AAClBD,QAAAA,MAAM,EAAEA,MAAM;AACd2D,QAAAA,QAAQ,EAAEA,QAAAA;AACV,OAAA,CACH,CAAA;KACA,CAAA;GACW,CAAA,CAAA,CAAA;AAEpB,CAAA;AAEA;;AAEG;AAFH,IAGM0E,WAA+F,gBAAA,UAAA,UAAA,EAAA;AAAA,EAAA,cAAA,CAAA,WAAA,EAAA,UAAA,CAAA,CAAA;AAAA,EAAA,SAAA,WAAA,GAAA;AAAA,IAAA,OAAA,UAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA,CAAA;AAAA,GAAA;AAAA,EAAA,IAAA,MAAA,GAAA,WAAA,CAAA,SAAA,CAAA;AAAA,EAAA,MAAA,CAGnGyL,qBAAqB,GAArB,SAAsB9Q,qBAAAA,CAAAA,SAAwC,EAAA;IAC5D,OAAO,CAACoI,UAAU,CAAC,IAAI,CAACtL,KAAK,EAAEkD,SAAS,CAAC,CAAA;GAC1C,CAAA;EAAA,MAEDiB,CAAAA,MAAM,GAAN,SAAM,MAAA,GAAA;AACJ,IAAA,OAAOM,IAAC4M,iBAAiB,eAAc,IAAI,CAACrR,KAAK,CAAI,CAAA,CAAA;GACtD,CAAA;AAAA,EAAA,OAAA,WAAA,CAAA;AAAA,CAAA,CAT0G0J,SAE5G,CAAA;;;ACtUD;;;AAGG;AACH,SAASqD,WAAW,CAClB/M,KAA0B,EAAA;AAE1B,EAAA,IACEE,MAAM,GAcJF,KAAK,CAdPE,MAAM;IACNmF,IAAI,GAaFrF,KAAK,CAbPqF,IAAI;IACJxB,QAAQ,GAYN7D,KAAK,CAZP6D,QAAQ;IACRf,QAAQ,GAWN9C,KAAK,CAXP8C,QAAQ;IACRxD,QAAQ,GAUNU,KAAK,CAVPV,QAAQ;IACRmG,QAAQ,GASNzF,KAAK,CATPyF,QAAQ;IAAA,eASNzF,GAAAA,KAAK,CARPsF,QAAQ;AAARA,IAAAA,QAAQ,gCAAG,KAAK,GAAA,eAAA;IAAA,eAQdtF,GAAAA,KAAK,CAPPuF,QAAQ;AAARA,IAAAA,QAAQ,gCAAG,KAAK,GAAA,eAAA;IAAA,gBAOdvF,GAAAA,KAAK,CANPwF,SAAS;AAATA,IAAAA,SAAS,iCAAG,KAAK,GAAA,gBAAA;IACjBtE,QAAQ,GAKNlB,KAAK,CALPkB,QAAQ;IACRwE,MAAM,GAIJ1F,KAAK,CAJP0F,MAAM;IACNC,OAAO,GAGL3F,KAAK,CAHP2F,OAAO;IACPxF,QAAQ,GAENH,KAAK,CAFPG,QAAQ;IACR2F,SAAS,GACP9F,KAAK,CADP8F,SAAS,CAAA;AAEX,EAAA,IAAQC,KAAK,GAAa7F,MAAM,CAAxB6F,KAAK;IAAEkO,MAAM,GAAK/T,MAAM,CAAjB+T,MAAM,CAAA;AACrB,EAAA,IAAQ3M,OAAO,GAA+BnH,QAAQ,CAA9CmH,OAAO;IAAEtB,WAAW,GAAkB7F,QAAQ,CAArC6F,WAAW;IAAE5F,WAAW,GAAKD,QAAQ,CAAxBC,WAAW,CAAA;AACzC,EAAA,IAAM0H,WAAW,GAAG1H,WAAW,CAAC2T,QAAQ,CAAC7T,MAAM,CAAC,GAAG6H,WAAW,CAAC7H,MAAM,CAAC,GAAG6C,SAAS,CAAA;AAClF,EAAA,IAAImR,aAAa,GAAGpM,WAAW,GAAG,QAAQ,GAAG,MAAM,CAAA;EACnD,IAAImM,MAAM,IAAIE,SAAS,CAAUjU,MAAM,EAAE+T,MAAM,EAAE3M,OAAO,CAAC,EAAE;AACzD4M,IAAAA,aAAa,GAAGD,MAAM,CAAA;AACvB,GAAA;EACD,IAAiEnQ,aAAAA,GAAAA,YAAY,CAAUD,QAAQ,CAAC;AAAA,IAAA,oBAAA,GAAA,aAAA,CAAxF0D,MAAM;AAANA,IAAAA,MAAM,qCAAG2M,aAAa,GAAA,oBAAA;AAAA,IAAA,qBAAA,GAAA,aAAA,CAAE7M,WAAW;AAAXA,IAAAA,WAAW,sCAAG,EAAE,GAAA,qBAAA;IAAKG,OAAO,GAAA,6BAAA,CAAA,aAAA,EAAAC,WAAA,CAAA,CAAA;EAC5D,IAAMC,MAAM,GAAGC,SAAS,CAAUzH,MAAM,EAAEqH,MAAM,EAAED,OAAO,CAAC,CAAA;EAC1D,OACE7C,IAACiD,MAAM,EAAA;AACLF,IAAAA,OAAO,eAAOA,OAAO,EAAA;AAAEM,MAAAA,WAAW,EAAXA,WAAAA;KAAa,CAAA;AACpC5H,IAAAA,MAAM,EAAEA,MAAM;AACd2D,IAAAA,QAAQ,EAAEA,QAAQ;IAClBpB,EAAE,EAAEK,QAAQ,CAACE,GAAG;AAChBqC,IAAAA,IAAI,EAAEA,IAAI;AACVwC,IAAAA,KAAK,EAAE9B,KAAK,KAAKhD,SAAS,GAAGsC,IAAI,GAAGU,KAAK;AACzCvD,IAAAA,KAAK,EAAElD,QAAQ;AACf4B,IAAAA,QAAQ,EAAEA,QAAQ;AAClBwE,IAAAA,MAAM,EAAEA,MAAM;AACdC,IAAAA,OAAO,EAAEA,OAAO;AAChBF,IAAAA,QAAQ,EAAEA,QAAQ;AAClBH,IAAAA,QAAQ,EAAEA,QAAQ;AAClBC,IAAAA,QAAQ,EAAEA,QAAQ;AAClBS,IAAAA,WAAW,EAAEA,WAAW;AACxBR,IAAAA,SAAS,EAAEA,SAAS;AACpBrF,IAAAA,QAAQ,EAAEA,QAAQ;AAClBkH,IAAAA,WAAW,EAAEA,WAAW;AACxBvB,IAAAA,SAAS,EAAEA,SAAAA;AACX,GAAA,CAAA,CAAA;AAEN;;AC9DA;;;;AAIG;AACH,SAASsO,SAAS,CAChBpU,KAA0B,EAAA;AAE1B,EAAA,IAAQV,QAAQ,GAAeU,KAAK,CAA5BV,QAAQ;IAAE4B,QAAQ,GAAKlB,KAAK,CAAlBkB,QAAQ,CAAA;AAC1BmT,EAAAA,SAAS,CAAC,YAAK;IACb,IAAI/U,QAAQ,KAAKyD,SAAS,EAAE;MAC1B7B,QAAQ,CAAC,IAAoB,CAAC,CAAA;AAC/B,KAAA;AACH,GAAC,EAAE,CAAC5B,QAAQ,EAAE4B,QAAQ,CAAC,CAAC,CAAA;AAExB,EAAA,OAAO,IAAI,CAAA;AACb;;ACRA,SAASmH,MAAM,GAAA;EAKb,OAAO;AACLmC,IAAAA,UAAU,EAAE8J,UAAgB;AAC5BvU,IAAAA,UAAU,EAAEA,UAAuC;AACnD;AACA4J,IAAAA,YAAY,EAAZA,YAAY;AACZ+C,IAAAA,WAAW,EAAXA,WAAW;AACXe,IAAAA,WAAW,EAAXA,WAAW;AACXmG,IAAAA,UAAU,EAAEU,UAAgB;AAC5B/L,IAAAA,WAAW,EAAXA,WAAW;AACXwE,IAAAA,WAAW,EAAXA,WAAW;AACXqH,IAAAA,SAAS,EAATA,SAAAA;GACD,CAAA;AACH;;AClBA;;;;AAIG;AACqB,SAAAG,6BAA6B,CAInDvU,KAA0C,EAAA;AAC1C,EAAA,IAAQ8C,QAAQ,GAA8C9C,KAAK,CAA3D8C,QAAQ;IAAEyM,WAAW,GAAiCvP,KAAK,CAAjDuP,WAAW;IAAEpP,QAAQ,GAAuBH,KAAK,CAApCG,QAAQ;IAAED,MAAM,GAAeF,KAAK,CAA1BE,MAAM;IAAE2D,QAAQ,GAAK7D,KAAK,CAAlB6D,QAAQ,CAAA;AACzD,EAAA,IAAM2D,OAAO,GAAG1D,YAAY,CAAUD,QAAQ,CAAC,CAAA;EAC/C,IAAuC2D,cAAAA,GAAAA,OAAO,CAAtCK,KAAK;AAAEwK,IAAAA,YAAY,+BAAG,IAAI,GAAA,cAAA,CAAA;AAClC,EAAA,IAAI,CAAC9C,WAAW,IAAI,CAAC8C,YAAY,EAAE;AACjC,IAAA,OAAO,IAAI,CAAA;AACZ,GAAA;EACD,IAAMZ,wBAAwB,GAAGjN,WAAW,CAC1C,0BAA0B,EAC1BrE,QAAQ,EACRqH,OAAO,CACR,CAAA;EACD,OACE/C,GAAA,CAACgN,wBAAwB,EAAA;AACvBhP,IAAAA,EAAE,EAAE4Q,aAAa,CAAIvQ,QAAQ,CAAC;AAC9ByM,IAAAA,WAAW,EAAEA,WAAW;AACxBrP,IAAAA,MAAM,EAAEA,MAAM;AACd2D,IAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,IAAAA,QAAQ,EAAEA,QAAAA;AACV,GAAA,CAAA,CAAA;AAEN;;ACrCA;;;AAGG;AACqB,SAAAqU,sBAAsB,CAI5CxU,KAA0C,EAAA;AAC1C,EAAA,IACEmJ,QAAQ,GAaNnJ,KAAK,CAbPmJ,QAAQ;IACRjC,SAAS,GAYPlH,KAAK,CAZPkH,SAAS;IACT5B,QAAQ,GAWNtF,KAAK,CAXPsF,QAAQ;IACR8D,UAAU,GAURpJ,KAAK,CAVPoJ,UAAU;IACVE,WAAW,GASTtJ,KAAK,CATPsJ,WAAW;IACXD,SAAS,GAQPrJ,KAAK,CARPqJ,SAAS;IACTE,SAAS,GAOPvJ,KAAK,CAPPuJ,SAAS;IACTxI,KAAK,GAMHf,KAAK,CANPe,KAAK;IACLC,gBAAgB,GAKdhB,KAAK,CALPgB,gBAAgB;IAChBe,cAAc,GAIZ/B,KAAK,CAJP+B,cAAc;IACdwD,QAAQ,GAGNvF,KAAK,CAHPuF,QAAQ;IACRpF,QAAQ,GAENH,KAAK,CAFPG,QAAQ;IACR0D,QAAQ,GACN7D,KAAK,CADP6D,QAAQ,CAAA;AAEV,EAAA,IAAA,qBAAA,GAAuD1D,QAAQ,CAACsU,SAAS,CAACC,eAAe;AAAjFC,IAAAA,cAAc,yBAAdA,cAAc;AAAEC,IAAAA,YAAY,yBAAZA,YAAY;AAAEC,IAAAA,YAAY,yBAAZA,YAAY,CAAA;AAClD,EAAA,IAAMC,QAAQ,GAAkB;AAC9BC,IAAAA,IAAI,EAAE,CAAC;AACPC,IAAAA,WAAW,EAAE,CAAC;AACdC,IAAAA,YAAY,EAAE,CAAC;AACfC,IAAAA,UAAU,EAAE,MAAA;GACb,CAAA;EACD,OACE5I,IAAK,CAAA,KAAA,EAAA;AAAApF,IAAAA,SAAS,EAAEA,SAAS;eACvBzC,GAAK,CAAA,KAAA,EAAA;AAAAyC,MAAAA,SAAS,EAAEkC,UAAU,GAAG,UAAU,GAAG,WAAW;AAAGD,MAAAA,QAAA,EAAAA,QAAAA;MAAe,EACtEC,UAAU,IACT3E;AAAKyC,MAAAA,SAAS,EAAC,6BAA6B;AAAAiC,MAAAA,QAAA,EAC1CmD;AACEpF,QAAAA,SAAS,EAAC,WAAW;AACrB0I,QAAAA,KAAK,EAAE;AACLuF,UAAAA,OAAO,EAAE,MAAM;AACfC,UAAAA,cAAc,EAAE,cAAA;SACjB;QAAAjM,QAAA,EAAA,CAEA,CAACE,SAAS,IAAIC,WAAW,KACxB7E,GAAA,CAACmQ,YAAY,EAAA;AACXhF,UAAAA,KAAK,EAAEkF,QAAQ;AACfxP,UAAAA,QAAQ,EAAEA,QAAQ,IAAIC,QAAQ,IAAI,CAAC8D,SAAS;UAC5CgM,OAAO,EAAEtT,cAAc,CAAChB,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAC;AACzC8C,UAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,UAAAA,QAAQ,EAAEA,QAAAA;SAAQ,CAErB,EACA,CAACkJ,SAAS,IAAIC,WAAW,KACxB7E,GAAA,CAACkQ,cAAc,EAAA;AACb/E,UAAAA,KAAK,EAAEkF,QAAQ;AACfxP,UAAAA,QAAQ,EAAEA,QAAQ,IAAIC,QAAQ,IAAI,CAAC+D,WAAW;UAC9C+L,OAAO,EAAEtT,cAAc,CAAChB,KAAK,EAAEA,KAAK,GAAG,CAAC,CAAC;AACzC8C,UAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,UAAAA,QAAQ,EAAEA,QAAAA;AAAQ,SAAA,CAErB,EACAoJ,SAAS,IACR9E,GAAA,CAACoQ,YAAY,EAAA;AACXjF,UAAAA,KAAK,EAAEkF,QAAQ;UACfxP,QAAQ,EAAEA,QAAQ,IAAIC,QAAQ;AAC9B8P,UAAAA,OAAO,EAAErU,gBAAgB,CAACD,KAAK,CAAC;AAChC8C,UAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,UAAAA,QAAQ,EAAEA,QAAAA;AACV,SAAA,CACH,CAAA;OACG,CAAA;AAAA,KAAA,CAET,CAAA;AAAA,GAAA,CACG,CAAA;AAEV;;;ACpEA;;;AAGG;AACqB,SAAAmV,kBAAkB,CAIxCtV,KAAuC,EAAA;AACvC,EAAA,IACEqG,MAAM,GAYJrG,KAAK,CAZPqG,MAAM;IACNa,SAAS,GAWPlH,KAAK,CAXPkH,SAAS;IACT5B,QAAQ,GAUNtF,KAAK,CAVPsF,QAAQ;IACRxC,QAAQ,GASN9C,KAAK,CATP8C,QAAQ;IACRe,QAAQ,GAQN7D,KAAK,CARP6D,QAAQ;IACRvD,KAAK,GAOHN,KAAK,CAPPM,KAAK;IACLK,UAAU,GAMRX,KAAK,CANPW,UAAU;IACV4E,QAAQ,GAKNvF,KAAK,CALPuF,QAAQ;IACRpF,QAAQ,GAINH,KAAK,CAJPG,QAAQ;IACRsF,QAAQ,GAGNzF,KAAK,CAHPyF,QAAQ;IACRvF,MAAM,GAEJF,KAAK,CAFPE,MAAM;IACN6F,KAAK,GACH/F,KAAK,CADP+F,KAAK,CAAA;AAEP,EAAA,IAAMzB,SAAS,GAAGR,YAAY,CAAUD,QAAQ,CAAC,CAAA;EACjD,IAAM0Q,6BAA6B,GAAG/P,WAAW,CAC/C,+BAA+B,EAC/BrE,QAAQ,EACRmE,SAAS,CACV,CAAA;EACD,IAAMkQ,sBAAsB,GAAGhQ,WAAW,CACxC,wBAAwB,EACxBrE,QAAQ,EACRmE,SAAS,CACV,CAAA;EACD,IAAMiR,uBAAuB,GAAG/Q,WAAW,CACzC,yBAAyB,EACzBrE,QAAQ,EACRmE,SAAS,CACV,CAAA;AACD;EACA,IACqBkR,SAAS,GAC1BrV,QAAQ,CAACsU,SAAS,CADpBC,eAAe,CAAIc,SAAS,CAAA;EAE9B,OACElJ,IAAU,CAAA,UAAA,EAAA;AAAApF,IAAAA,SAAS,EAAEA,SAAS;IAAEzE,EAAE,EAAEK,QAAQ,CAACE,GAAG;AAC9CmG,IAAAA,QAAA,EAAA,CAAA1E,GAAA,CAAC8Q,uBAAuB,EAAA;AACtBzS,MAAAA,QAAQ,EAAEA,QAAQ;AAClBiD,MAAAA,KAAK,EAAEzB,SAAS,CAACyB,KAAK,IAAIA,KAAK;AAC/BN,MAAAA,QAAQ,EAAEA,QAAQ;AAClBvF,MAAAA,MAAM,EAAEA,MAAM;AACd2D,MAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,MAAAA,QAAQ,EAAEA,QAAAA;AACV,KAAA,CAAA,EACFsE,GAAC,CAAA8P,6BAA6B;AAC5BzR,MAAAA,QAAQ,EAAEA,QAAQ;AAClByM,MAAAA,WAAW,EAAEjL,SAAS,CAACiL,WAAW,IAAIrP,MAAM,CAACqP,WAAW;AACxDrP,MAAAA,MAAM,EAAEA,MAAM;AACd2D,MAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,MAAAA,QAAQ,EAAEA,QAAAA;MACV,EACFsE,GAAA,CAAA,KAAA,EAAA;AAAKyC,MAAAA,SAAS,EAAC,qBAAqB;gBACjC5G,KAAK,IACJA,KAAK,CAACb,GAAG,CAAC,UAAA,IAAA,EAAA;QAAA,IAAGE,GAAG,QAAHA,GAAG;UAAK8V,SAAS,GAAA,6BAAA,CAAA,IAAA,EAAAhO,WAAA,CAAA,CAAA;AAAA,QAAA,OAC5BhD,GAAC,CAAA+P,sBAAsB,eAAeiB,SAAS,CAAA,EAAlB9V,GAAG,CAAmB,CAAA;OACpD,CAAA;AAAC,KAAA,CACA,EACL0G,MAAM,IACL5B,IAAC+Q,SAAS,EAAA;AACRtO,MAAAA,SAAS,EAAC,gBAAgB;AAC1BmO,MAAAA,OAAO,EAAE1U,UAAU;MACnB2E,QAAQ,EAAEA,QAAQ,IAAIC,QAAQ;AAC9B1B,MAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,MAAAA,QAAQ,EAAEA,QAAAA;AACV,KAAA,CACH,CAAA;AACQ,GAAA,CAAA,CAAA;AAEf;;AC5EA;;;;AAIG;AACqB,SAAAoV,uBAAuB,CAI7CvV,KAAoC,EAAA;AACpC,EAAA,IAAQ8C,QAAQ,GAAkD9C,KAAK,CAA/D8C,QAAQ;IAAEiD,KAAK,GAA2C/F,KAAK,CAArD+F,KAAK;IAAE7F,MAAM,GAAmCF,KAAK,CAA9CE,MAAM;IAAE2D,QAAQ,GAAyB7D,KAAK,CAAtC6D,QAAQ;IAAE4B,QAAQ,GAAezF,KAAK,CAA5ByF,QAAQ;IAAEtF,QAAQ,GAAKH,KAAK,CAAlBG,QAAQ,CAAA;AAC7D,EAAA,IAAMqH,OAAO,GAAG1D,YAAY,CAAUD,QAAQ,CAAC,CAAA;EAC/C,IAAuC2D,cAAAA,GAAAA,OAAO,CAAtCK,KAAK;AAAEwK,IAAAA,YAAY,+BAAG,IAAI,GAAA,cAAA,CAAA;AAClC,EAAA,IAAI,CAACtM,KAAK,IAAI,CAACsM,YAAY,EAAE;AAC3B,IAAA,OAAO,IAAI,CAAA;AACZ,GAAA;EACD,IAAMqD,kBAAkB,GAAiDlR,WAAW,CAClF,oBAAoB,EACpBrE,QAAQ,EACRqH,OAAO,CACR,CAAA;EACD,OACE/C,GAAA,CAACiR,kBAAkB,EAAA;AACjBjT,IAAAA,EAAE,EAAEkT,OAAO,CAAI7S,QAAQ,CAAC;AACxBiD,IAAAA,KAAK,EAAEA,KAAK;AACZN,IAAAA,QAAQ,EAAEA,QAAQ;AAClBvF,IAAAA,MAAM,EAAEA,MAAM;AACd2D,IAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,IAAAA,QAAQ,EAAEA,QAAAA;AAAQ,GAAA,CAClB,CAAA;AAEN;;;AC/BA;;;;;AAKG;AACqB,SAAAyV,iBAAiB,CAIvC5V,KAAsC,EAAA;AACtC,EAAA,IACEyC,EAAE,GAkBAzC,KAAK,CAlBPyC,EAAE,CAAA;IAEFD,KAAK,GAgBHxC,KAAK,CAhBPwC,KAAK,CAAA;IACL+C,QAAQ,GAeNvF,KAAK,CAfPuF,QAAQ,CAAA;IACRD,QAAQ,GAcNtF,KAAK,CAdPsF,QAAQ,CAAA;IACRE,SAAS,GAaPxF,KAAK,CAbPwF,SAAS,CAAA;IACTE,MAAM,GAYJ1F,KAAK,CAZP0F,MAAM,CAAA;IACNC,OAAO,GAWL3F,KAAK,CAXP2F,OAAO,CAAA;IACPzE,QAAQ,GAUNlB,KAAK,CAVPkB,QAAQ,CAAA;IACR2U,gBAAgB,GASd7V,KAAK,CATP6V,gBAAgB,CAAA;IAChBrO,OAAO,GAQLxH,KAAK,CARPwH,OAAO,CAAA;IACPtH,MAAM,GAOJF,KAAK,CAPPE,MAAM,CAAA;IAKNuD,IAAI,GAEFzD,KAAK,CAFPyD,IAAI,CAAA;AACDqS,IAAAA,IAAI,iCACL9V,KAAK,EAAAyH,WAAA,EAAA;AAET;AACA;EACA,IAAI,CAAChF,EAAE,EAAE;AACPqQ,IAAAA,OAAO,CAACiD,GAAG,CAAC,WAAW,EAAE/V,KAAK,CAAC,CAAA;IAC/B,MAAM,IAAIgW,KAAK,CAAoBjG,kBAAAA,GAAAA,IAAI,CAACC,SAAS,CAAChQ,KAAK,CAAC,CAAG,CAAA;AAC5D,GAAA;AACD,EAAA,IAAMiW,UAAU,GAAA,QAAA,CAAA,EAAA,EACXH,IAAI,EACJI,aAAa,CAAUhW,MAAM,EAAEuD,IAAI,EAAE+D,OAAO,CAAC,CACjD,CAAA;AAED,EAAA,IAAI2O,UAAU,CAAA;EACd,IAAIF,UAAU,CAACxS,IAAI,KAAK,QAAQ,IAAIwS,UAAU,CAACxS,IAAI,KAAK,SAAS,EAAE;IACjE0S,UAAU,GAAG3T,KAAK,IAAIA,KAAK,KAAK,CAAC,GAAGA,KAAK,GAAG,EAAE,CAAA;AAC/C,GAAA,MAAM;AACL2T,IAAAA,UAAU,GAAG3T,KAAK,IAAI,IAAI,GAAG,EAAE,GAAGA,KAAK,CAAA;AACxC,GAAA;EAED,IAAM4T,SAAS,GAAGnJ,WAAW,CAC3B,UAAA,IAAA,EAAA;AAAA,IAAA,IAAazK,KAAK,GAAA,IAAA,CAAf6T,MAAM,CAAI7T,KAAK,CAAA;IAAA,OAAwCtB,QAAQ,CAACsB,KAAK,KAAK,EAAE,GAAGgF,OAAO,CAAC8O,UAAU,GAAG9T,KAAK,CAAC,CAAA;AAAA,GAAA,EAC7G,CAACtB,QAAQ,EAAEsG,OAAO,CAAC,CACpB,CAAA;EACD,IAAM+O,OAAO,GAAGtJ,WAAW,CAAC,UAAA,KAAA,EAAA;AAAA,IAAA,IAAazK,KAAK,GAAA,KAAA,CAAf6T,MAAM,CAAI7T,KAAK,CAAA;AAAA,IAAA,OAAuCkD,MAAM,CAACjD,EAAE,EAAED,KAAK,CAAC,CAAA;AAAA,GAAA,EAAE,CAACkD,MAAM,EAAEjD,EAAE,CAAC,CAAC,CAAA;EACrH,IAAM+T,QAAQ,GAAGvJ,WAAW,CAC1B,UAAA,KAAA,EAAA;AAAA,IAAA,IAAazK,KAAK,GAAA,KAAA,CAAf6T,MAAM,CAAI7T,KAAK,CAAA;AAAA,IAAA,OAAuCmD,OAAO,CAAClD,EAAE,EAAED,KAAK,CAAC,CAAA;AAAA,GAAA,EAC3E,CAACmD,OAAO,EAAElD,EAAE,CAAC,CACd,CAAA;EAED,OACE6J;eACE7H,GACE,CAAA,OAAA,EAAA,QAAA,CAAA;AAAAhC,MAAAA,EAAE,EAAEA,EAAE;AACN4C,MAAAA,IAAI,EAAE5C,EAAE;AACRyE,MAAAA,SAAS,EAAC,cAAc;AACxBiL,MAAAA,QAAQ,EAAE5M,QAAQ;AAClBD,MAAAA,QAAQ,EAAEA,QAAQ;AAClBmR,MAAAA,SAAS,EAAEjR,SAAS;AACpBhD,MAAAA,KAAK,EAAE2T,UAAAA;AAAU,KAAA,EACbF,UAAU,EAAA;MACdS,IAAI,EAAExW,MAAM,CAACyW,QAAQ,GAAGC,UAAU,CAAInU,EAAE,CAAC,GAAGM,SAAS;MACrD7B,QAAQ,EAAE2U,gBAAgB,IAAIO,SAAS;AACvC1Q,MAAAA,MAAM,EAAE6Q,OAAO;AACf5Q,MAAAA,OAAO,EAAE6Q,QAAQ;0BACCK,kBAAkB,CAAIpU,EAAE,EAAE,CAAC,CAACvC,MAAM,CAACyW,QAAQ,CAAA;AAAC,KAAA,CAAA,CAC9D,EACDpX,KAAK,CAACC,OAAO,CAACU,MAAM,CAACyW,QAAQ,CAAC,IAC7BlS,GAAiC,CAAA,UAAA,EAAA;AAAAhC,MAAAA,EAAE,EAAEmU,UAAU,CAAInU,EAAE,CAAC;AAAA0G,MAAAA,QAAA,EAClDjJ,MAAM,CAACyW,QAAqB,CAC3BzO,MAAM,CAAChI,MAAM,CAAA,SAAA,CAAQ,IAAI,CAACA,MAAM,CAACyW,QAAQ,CAACjT,QAAQ,CAACxD,MAAM,CAAQ,SAAA,CAAA,CAAC,GAAI,CAACA,MAAM,CAAQ,SAAA,CAAA,CAAc,GAAG,EAAE,CAAC,CACzGT,GAAG,CAAC,UAACqX,OAAY,EAAI;QACpB,OAAOrS;AAAsBjC,UAAAA,KAAK,EAAEsU,OAAAA;SAAhB,EAAAA,OAAO,CAAoB,CAAA;OAChD,CAAA;qBALsBrU,EAAE,CAO9B,CAAA;AACA,GAAA,CAAA,CAAA;AAEP;;ACjGA;AACG;AACW,SAAUsU,YAAY,CAIM,IAAA,EAAA;EAAA,IAAtClT,QAAQ,QAARA,QAAQ,CAAA;EACV,IAAgEmT,qBAAAA,GAAAA,sBAAsB,CAAUnT,QAAQ,CAAC;AAAjGoT,IAAAA,UAAU,yBAAVA,UAAU;AAAEC,IAAAA,QAAQ,yBAARA,QAAQ;AAAA,IAAA,sBAAA,GAAA,qBAAA,CAAElX,KAAK;IAAEmX,iBAAiB,GAAA,sBAAA,KAAA,KAAA,CAAA,GAAG,EAAE,GAAA,sBAAA,CAAA;AAC3D,EAAA,IAAID,QAAQ,EAAE;AACZ,IAAA,OAAO,IAAI,CAAA;AACZ,GAAA;EACD,OACEzS;cACEA,GAAQ,CAAA,QAAA,EAAA,QAAA,CAAA;AAAAhB,MAAAA,IAAI,EAAC,QAAA;AAAQ,KAAA,EAAK0T,iBAAiB,EAAA;MAAEjQ,SAAS,EAAA,eAAA,GAAkBiQ,iBAAiB,CAACjQ,SAAW;gBAClG+P,UAAAA;AAAU,KAAA,CAAA,CAAA;AAET,GAAA,CAAA,CAAA;AAEV;;;AClBwB,SAAAG,UAAU,CAChCpX,KAA+B,EAAA;EAEsDA,IAAAA,eAAAA,GAAAA,KAAK,CAAlFqX,QAAQ,CAAA;AAARA,IAAAA,QAAQ,gCAAG,SAAS,GAAA,eAAA,CAAA;IAAEC,IAAI,GAAmDtX,KAAK,CAA5DsX,IAAI,CAAA;IAAEpQ,SAAS,GAAwClH,KAAK,CAAtDkH,SAAS,CAAA;IAAyBqQ,UAAU,iCAAKvX,KAAK,EAAAyH,WAAA,EAAA;EAC1F,OACEhD,GAAQ,CAAA,QAAA,EAAA,QAAA,CAAA;AAAAhB,IAAAA,IAAI,EAAC,QAAQ;IAACyD,SAAS,EAAA,UAAA,GAAamQ,QAAQ,GAAInQ,GAAAA,GAAAA,SAAAA;AAAW,GAAA,EAAMqQ,UAAU,EAAA;AACjFpO,IAAAA,QAAA,EAAA1E,GAAA,CAAA,GAAA,EAAA;AAAGyC,MAAAA,SAAS,EAAyBoQ,sBAAAA,GAAAA,IAAAA;KAAM,CAAA;GACpC,CAAA,CAAA,CAAA;AAEb,CAAA;AAEM,SAAU3C,cAAc,CAC5B3U,KAA+B,EAAA;AAE/B,EAAA,IACcoE,eAAe,GACzBpE,KAAK,CADPG,QAAQ,CAAIiE,eAAe,CAAA;EAE7B,OACEK,GAAC,CAAA2S,UAAU,EAAA,QAAA,CAAA;AACTrR,IAAAA,KAAK,EAAE3B,eAAe,CAACO,kBAAkB,CAACgQ,cAAc,CAAC;AACzDzN,IAAAA,SAAS,EAAC,sBAAA;AAAsB,GAAA,EAC5BlH,KAAK,EAAA;AACTsX,IAAAA,IAAI,EAAC,YAAA;GACL,CAAA,CAAA,CAAA;AAEN,CAAA;AAEM,SAAU1C,YAAY,CAC1B5U,KAA+B,EAAA;AAE/B,EAAA,IACcoE,eAAe,GACzBpE,KAAK,CADPG,QAAQ,CAAIiE,eAAe,CAAA;EAE7B,OACEK,GAAC,CAAA2S,UAAU,EAAA,QAAA,CAAA;AACTrR,IAAAA,KAAK,EAAE3B,eAAe,CAACO,kBAAkB,CAACiQ,YAAY,CAAC;AACvD1N,IAAAA,SAAS,EAAC,oBAAA;AAAoB,GAAA,EAC1BlH,KAAK,EAAA;AACTsX,IAAAA,IAAI,EAAC,UAAA;GACL,CAAA,CAAA,CAAA;AAEN,CAAA;AAEM,SAAUzC,YAAY,CAC1B7U,KAA+B,EAAA;AAE/B,EAAA,IACcoE,eAAe,GACzBpE,KAAK,CADPG,QAAQ,CAAIiE,eAAe,CAAA;EAE7B,OACEK,GAAA,CAAC2S,UAAU,EAAA,QAAA,CAAA;AACTrR,IAAAA,KAAK,EAAE3B,eAAe,CAACO,kBAAkB,CAACkQ,YAAY,CAAC;AACvD3N,IAAAA,SAAS,EAAC,mBAAA;AAAmB,GAAA,EACzBlH,KAAK,EAAA;AACTqX,IAAAA,QAAQ,EAAC,QAAQ;AACjBC,IAAAA,IAAI,EAAC,QAAA;GACL,CAAA,CAAA,CAAA;AAEN;;ACxDA;AACG;AACqB,SAAA9B,SAAS,CAKN,IAAA,EAAA;EAAA,IAJzBtO,SAAS,QAATA,SAAS;AACTmO,IAAAA,OAAO,QAAPA,OAAO;AACP/P,IAAAA,QAAQ,QAARA,QAAQ;AACRnF,IAAAA,QAAQ,QAARA,QAAQ,CAAA;AAER,EAAA,IAAQiE,eAAe,GAAKjE,QAAQ,CAA5BiE,eAAe,CAAA;EACvB,OACEK,GAAK,CAAA,KAAA,EAAA;AAAAyC,IAAAA,SAAS,EAAC,KAAK;cAClBzC,GAAG,CAAA,GAAA,EAAA;AAAAyC,MAAAA,SAAS,2CAAyCA,SAAW;gBAC9DzC,GAAC,CAAA2S,UAAU,EACT;AAAAC,QAAAA,QAAQ,EAAC,MAAM;AACfC,QAAAA,IAAI,EAAC,MAAM;AACXpQ,QAAAA,SAAS,EAAC,mBAAmB;AAC7BnB,QAAAA,KAAK,EAAE3B,eAAe,CAACO,kBAAkB,CAAC6Q,SAAS,CAAC;AACpDH,QAAAA,OAAO,EAAEA,OAAO;AAChB/P,QAAAA,QAAQ,EAAEA,QAAQ;AAClBnF,QAAAA,QAAQ,EAAEA,QAAAA;OACV,CAAA;KAAA,CAAA;AAEA,GAAA,CAAA,CAAA;AAEV;;ACtBA,SAASqX,eAAe,GAAA;EAKtB,OAAO;AACLT,IAAAA,YAAY,EAAZA,YAAY;AACZvB,IAAAA,SAAS,EAATA,SAAS;AACTb,IAAAA,cAAc,EAAdA,cAAc;AACdC,IAAAA,YAAY,EAAZA,YAAY;AACZC,IAAAA,YAAY,EAAZA,YAAAA;GACD,CAAA;AACH;;AChBA;;;AAGG;AACqB,SAAA4C,gBAAgB,CAItCzX,KAAqC,EAAA;AACrC,EAAA,IAAQyC,EAAE,GAAkBzC,KAAK,CAAzByC,EAAE;IAAE8M,WAAW,GAAKvP,KAAK,CAArBuP,WAAW,CAAA;EACvB,IAAI,CAACA,WAAW,EAAE;AAChB,IAAA,OAAO,IAAI,CAAA;AACZ,GAAA;AACD,EAAA,IAAI,OAAOA,WAAW,KAAK,QAAQ,EAAE;IACnC,OACE9K,GAAA,CAAA,GAAA,EAAA;AAAGhC,MAAAA,EAAE,EAAEA,EAAE;AAAEyE,MAAAA,SAAS,EAAC,mBAAmB;AAAAiC,MAAAA,QAAA,EACrCoG,WAAAA;AAAW,KAAA,CACV,CAAA;AAEP,GAAA,MAAM;IACL,OACE9K,GAAA,CAAA,KAAA,EAAA;AAAKhC,MAAAA,EAAE,EAAEA,EAAE;AAAEyE,MAAAA,SAAS,EAAC,mBAAmB;AAAAiC,MAAAA,QAAA,EACvCoG,WAAAA;AAAW,KAAA,CACR,CAAA;AAET,GAAA;AACH;;ACnBA;;;AAGG;AACqB,SAAAmI,SAAS,CAGP,IAAA,EAAA;EAAA,IAFxBvE,MAAM,QAANA,MAAM;AACNhT,IAAAA,QAAQ,QAARA,QAAQ,CAAA;AAER,EAAA,IAAQiE,eAAe,GAAKjE,QAAQ,CAA5BiE,eAAe,CAAA;EACvB,OACEkI,IAAK,CAAA,KAAA,EAAA;AAAApF,IAAAA,SAAS,EAAC,2BAA2B;eACxCzC,GAAK,CAAA,KAAA,EAAA;AAAAyC,MAAAA,SAAS,EAAC,eAAe;gBAC5BzC,GAAI,CAAA,IAAA,EAAA;AAAAyC,QAAAA,SAAS,EAAC,aAAa;AAAAiC,QAAAA,QAAA,EAAE/E,eAAe,CAACO,kBAAkB,CAACgT,WAAW,CAAA;OAAO,CAAA;AAAA,KAAA,CAC9E,EACNlT,GAAI,CAAA,IAAA,EAAA;AAAAyC,MAAAA,SAAS,EAAC,YAAY;MAAAiC,QAAA,EACvBgK,MAAM,CAAC1T,GAAG,CAAC,UAACmY,KAA0B,EAAErW,CAAS,EAAI;QACpD,OACEkD,GAAA,CAAA,IAAA,EAAA;AAAYyC,UAAAA,SAAS,EAAC,6BAA6B;UAAAiC,QAAA,EAChDyO,KAAK,CAACC,KAAAA;SAAK,EADLtW,CAAC,CAEL,CAAA;OAER,CAAA;AAAC,KAAA,CACC,CAAA;AACD,GAAA,CAAA,CAAA;AAEV;;AClCA,IAAMuW,uBAAqB,GAAG,GAAG,CAAA;AAWjC;;;AAGG;AACqB,SAAAC,KAAK,CAAC/X,KAAiB,EAAA;AAC7C,EAAA,IAAQ6H,KAAK,GAAmB7H,KAAK,CAA7B6H,KAAK;IAAEpC,QAAQ,GAASzF,KAAK,CAAtByF,QAAQ;IAAEhD,EAAE,GAAKzC,KAAK,CAAZyC,EAAE,CAAA;EAC3B,IAAI,CAACoF,KAAK,EAAE;AACV,IAAA,OAAO,IAAI,CAAA;AACZ,GAAA;EACD,OACEyE;AAAOpF,IAAAA,SAAS,EAAC,eAAe;AAAC8Q,IAAAA,OAAO,EAAEvV,EAAE;IACzC0G,QAAA,EAAA,CAAAtB,KAAK,EACLpC,QAAQ,IAAIhB,GAAM,CAAA,MAAA,EAAA;AAAAyC,MAAAA,SAAS,EAAC,UAAU;gBAAE4Q,uBAAAA;AAAqB,KAAA,CAAQ,CAAA;AAChE,GAAA,CAAA,CAAA;AAEZ;;ACfA;;;;AAIG;AACqB,SAAAtG,aAAa,CAInCxR,KAAkC,EAAA;AAClC,EAAA,IAAQyC,EAAE,GAAqGzC,KAAK,CAA5GyC,EAAE;IAAEoF,KAAK,GAA8F7H,KAAK,CAAxG6H,KAAK;IAAEsB,QAAQ,GAAoFnJ,KAAK,CAAjGmJ,QAAQ;IAAEgK,MAAM,GAA4EnT,KAAK,CAAvFmT,MAAM;IAAEV,IAAI,GAAsEzS,KAAK,CAA/EyS,IAAI;IAAElD,WAAW,GAAyDvP,KAAK,CAAzEuP,WAAW;IAAEc,MAAM,GAAiDrQ,KAAK,CAA5DqQ,MAAM;IAAE5K,QAAQ,GAAuCzF,KAAK,CAApDyF,QAAQ;IAAE4M,YAAY,GAAyBrS,KAAK,CAA1CqS,YAAY;IAAElS,QAAQ,GAAeH,KAAK,CAA5BG,QAAQ;IAAE0D,QAAQ,GAAK7D,KAAK,CAAlB6D,QAAQ,CAAA;AAC1G,EAAA,IAAMS,SAAS,GAAGR,YAAY,CAACD,QAAQ,CAAC,CAAA;EACxC,IAAMoU,wBAAwB,GAAGzT,WAAW,CAC1C,0BAA0B,EAC1BrE,QAAQ,EACRmE,SAAS,CACV,CAAA;AACD,EAAA,IAAI+L,MAAM,EAAE;IACV,OAAO5L;AAAKyC,MAAAA,SAAS,EAAC,QAAQ;AAAEiC,MAAAA,QAAA,EAAAA,QAAAA;MAAe,CAAA;AAChD,GAAA;AACD,EAAA,OACEmD,IAAC,CAAA2L,wBAAwB,EAAA,QAAA,CAAA,EAAA,EAAKjY,KAAK,EAAA;AAAAmJ,IAAAA,QAAA,EAAA,CAChCkJ,YAAY,IAAI5N,GAAA,CAACsT,KAAK,EAAC;AAAAlQ,MAAAA,KAAK,EAAEA,KAAK;AAAEpC,MAAAA,QAAQ,EAAEA,QAAQ;AAAEhD,MAAAA,EAAE,EAAEA,EAAAA;AAAM,KAAA,CAAA,EACnE4P,YAAY,IAAI9C,WAAW,GAAGA,WAAW,GAAG,IAAI,EAChDpG,QAAQ,EACRgK,MAAM,EACNV,IAAI,CAAA;GACoB,CAAA,CAAA,CAAA;AAE/B;;ACtCA;;;AAGG;AACqB,SAAAd,kBAAkB,CAIxC3R,KAA+B,EAAA;EAC/B,IAAkCA,aAAAA,GAAAA,KAAK,CAA/BmT,MAAM;AAANA,IAAAA,MAAM,8BAAG,EAAE,GAAA,aAAA;IAAErQ,QAAQ,GAAK9C,KAAK,CAAlB8C,QAAQ,CAAA;AAC7B,EAAA,IAAIqQ,MAAM,CAAC7P,MAAM,KAAK,CAAC,EAAE;AACvB,IAAA,OAAO,IAAI,CAAA;AACZ,GAAA;AACD,EAAA,IAAMb,EAAE,GAAGyV,OAAO,CAAIpV,QAAQ,CAAC,CAAA;EAE/B,OACE2B,GACE,CAAA,KAAA,EAAA;AAAA0E,IAAAA,QAAA,EAAA1E,GAAA,CAAA,IAAA,EAAA;AAAIhC,MAAAA,EAAE,EAAEA,EAAE;AAAEyE,MAAAA,SAAS,EAAC,yCAAyC;AAAAiC,MAAAA,QAAA,EAC5DgK,MAAM,CACJxR,MAAM,CAAC,UAACwW,IAAI,EAAA;QAAA,OAAK,CAAC,CAACA,IAAI,CAAA;AAAA,OAAA,CAAC,CACxB1Y,GAAG,CAAC,UAACmY,KAAK,EAAE7W,KAAa,EAAI;QAC5B,OACE0D,GAAI,CAAA,IAAA,EAAA;AAAAyC,UAAAA,SAAS,EAAC,aAAa;AACxBiC,UAAAA,QAAA,EAAAyO,KAAAA;SAD8B,EAAA7W,KAAK,CAEjC,CAAA;OAER,CAAA;KAAC,CAAA;AAEF,GAAA,CAAA,CAAA;AAEV;;AC9BA;;;AAGG;AACqB,SAAA2Q,iBAAiB,CAIvC1R,KAA8B,EAAA;AAC9B,EAAA,IAAQ8C,QAAQ,GAAW9C,KAAK,CAAxB8C,QAAQ;IAAE2P,IAAI,GAAKzS,KAAK,CAAdyS,IAAI,CAAA;EACtB,IAAI,CAACA,IAAI,EAAE;AACT,IAAA,OAAO,IAAI,CAAA;AACZ,GAAA;AACD,EAAA,IAAMhQ,EAAE,GAAG2V,MAAM,CAAItV,QAAQ,CAAC,CAAA;AAC9B,EAAA,IAAI,OAAO2P,IAAI,KAAK,QAAQ,EAAE;IAC5B,OACEhO,GAAA,CAAA,GAAA,EAAA;AAAGhC,MAAAA,EAAE,EAAEA,EAAE;AAAEyE,MAAAA,SAAS,EAAC,YAAY;AAAAiC,MAAAA,QAAA,EAC9BsJ,IAAAA;AAAI,KAAA,CACH,CAAA;AAEP,GAAA;EACD,OACEhO,GAAA,CAAA,KAAA,EAAA;AAAKhC,IAAAA,EAAE,EAAEA,EAAE;AAAEyE,IAAAA,SAAS,EAAC,YAAY;AAAAiC,IAAAA,QAAA,EAChCsJ,IAAAA;AAAI,GAAA,CACD,CAAA;AAEV;;ACfA;;;;;AAKG;AACqB,SAAA4F,mBAAmB,CAIzCrY,KAAwC,EAAA;AACxC,EAAA,IACEuP,WAAW,GAYTvP,KAAK,CAZPuP,WAAW;IACXjK,QAAQ,GAWNtF,KAAK,CAXPsF,QAAQ;IACRhG,QAAQ,GAUNU,KAAK,CAVPV,QAAQ;IACRwD,QAAQ,GASN9C,KAAK,CATP8C,QAAQ;IACRnC,UAAU,GAQRX,KAAK,CARPW,UAAU;IACV0O,UAAU,GAORrP,KAAK,CAPPqP,UAAU;IACV9J,QAAQ,GAMNvF,KAAK,CANPuF,QAAQ;IACRpF,QAAQ,GAKNH,KAAK,CALPG,QAAQ;IACRsF,QAAQ,GAINzF,KAAK,CAJPyF,QAAQ;IACRvF,MAAM,GAGJF,KAAK,CAHPE,MAAM;IACN6F,KAAK,GAEH/F,KAAK,CAFP+F,KAAK;IACLlC,QAAQ,GACN7D,KAAK,CADP6D,QAAQ,CAAA;AAEV,EAAA,IAAM2D,OAAO,GAAG1D,YAAY,CAAUD,QAAQ,CAAC,CAAA;EAC/C,IAAM6R,kBAAkB,GAAGlR,WAAW,CAAgC,oBAAoB,EAAErE,QAAQ,EAAEqH,OAAO,CAAC,CAAA;EAC9G,IAAMiK,wBAAwB,GAAGjN,WAAW,CAC1C,0BAA0B,EAC1BrE,QAAQ,EACRqH,OAAO,CACR,CAAA;AACD;EACA,IACqBgO,SAAS,GAC1BrV,QAAQ,CAACsU,SAAS,CADpBC,eAAe,CAAIc,SAAS,CAAA;EAE9B,OACElJ,IAAA,CAAA,UAAA,EAAA;IAAU7J,EAAE,EAAEK,QAAQ,CAACE,GAAG;AACvBmG,IAAAA,QAAA,EAAA,CAAA,CAAC3B,OAAO,CAACzB,KAAK,IAAIA,KAAK,KACtBtB,GAAC,CAAAiR,kBAAkB,EACjB;AAAAjT,MAAAA,EAAE,EAAEkT,OAAO,CAAI7S,QAAQ,CAAC;AACxBiD,MAAAA,KAAK,EAAEyB,OAAO,CAACzB,KAAK,IAAIA,KAAK;AAC7BN,MAAAA,QAAQ,EAAEA,QAAQ;AAClBvF,MAAAA,MAAM,EAAEA,MAAM;AACd2D,MAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,MAAAA,QAAQ,EAAEA,QAAAA;AACV,KAAA,CACH,EACA,CAACqH,OAAO,CAAC+H,WAAW,IAAIA,WAAW,KAClC9K,GAAC,CAAAgN,wBAAwB,EACvB;AAAAhP,MAAAA,EAAE,EAAE4Q,aAAa,CAAIvQ,QAAQ,CAAC;AAC9ByM,MAAAA,WAAW,EAAE/H,OAAO,CAAC+H,WAAW,IAAIA,WAAY;AAChDrP,MAAAA,MAAM,EAAEA,MAAM;AACd2D,MAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,MAAAA,QAAQ,EAAEA,QAAAA;AACV,KAAA,CACH,EACAkP,UAAU,CAAC5P,GAAG,CAAC,UAAC6Y,IAAqC,EAAA;MAAA,OAAKA,IAAI,CAAC/H,OAAO,CAAA;AAAA,KAAA,CAAC,EACvEgI,SAAS,CAAUrY,MAAM,EAAE2D,QAAQ,EAAEvE,QAAQ,CAAC,IAC7CmF,IAAC+Q,SAAS,EAAA;AACRtO,MAAAA,SAAS,EAAC,wBAAwB;AAClCmO,MAAAA,OAAO,EAAE1U,UAAU,CAACT,MAAM,CAAC;MAC3BoF,QAAQ,EAAEA,QAAQ,IAAIC,QAAQ;AAC9B1B,MAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,MAAAA,QAAQ,EAAEA,QAAAA;AAAQ,KAAA,CAErB,CAAA;AAAA,GAAA,CACQ,CAAA;AAEf;;AChFA,IAAM2X,qBAAqB,GAAG,GAAG,CAAA;AAEjC;;;AAGG;AACqB,SAAAU,UAAU,CAChCxY,KAA+B,EAAA;AAE/B,EAAA,IAAQyC,EAAE,GAAsBzC,KAAK,CAA7ByC,EAAE;IAAEsD,KAAK,GAAe/F,KAAK,CAAzB+F,KAAK;IAAEN,QAAQ,GAAKzF,KAAK,CAAlByF,QAAQ,CAAA;EAC3B,OACE6G,IAAQ,CAAA,QAAA,EAAA;AAAA7J,IAAAA,EAAE,EAAEA,EAAE;IAAA0G,QAAA,EAAA,CACXpD,KAAK,EACLN,QAAQ,IAAIhB,GAAM,CAAA,MAAA,EAAA;AAAAyC,MAAAA,SAAS,EAAC,UAAU;AAAAiC,MAAAA,QAAA,EAAE2O,qBAAAA;AAA6B,KAAA,CAAA,CAAA;AAAA,GAAA,CAC/D,CAAA;AAEb;;ACfA;;;;AAIG;AACH,SAASW,gBAAgB,CACvBzY,KAAqC,EAAA;AAErC,EAAA,IAAQE,MAAM,GAAiCF,KAAK,CAA5CE,MAAM;IAAE4C,QAAQ,GAAuB9C,KAAK,CAApC8C,QAAQ;IAAE4B,MAAM,GAAe1E,KAAK,CAA1B0E,MAAM;IAAEvE,QAAQ,GAAKH,KAAK,CAAlBG,QAAQ,CAAA;AAC1C,EAAA,IAAQiE,eAAe,GAAKjE,QAAQ,CAA5BiE,eAAe,CAAA;AACvB,EAAA,IAAI6H,aAAa,GAAuBtH,kBAAkB,CAAC8T,gBAAgB,CAAA;EAC3E,IAAMrM,eAAe,GAAa,EAAE,CAAA;AACpC,EAAA,IAAItJ,QAAQ,IAAIA,QAAQ,CAACE,GAAG,EAAE;IAC5BiJ,aAAa,GAAGtH,kBAAkB,CAAC+T,sBAAsB,CAAA;AACzDtM,IAAAA,eAAe,CAAClI,IAAI,CAACpB,QAAQ,CAACE,GAAG,CAAC,CAAA;AACnC,GAAA;AACD,EAAA,IAAI0B,MAAM,EAAE;AACVuH,IAAAA,aAAa,GACXA,aAAa,KAAKtH,kBAAkB,CAAC8T,gBAAgB,GACjD9T,kBAAkB,CAACgU,0BAA0B,GAC7ChU,kBAAkB,CAACiU,+BAA+B,CAAA;AACxDxM,IAAAA,eAAe,CAAClI,IAAI,CAACQ,MAAM,CAAC,CAAA;AAC7B,GAAA;EACD,OACE4H,IAAA,CAAA,KAAA,EAAA;AAAKpF,IAAAA,SAAS,EAAC,mBAAmB;AAChCiC,IAAAA,QAAA,EAAA,CAAA1E,GAAA,CAAA,GAAA,EAAA;AAAA0E,MAAAA,QAAA,EACE1E,GAAC,CAAAoU,QAAQ;kBAAEzU,eAAe,CAAC6H,aAAa,EAAEG,eAAe,CAAA;OAAC,CAAA;AACxD,KAAA,CAAA,EACHlM,MAAM,IAAIuE,GAAA,CAAA,KAAA,EAAA;MAAA0E,QAAA,EAAM4G,IAAI,CAACC,SAAS,CAAC9P,MAAM,EAAE,IAAI,EAAE,CAAC,CAAA;AAAQ,KAAA,CAAA,CAAA;AAAA,GAAA,CACnD,CAAA;AAEV;;ACvBA;;;;AAIG;AACqB,SAAA+X,wBAAwB,CAI9CjY,KAA6C,EAAA;AAC7C,EAAA,IACEyC,EAAE,GAaAzC,KAAK,CAbPyC,EAAE;IACFiQ,UAAU,GAYR1S,KAAK,CAZP0S,UAAU;IACV9C,KAAK,GAWH5P,KAAK,CAXP4P,KAAK;IACLtK,QAAQ,GAUNtF,KAAK,CAVPsF,QAAQ;IACRuC,KAAK,GASH7H,KAAK,CATP6H,KAAK;IACLwG,WAAW,GAQTrO,KAAK,CARPqO,WAAW;IACXP,mBAAmB,GAOjB9N,KAAK,CAPP8N,mBAAmB;IACnBvI,QAAQ,GAMNvF,KAAK,CANPuF,QAAQ;IACRE,QAAQ,GAKNzF,KAAK,CALPyF,QAAQ;IACRvF,MAAM,GAIJF,KAAK,CAJPE,MAAM;IACNiJ,QAAQ,GAGNnJ,KAAK,CAHPmJ,QAAQ;IACRtF,QAAQ,GAEN7D,KAAK,CAFP6D,QAAQ;IACR1D,QAAQ,GACNH,KAAK,CADPG,QAAQ,CAAA;AAEV,EAAA,IAAQsU,SAAS,GAAsBtU,QAAQ,CAAvCsU,SAAS;IAAErQ,eAAe,GAAKjE,QAAQ,CAA5BiE,eAAe,CAAA;AAClC;AACA,EAAA,IAAQyQ,YAAY,GAAKJ,SAAS,CAACC,eAAe,CAA1CG,YAAY,CAAA;EACpB,IAAMiE,QAAQ,GAAG1U,eAAe,CAACO,kBAAkB,CAACoU,QAAQ,EAAE,CAAClR,KAAK,CAAC,CAAC,CAAA;AACtE,EAAA,IAAMM,UAAU,IAAGgI,wBAAwB,IAAIjQ,MAAM,CAAA,CAAA;EAErD,IAAI,CAACiI,UAAU,EAAE;IACf,OACE1D,GAAA,CAAA,KAAA,EAAA;AAAKyC,MAAAA,SAAS,EAAEwL,UAAU;AAAE9C,MAAAA,KAAK,EAAEA,KAAK;AAAAzG,MAAAA,QAAA,EACrCA,QAAAA;AAAQ,KAAA,CACL,CAAA;AAET,GAAA;EAED,OACE1E,GAAA,CAAA,KAAA,EAAA;AAAKyC,IAAAA,SAAS,EAAEwL,UAAU;AAAE9C,IAAAA,KAAK,EAAEA,KAAK;AAAAzG,IAAAA,QAAA,EACtCmD,IAAK,CAAA,KAAA,EAAA;AAAApF,MAAAA,SAAS,EAAC,KAAK;AAAAiC,MAAAA,QAAA,EAAA,CAClB1E,GAAK,CAAA,KAAA,EAAA;AAAAyC,QAAAA,SAAS,EAAC,0BAA0B;AACvCiC,QAAAA,QAAA,EAAAmD,IAAA,CAAA,KAAA,EAAA;AAAKpF,UAAAA,SAAS,EAAC,YAAY;AAAAiC,UAAAA,QAAA,EAAA,CACzB1E,GAAC,CAAAsT,KAAK,EAAC;AAAAlQ,YAAAA,KAAK,EAAEiR,QAAQ;AAAErT,YAAAA,QAAQ,EAAEA,QAAQ;AAAEhD,YAAAA,EAAE,EAAKA,EAAE,GAAA,MAAA;AAAM,WAAA,CAAI,EAC/DgC,GAAA,CAAA,OAAA,EAAA;AACEyC,YAAAA,SAAS,EAAC,cAAc;AACxBzD,YAAAA,IAAI,EAAC,MAAM;YACXhB,EAAE,EAAKA,EAAE,GAAM,MAAA;YACfiD,MAAM,EAAE,gBAAC9E,KAAK,EAAA;AAAA,cAAA,OAAKyN,WAAW,CAACzN,KAAK,CAACyV,MAAM,CAAC7T,KAAK,CAAC,CAAA;AAAA,aAAA;AAClDwW,YAAAA,YAAY,EAAEnR,KAAAA;AACd,WAAA,CAAA,CAAA;SAAA,CAAA;AAEA,OAAA,CAAA,EACNpD;AAAKyC,QAAAA,SAAS,EAAC,qCAAqC;AAAAiC,QAAAA,QAAA,EAAEA,QAAAA;AAAQ,OAAA,CAAO,EACrE1E,GAAA,CAAA,KAAA,EAAA;AAAKyC,QAAAA,SAAS,EAAC,UAAU;AAAAiC,QAAAA,QAAA,EACvB1E,GAAC,CAAAoQ,YAAY,EACX;AAAA3N,UAAAA,SAAS,EAAC,6BAA6B;AACvC0I,UAAAA,KAAK,EAAE;AAAEqJ,YAAAA,MAAM,EAAE,GAAA;WAAK;UACtB3T,QAAQ,EAAEA,QAAQ,IAAIC,QAAQ;AAC9B8P,UAAAA,OAAO,EAAEvH,mBAAmB,CAACjG,KAAK,CAAC;AACnChE,UAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,UAAAA,QAAQ,EAAEA,QAAAA;SACV,CAAA;AAAA,OAAA,CACE,CAAA;KACF,CAAA;AAAA,GAAA,CACF,CAAA;AAEV;;AC7DA,SAASsU,SAAS,GAAA;EAKhB,OAAO;AACLF,IAAAA,6BAA6B,EAA7BA,6BAA6B;AAC7BC,IAAAA,sBAAsB,EAAtBA,sBAAsB;AACtBc,IAAAA,kBAAkB,EAAlBA,kBAAkB;AAClBC,IAAAA,uBAAuB,EAAvBA,uBAAuB;IACvBb,eAAe,EAAEA,eAAe,EAAW;AAC3CkB,IAAAA,iBAAiB,EAAjBA,iBAAiB;AACjBnE,IAAAA,wBAAwB,EAAEgG,gBAAgB;AAC1CyB,IAAAA,iBAAiB,EAAExB,SAAS;AAC5BlG,IAAAA,aAAa,EAAbA,aAAa;AACbG,IAAAA,kBAAkB,EAAlBA,kBAAkB;AAClBD,IAAAA,iBAAiB,EAAjBA,iBAAiB;AACjB2G,IAAAA,mBAAmB,EAAnBA,mBAAmB;AACnB3C,IAAAA,kBAAkB,EAAE8C,UAAU;AAC9BjU,IAAAA,wBAAwB,EAAEkU,gBAAgB;AAC1CR,IAAAA,wBAAwB,EAAxBA,wBAAAA;GACD,CAAA;AACH;;AC1BA,SAASkB,YAAY,CAACC,KAAa,EAAEC,IAAY,EAAA;EAC/C,IAAM7R,OAAO,GAAG,EAAE,CAAA;EAClB,KAAK,IAAIjG,CAAC,GAAG6X,KAAK,EAAE7X,CAAC,IAAI8X,IAAI,EAAE9X,CAAC,EAAE,EAAE;IAClCiG,OAAO,CAACtD,IAAI,CAAC;AAAE1B,MAAAA,KAAK,EAAEjB,CAAC;AAAEsG,MAAAA,KAAK,EAAEyR,GAAG,CAAC/X,CAAC,EAAE,CAAC,CAAA;AAAC,KAAE,CAAC,CAAA;AAC7C,GAAA;AACD,EAAA,OAAOiG,OAAO,CAAA;AAChB,CAAA;AAEA,SAAS+R,cAAc,CAACnY,KAAiB,EAAA;EACvC,OAAO4H,MAAM,CAACwQ,MAAM,CAACpY,KAAK,CAAC,CAACkJ,KAAK,CAAC,UAAC9H,KAAK,EAAA;IAAA,OAAKA,KAAK,KAAK,CAAC,CAAC,CAAA;GAAC,CAAA,CAAA;AAC5D,CAAA;AAEA,SAASiX,gBAAgB,CACvBrY,KAAiB,EACjBsY,IAAa,EACbC,YAAmE;AAAA,EAAA,IAAnEA;AAAAA,IAAAA,aAA+B,CAAC,IAAI,EAAE,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAA;AAAA,GAAA;AAEnE,EAAA,IAAQC,IAAI,GAAuC1Y,KAAK,CAAhD0Y,IAAI;IAAEC,KAAK,GAAgC3Y,KAAK,CAA1C2Y,KAAK;IAAEC,GAAG,GAA2B5Y,KAAK,CAAnC4Y,GAAG;IAAEC,IAAI,GAAqB7Y,KAAK,CAA9B6Y,IAAI;IAAEC,MAAM,GAAa9Y,KAAK,CAAxB8Y,MAAM;IAAEC,MAAM,GAAK/Y,KAAK,CAAhB+Y,MAAM,CAAA;EAC9C,IAAMC,IAAI,GAAG,CACX;AACE3W,IAAAA,IAAI,EAAE,MAAM;AACZ4W,IAAAA,KAAK,EAAEV,UAAU;AACjBnX,IAAAA,KAAK,EAAEsX,IAAAA;AACR,GAAA,EACD;AAAErW,IAAAA,IAAI,EAAE,OAAO;AAAE4W,IAAAA,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AAAE7X,IAAAA,KAAK,EAAEuX,KAAAA;AAAO,GAAA,EAC/C;AAAEtW,IAAAA,IAAI,EAAE,KAAK;AAAE4W,IAAAA,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AAAE7X,IAAAA,KAAK,EAAEwX,GAAAA;AAAK,GAAA,CAC8B,CAAA;AAC3E,EAAA,IAAIN,IAAI,EAAE;IACRU,IAAI,CAAClW,IAAI,CACP;AAAET,MAAAA,IAAI,EAAE,MAAM;AAAE4W,MAAAA,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AAAE7X,MAAAA,KAAK,EAAEyX,IAAAA;AAAI,KAAE,EAC7C;AAAExW,MAAAA,IAAI,EAAE,QAAQ;AAAE4W,MAAAA,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AAAE7X,MAAAA,KAAK,EAAE0X,MAAAA;AAAQ,KAAA,EACjD;AAAEzW,MAAAA,IAAI,EAAE,QAAQ;AAAE4W,MAAAA,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;AAAE7X,MAAAA,KAAK,EAAE2X,MAAAA;AAAQ,KAAA,CAClD,CAAA;AACF,GAAA;AACD,EAAA,OAAOC,IAAI,CAAA;AACb,CAAA;AAYA,SAASE,WAAW,CAaQ,IAAA,EAAA;EAAA,IAZ1B7W,IAAI,QAAJA,IAAI;AACJ4W,IAAAA,KAAK,QAALA,KAAK;AACL7X,IAAAA,KAAK,QAALA,KAAK;AACL+X,IAAAA,MAAM,QAANA,MAAM;AACNC,IAAAA,MAAM,QAANA,MAAM;AACNnV,IAAAA,IAAI,QAAJA,IAAI;AACJC,IAAAA,QAAQ,QAARA,QAAQ;AACRC,IAAAA,QAAQ,QAARA,QAAQ;AACRC,IAAAA,SAAS,QAATA,SAAS;AACTrF,IAAAA,QAAQ,QAARA,QAAQ;AACRuF,IAAAA,MAAM,QAANA,MAAM;AACNC,IAAAA,OAAO,QAAPA,OAAO,CAAA;AAEP,EAAA,IAAMlD,EAAE,GAAG+X,MAAM,GAAG,GAAG,GAAG/W,IAAI,CAAA;AAC9B,EAAA,IAAQgX,YAAY,GAAKta,QAAQ,CAACmH,OAAO,CAAjCmT,YAAY,CAAA;EACpB,OACEhW,IAACgW,YAAY,EAAA;AACXva,IAAAA,MAAM,EAAE;AAAEuD,MAAAA,IAAI,EAAE,SAAA;KAAgB;AAChChB,IAAAA,EAAE,EAAEA,EAAE;AACN4C,IAAAA,IAAI,EAAEA,IAAI;AACV6B,IAAAA,SAAS,EAAC,cAAc;AACxBM,IAAAA,OAAO,EAAE;MAAEM,WAAW,EAAEqR,YAAY,CAACkB,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,CAAA;KAAG;AAC1DhT,IAAAA,WAAW,EAAE5D,IAAI;AACjBjB,IAAAA,KAAK,EAAEA,KAAK;AACZ8C,IAAAA,QAAQ,EAAEA,QAAQ;AAClBC,IAAAA,QAAQ,EAAEA,QAAQ;AAClBC,IAAAA,SAAS,EAAEA,SAAS;IACpBtE,QAAQ,EAAE,kBAACsB,KAAU,EAAA;AAAA,MAAA,OAAK+X,MAAM,CAAC9W,IAAwB,EAAEjB,KAAK,CAAC,CAAA;AAAA,KAAA;AACjEkD,IAAAA,MAAM,EAAEA,MAAM;AACdC,IAAAA,OAAO,EAAEA,OAAO;AAChBxF,IAAAA,QAAQ,EAAEA,QAAQ;AAClB0H,IAAAA,KAAK,EAAC,EAAE;IACU,kBAAA,EAAAgP,kBAAkB,CAAI2D,MAAM,CAAA;AAC9C,GAAA,CAAA,CAAA;AAEN,CAAA;AAEA;;AAEG;AACH,SAASE,aAAa,CAaC,KAAA,EAAA;AAAA,EAAA,IAAA,UAAA,GAAA,KAAA,CAZrBhB,IAAI;AAAJA,IAAAA,IAAI,2BAAG,KAAK,GAAA,UAAA;AAAA,IAAA,cAAA,GAAA,KAAA,CACZpU,QAAQ;AAARA,IAAAA,QAAQ,+BAAG,KAAK,GAAA,cAAA;AAAA,IAAA,cAAA,GAAA,KAAA,CAChBC,QAAQ;AAARA,IAAAA,QAAQ,+BAAG,KAAK,GAAA,cAAA;AAAA,IAAA,eAAA,GAAA,KAAA,CAChBC,SAAS;AAATA,IAAAA,SAAS,gCAAG,KAAK,GAAA,eAAA;AACjBgC,IAAAA,OAAO,SAAPA,OAAO;AACP/E,IAAAA,EAAE,SAAFA,EAAE;AACF4C,IAAAA,IAAI,SAAJA,IAAI;AACJlF,IAAAA,QAAQ,SAARA,QAAQ;AACRuF,IAAAA,MAAM,SAANA,MAAM;AACNC,IAAAA,OAAO,SAAPA,OAAO;AACPzE,IAAAA,QAAQ,SAARA,QAAQ;AACRsB,IAAAA,KAAK,SAALA,KAAK,CAAA;AAEL,EAAA,IAAQ4B,eAAe,GAAKjE,QAAQ,CAA5BiE,eAAe,CAAA;AACvB,EAAA,IAAA,WAAA,GAA0BuW,UAAU,CAAC,UAACvZ,KAAiB,EAAEwZ,MAA2B,EAAI;MACtF,OAAYxZ,QAAAA,CAAAA,EAAAA,EAAAA,KAAK,EAAKwZ,MAAM,CAAA,CAAA;AAC9B,KAAC,EAAEC,eAAe,CAACrY,KAAK,EAAEkX,IAAI,CAAC,CAAC;IAFzBtY,KAAK,GAAA,WAAA,CAAA,CAAA,CAAA;IAAES,QAAQ,GAAA,WAAA,CAAA,CAAA,CAAA,CAAA;AAItBwS,EAAAA,SAAS,CAAC,YAAK;IACb,IAAI7R,KAAK,IAAIA,KAAK,KAAKsY,YAAY,CAAC1Z,KAAK,EAAEsY,IAAI,CAAC,EAAE;AAChD7X,MAAAA,QAAQ,CAACgZ,eAAe,CAACrY,KAAK,EAAEkX,IAAI,CAAC,CAAC,CAAA;AACvC,KAAA;GACF,EAAE,CAAClX,KAAK,EAAEpB,KAAK,EAAEsY,IAAI,CAAC,CAAC,CAAA;AAExBrF,EAAAA,SAAS,CAAC,YAAK;AACb,IAAA,IAAIkF,cAAc,CAACnY,KAAK,CAAC,EAAE;AACzB;AACAF,MAAAA,QAAQ,CAAC4Z,YAAY,CAAC1Z,KAAK,EAAEsY,IAAI,CAAC,CAAC,CAAA;AACpC,KAAA;GACF,EAAE,CAACtY,KAAK,EAAEsY,IAAI,EAAExY,QAAQ,CAAC,CAAC,CAAA;EAE3B,IAAM8L,YAAY,GAAGC,WAAW,CAAC,UAAC8N,QAA0B,EAAEvY,KAAa,EAAI;AAAA,IAAA,IAAA,SAAA,CAAA;AAC7EX,IAAAA,QAAQ,EAAIkZ,SAAAA,GAAAA,EAAAA,EAAAA,SAAAA,CAAAA,QAAQ,CAAGvY,GAAAA,KAAK,EAAG,SAAA,EAAA,CAAA;GAChC,EAAE,EAAE,CAAC,CAAA;AAEN,EAAA,IAAMwY,YAAY,GAAG/N,WAAW,CAC9B,UAACrM,KAAoC,EAAI;IACvCA,KAAK,CAACK,cAAc,EAAE,CAAA;IACtB,IAAIqE,QAAQ,IAAIC,QAAQ,EAAE;AACxB,MAAA,OAAA;AACD,KAAA;AACD,IAAA,IAAM0V,UAAU,GAAGJ,eAAe,CAAC,IAAIjB,IAAI,EAAE,CAACsB,MAAM,EAAE,EAAExB,IAAI,CAAC,CAAA;IAC7D7X,QAAQ,CAACoZ,UAAU,CAAC,CAAA;GACrB,EACD,CAAC3V,QAAQ,EAAEC,QAAQ,EAAEmU,IAAI,CAAC,CAC3B,CAAA;AAED,EAAA,IAAMyB,WAAW,GAAGlO,WAAW,CAC7B,UAACrM,KAAoC,EAAI;IACvCA,KAAK,CAACK,cAAc,EAAE,CAAA;IACtB,IAAIqE,QAAQ,IAAIC,QAAQ,EAAE;AACxB,MAAA,OAAA;AACD,KAAA;AACD1D,IAAAA,QAAQ,CAACgZ,eAAe,CAAC,EAAE,EAAEnB,IAAI,CAAC,CAAC,CAAA;IACnCxY,QAAQ,CAAC6B,SAAS,CAAC,CAAA;GACpB,EACD,CAACuC,QAAQ,EAAEC,QAAQ,EAAEmU,IAAI,EAAExY,QAAQ,CAAC,CACrC,CAAA;EAED,OACEoL,IAAI,CAAA,IAAA,EAAA;AAAApF,IAAAA,SAAS,EAAC,aAAa;AAAAiC,IAAAA,QAAA,EAAA,CACxBsQ,gBAAgB,CAACrY,KAAK,EAAEsY,IAAI,EAAElS,OAAO,CAACmS,UAA0C,CAAC,CAACla,GAAG,CAAC,UAAC2b,SAAS,EAAE7Z,CAAC,EAAA;MAAA,OAClGkD,GAAI,CAAA,IAAA,EAAA;AAAAyC,QAAAA,SAAS,EAAC,kBAAkB;QAAAiC,QAAA,EAC9B1E,IAAC6V,WAAW,EAAA,QAAA,CAAA;AACVE,UAAAA,MAAM,EAAE/X,EAAE;AACV4C,UAAAA,IAAI,EAAEA,IAAI;AACVkV,UAAAA,MAAM,EAAEvN,YAAAA;AAAY,SAAA,EAChBoO,SAAS,EAAA;AACb9V,UAAAA,QAAQ,EAAEA,QAAQ;AAClBC,UAAAA,QAAQ,EAAEA,QAAQ;AAClBpF,UAAAA,QAAQ,EAAEA,QAAQ;AAClBuF,UAAAA,MAAM,EAAEA,MAAM;AACdC,UAAAA,OAAO,EAAEA,OAAO;AAChBH,UAAAA,SAAS,EAAEA,SAAS,IAAIjE,CAAC,KAAK,CAAA;AAAC,SAAA,CAAA,CAAA;OAC/B,EAZkCA,CAAC,CAalC,CAAA;AAAA,KACN,CAAC,EACD,CAACiG,OAAO,CAAC6T,aAAa,KAAK,WAAW,GAAG,CAAC7T,OAAO,CAAC6T,aAAa,GAAG,IAAI,KACrE5W,GAAA,CAAA,IAAA,EAAA;AAAIyC,MAAAA,SAAS,EAAC,kBAAkB;gBAC9BzC,GAAG,CAAA,GAAA,EAAA;AAAA6W,QAAAA,IAAI,EAAC,GAAG;AAACpU,QAAAA,SAAS,EAAC,sBAAsB;AAACmO,QAAAA,OAAO,EAAE2F,YAAY;AAAA7R,QAAAA,QAAA,EAC/D/E,eAAe,CAACO,kBAAkB,CAAC4W,QAAQ,CAAA;;AAE3C,KAAA,CACN,EACA,CAAC/T,OAAO,CAACgU,eAAe,KAAK,WAAW,GAAG,CAAChU,OAAO,CAACgU,eAAe,GAAG,IAAI,KACzE/W,GAAI,CAAA,IAAA,EAAA;AAAAyC,MAAAA,SAAS,EAAC,kBAAkB;AAAAiC,MAAAA,QAAA,EAC9B1E;AAAG6W,QAAAA,IAAI,EAAC,GAAG;AAACpU,QAAAA,SAAS,EAAC,2BAA2B;AAACmO,QAAAA,OAAO,EAAE8F,WAAW;AACnEhS,QAAAA,QAAA,EAAA/E,eAAe,CAACO,kBAAkB,CAAC8W,UAAU,CAAA;OAAC,CAAA;MAGpD,CAAA;AAAA,GAAA,CACE,CAAA;AAET;;;AClMA;;;;AAIG;AACH,SAASC,iBAAiB,CAGH,IAAA,EAAA;AAAA,EAAA,IAAA,SAAA,GAAA,IAAA,CAFrBhC,IAAI;AAAJA,IAAAA,IAAI,0BAAG,IAAI,GAAA,SAAA;IACR1Z,KAAK,GAAA,6BAAA,CAAA,IAAA,EAAAyH,WAAA,CAAA,CAAA;EAER,IAAQiT,aAAa,GAAK1a,KAAK,CAACG,QAAQ,CAACmH,OAAO,CAAxCoT,aAAa,CAAA;EACrB,OAAOjW,GAAA,CAACiW,aAAa,EAAA,QAAA,CAAA;AAAChB,IAAAA,IAAI,EAAEA,IAAAA;AAAI,GAAA,EAAM1Z,KAAK,CAAI,CAAA,CAAA;AACjD;;ACDA;;;;AAIG;AACH,SAAS2b,cAAc,CAcA,IAAA,EAAA;EAAA,IAbrBzb,MAAM,QAANA,MAAM;AACN2D,IAAAA,QAAQ,QAARA,QAAQ;AACR2D,IAAAA,OAAO,QAAPA,OAAO;AACP/E,IAAAA,EAAE,QAAFA,EAAE;AACFD,IAAAA,KAAK,QAALA,KAAK;AACL8C,IAAAA,QAAQ,QAARA,QAAQ;AACRC,IAAAA,QAAQ,QAARA,QAAQ;AACRsC,IAAAA,KAAK,QAALA,KAAK;AAAA,IAAA,cAAA,GAAA,IAAA,CACLrC,SAAS;AAATA,IAAAA,SAAS,+BAAG,KAAK,GAAA,cAAA;AACjBE,IAAAA,MAAM,QAANA,MAAM;AACNC,IAAAA,OAAO,QAAPA,OAAO;AACPzE,IAAAA,QAAQ,QAARA,QAAQ;AACRf,IAAAA,QAAQ,QAARA,QAAQ,CAAA;EAER,IAAMsR,wBAAwB,GAAGjN,WAAW,CAC1C,0BAA0B,EAC1BrE,QAAQ,EACRqH,OAAO,CACR,CAAA;AACD;AACA;AACA;AACA,EAAA,IAAM/B,QAAQ,GAAGmW,uBAAuB,CAAI1b,MAAM,CAAC,CAAA;AAEnD,EAAA,IAAM8M,YAAY,GAAGC,WAAW,CAC9B,UAACrM,KAAoC,EAAA;AAAA,IAAA,OAAKM,QAAQ,CAACN,KAAK,CAACyV,MAAM,CAACwF,OAAO,CAAC,CAAA;GACxE,EAAA,CAAC3a,QAAQ,CAAC,CACX,CAAA;AAED,EAAA,IAAM4a,UAAU,GAAG7O,WAAW,CAC5B,UAACrM,KAAmC,EAAA;IAAA,OAAK8E,MAAM,CAACjD,EAAE,EAAE7B,KAAK,CAACyV,MAAM,CAACwF,OAAO,CAAC,CAAA;AAAA,GAAA,EACzE,CAACnW,MAAM,EAAEjD,EAAE,CAAC,CACb,CAAA;AAED,EAAA,IAAMsZ,WAAW,GAAG9O,WAAW,CAC7B,UAACrM,KAAmC,EAAA;IAAA,OAAK+E,OAAO,CAAClD,EAAE,EAAE7B,KAAK,CAACyV,MAAM,CAACwF,OAAO,CAAC,CAAA;AAAA,GAAA,EAC1E,CAAClW,OAAO,EAAElD,EAAE,CAAC,CACd,CAAA;EAED,OACE6J,IAAK,CAAA,KAAA,EAAA;IAAApF,SAAS,EAAA,WAAA,IAAc5B,QAAQ,IAAIC,QAAQ,GAAG,UAAU,GAAG,EAAE,CAAE;IACjE4D,QAAA,EAAA,CAAAjJ,MAAM,CAACqP,WAAW,IACjB9K,GAAC,CAAAgN,wBAAwB,EACvB;AAAAhP,MAAAA,EAAE,EAAE4Q,aAAa,CAAI5Q,EAAE,CAAC;MACxB8M,WAAW,EAAErP,MAAM,CAACqP,WAAW;AAC/BrP,MAAAA,MAAM,EAAEA,MAAM;AACd2D,MAAAA,QAAQ,EAAEA,QAAQ;AAClB1D,MAAAA,QAAQ,EAAEA,QAAAA;AACV,KAAA,CACH,EACDmM,IAAA,CAAA,OAAA,EAAA;AAAAnD,MAAAA,QAAA,EAAA,CACE1E,GACE,CAAA,OAAA,EAAA;AAAAhB,QAAAA,IAAI,EAAC,UAAU;AACfhB,QAAAA,EAAE,EAAEA,EAAE;AACN4C,QAAAA,IAAI,EAAE5C,EAAE;QACRoZ,OAAO,EAAE,OAAOrZ,KAAK,KAAK,WAAW,GAAG,KAAK,GAAGA,KAAK;AACrDiD,QAAAA,QAAQ,EAAEA,QAAQ;QAClBH,QAAQ,EAAEA,QAAQ,IAAIC,QAAQ;AAC9BkR,QAAAA,SAAS,EAAEjR,SAAS;AACpBtE,QAAAA,QAAQ,EAAE8L,YAAY;AACtBtH,QAAAA,MAAM,EAAEoW,UAAU;AAClBnW,QAAAA,OAAO,EAAEoW,WAAW;QAAA,kBAAA,EACFlF,kBAAkB,CAAIpU,EAAE,CAAA;AAC1C,OAAA,CAAA,EACFgC,GAAO,CAAA,MAAA,EAAA;AAAA0E,QAAAA,QAAA,EAAAtB,KAAAA;AAAa,OAAA,CAAA,CAAA;AAAA,KAAA,CACd,CAAA;AACJ,GAAA,CAAA,CAAA;AAEV;;ACxEA;;;;AAIG;AACH,SAASmU,gBAAgB,CAUF,IAAA,EAAA;EAAA,IATrBvZ,EAAE,QAAFA,EAAE;AACF6C,IAAAA,QAAQ,QAARA,QAAQ;AAAA,IAAA,YAAA,GAAA,IAAA,CACRkC,OAAO;AAAA,IAAA,mBAAA,GAAA,YAAA,CAAIyU,MAAM;AAANA,IAAAA,MAAM,oCAAG,KAAK,GAAA,mBAAA;AAAEnU,IAAAA,WAAW,gBAAXA,WAAW;AAAEoU,IAAAA,YAAY,gBAAZA,YAAY;AAAE5F,IAAAA,UAAU,gBAAVA,UAAU;AAChE9T,IAAAA,KAAK,QAALA,KAAK;AAAA,IAAA,cAAA,GAAA,IAAA,CACLgD,SAAS;AAATA,IAAAA,SAAS,+BAAG,KAAK,GAAA,cAAA;AACjBD,IAAAA,QAAQ,QAARA,QAAQ;AACRrE,IAAAA,QAAQ,QAARA,QAAQ;AACRwE,IAAAA,MAAM,QAANA,MAAM;AACNC,IAAAA,OAAO,QAAPA,OAAO,CAAA;AAEP,EAAA,IAAMwW,gBAAgB,GAAG5c,KAAK,CAACC,OAAO,CAACgD,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,CAAC,CAAA;EAE/D,IAAMsZ,UAAU,GAAG7O,WAAW,CAC5B,UAAA,KAAA,EAAA;AAAA,IAAA,IAAazK,KAAK,GAAA,KAAA,CAAf6T,MAAM,CAAI7T,KAAK,CAAA;AAAA,IAAA,OAChBkD,MAAM,CAACjD,EAAE,EAAE2Z,wBAAwB,CAAI5Z,KAAK,EAAEsF,WAAW,EAAEwO,UAAU,CAAC,CAAC,CAAA;AAAA,GAAA,EACzE,CAAC5Q,MAAM,EAAEjD,EAAE,CAAC,CACb,CAAA;EAED,IAAMsZ,WAAW,GAAG9O,WAAW,CAC7B,UAAA,KAAA,EAAA;AAAA,IAAA,IAAazK,KAAK,GAAA,KAAA,CAAf6T,MAAM,CAAI7T,KAAK,CAAA;AAAA,IAAA,OAChBmD,OAAO,CAAClD,EAAE,EAAE2Z,wBAAwB,CAAI5Z,KAAK,EAAEsF,WAAW,EAAEwO,UAAU,CAAC,CAAC,CAAA;AAAA,GAAA,EAC1E,CAAC3Q,OAAO,EAAElD,EAAE,CAAC,CACd,CAAA;EACD,OACEgC,GAAA,CAAA,KAAA,EAAA;AAAKyC,IAAAA,SAAS,EAAC,YAAY;AAACzE,IAAAA,EAAE,EAAEA,EAAE;cAC/BlD,KAAK,CAACC,OAAO,CAACsI,WAAW,CAAC,IACzBA,WAAW,CAACrI,GAAG,CAAC,UAACwK,MAAM,EAAElJ,KAAK,EAAI;MAChC,IAAM8a,OAAO,GAAGQ,qBAAqB,CAAIpS,MAAM,CAACzH,KAAK,EAAE2Z,gBAAgB,CAAC,CAAA;AACxE,MAAA,IAAMG,YAAY,GAAG/c,KAAK,CAACC,OAAO,CAAC0c,YAAY,CAAC,IAAIA,YAAY,CAAChN,OAAO,CAACjF,MAAM,CAACzH,KAAK,CAAC,KAAK,CAAC,CAAC,CAAA;MAC7F,IAAM+Z,WAAW,GAAGjX,QAAQ,IAAIgX,YAAY,IAAI/W,QAAQ,GAAG,UAAU,GAAG,EAAE,CAAA;AAE1E,MAAA,IAAMyH,YAAY,GAAG,SAAfA,YAAY,CAAIpM,KAAoC,EAAI;AAC5D,QAAA,IAAIA,KAAK,CAACyV,MAAM,CAACwF,OAAO,EAAE;UACxB3a,QAAQ,CAACsb,sBAAsB,CAAIzb,KAAK,EAAEob,gBAAgB,EAAErU,WAAW,CAAC,CAAC,CAAA;AAC1E,SAAA,MAAM;UACL5G,QAAQ,CAACub,wBAAwB,CAAI1b,KAAK,EAAEob,gBAAgB,EAAErU,WAAW,CAAC,CAAC,CAAA;AAC5E,SAAA;OACF,CAAA;AAED,MAAA,IAAM4U,QAAQ,GACZpQ,IAAA,CAAA,MAAA,EAAA;AAAAnD,QAAAA,QAAA,EAAA,CACE1E;AACEhB,UAAAA,IAAI,EAAC,UAAU;AACfhB,UAAAA,EAAE,EAAEka,QAAQ,CAACla,EAAE,EAAE1B,KAAK,CAAC;AACvBsE,UAAAA,IAAI,EAAE5C,EAAE;AACRoZ,UAAAA,OAAO,EAAEA,OAAO;AAChBrZ,UAAAA,KAAK,EAAE6J,MAAM,CAACtL,KAAK,CAAC;AACpBuE,UAAAA,QAAQ,EAAEA,QAAQ,IAAIgX,YAAY,IAAI/W,QAAQ;AAC9CkR,UAAAA,SAAS,EAAEjR,SAAS,IAAIzE,KAAK,KAAK,CAAC;AACnCG,UAAAA,QAAQ,EAAE8L,YAAY;AACtBtH,UAAAA,MAAM,EAAEoW,UAAU;AAClBnW,UAAAA,OAAO,EAAEoW,WAAW;UAAA,kBAAA,EACFlF,kBAAkB,CAAIpU,EAAE,CAAA;AAAC,SAAA,CAC3C,EACFgC,GAAA,CAAA,MAAA,EAAA;UAAA0E,QAAA,EAAOc,MAAM,CAACpC,KAAAA;AAAa,SAAA,CAAA,CAAA;AAAA,OAAA,CAE9B,CAAA;AACD,MAAA,OAAOoU,MAAM,GACXxX,GAAmB,CAAA,OAAA,EAAA;AAAAyC,QAAAA,SAAS,uBAAqBqV,WAAa;AAAApT,QAAAA,QAAA,EAC3DuT,QAAAA;AAAQ,OAAA,EADC3b,KAAK,CAET,GAER0D,GAAA,CAAA,KAAA,EAAA;AAAiByC,QAAAA,SAAS,gBAAcqV,WAAa;AACnDpT,QAAAA,QAAA,EAAA1E,GAAA,CAAA,OAAA,EAAA;AAAA0E,UAAAA,QAAA,EAAQuT,QAAAA;SAAiB,CAAA;OAAA,EADjB3b,KAAK,CAGhB,CAAA;KACF,CAAA;AACC,GAAA,CAAA,CAAA;AAEV;;ACvFA;;;;AAIG;AACqB,SAAA6b,WAAW,CACjC5c,KAA2B,EAAA;AAE3B,EAAA,IAAQsF,QAAQ,GAAkCtF,KAAK,CAA/CsF,QAAQ;IAAEC,QAAQ,GAAwBvF,KAAK,CAArCuF,QAAQ;IAAEiC,OAAO,GAAexH,KAAK,CAA3BwH,OAAO;IAAErH,QAAQ,GAAKH,KAAK,CAAlBG,QAAQ,CAAA;EAC7C,IAAMyV,iBAAiB,GAAGpR,WAAW,CAA+B,mBAAmB,EAAErE,QAAQ,EAAEqH,OAAO,CAAC,CAAA;EAC3G,OAAO/C,GAAC,CAAAmR,iBAAiB,EAAA,QAAA,CAAA;AAACnS,IAAAA,IAAI,EAAC,OAAA;AAAO,GAAA,EAAKzD,KAAK,EAAA;IAAEsF,QAAQ,EAAEA,QAAQ,IAAIC,QAAAA;GAAY,CAAA,CAAA,CAAA;AACtF;;ACVA;;;;AAIG;AACqB,SAAAsX,UAAU,CAChC7c,KAA2B,EAAA;AAE3B,EAAA,IAAQkB,QAAQ,GAAwBlB,KAAK,CAArCkB,QAAQ;IAAEsG,OAAO,GAAexH,KAAK,CAA3BwH,OAAO;IAAErH,QAAQ,GAAKH,KAAK,CAAlBG,QAAQ,CAAA;EACnC,IAAMyV,iBAAiB,GAAGpR,WAAW,CAA+B,mBAAmB,EAAErE,QAAQ,EAAEqH,OAAO,CAAC,CAAA;AAC3G,EAAA,IAAMwF,YAAY,GAAGC,WAAW,CAAC,UAACzK,KAAU,EAAA;AAAA,IAAA,OAAKtB,QAAQ,CAACsB,KAAK,IAAIO,SAAS,CAAC,CAAA;GAAE,EAAA,CAAC7B,QAAQ,CAAC,CAAC,CAAA;EAE1F,OAAOuD,GAAC,CAAAmR,iBAAiB,EAAA,QAAA,CAAA;AAACnS,IAAAA,IAAI,EAAC,MAAA;AAAM,GAAA,EAAKzD,KAAK,EAAA;AAAEkB,IAAAA,QAAQ,EAAE8L,YAAAA;GAAgB,CAAA,CAAA,CAAA;AAC7E;;ACNA;;;;AAIG;AACqB,SAAA8P,cAAc,CAIpC9c,KAA2B,EAAA;AAC3B,EAAA,IAAQkB,SAAQ,GAA+BlB,KAAK,CAA5CkB,QAAQ;IAAEsB,KAAK,GAAwBxC,KAAK,CAAlCwC,KAAK;IAAEgF,OAAO,GAAexH,KAAK,CAA3BwH,OAAO;IAAErH,QAAQ,GAAKH,KAAK,CAAlBG,QAAQ,CAAA;EAC1C,IAAMyV,iBAAiB,GAAGpR,WAAW,CAA+B,mBAAmB,EAAErE,QAAQ,EAAEqH,OAAO,CAAC,CAAA;EAC3G,OACE/C,GAAA,CAACmR,iBAAiB,EAAA,QAAA,CAAA;AAChBnS,IAAAA,IAAI,EAAC,gBAAA;AAAgB,GAAA,EACjBzD,KAAK,EAAA;AACTwC,IAAAA,KAAK,EAAEua,UAAU,CAACva,KAAK,CAAC;IACxBtB,QAAQ,EAAE,kBAACsB,KAAK,EAAA;AAAA,MAAA,OAAKtB,SAAQ,CAAC8b,UAAU,CAACxa,KAAK,CAAC,CAAC,CAAA;AAAA,KAAA;GAChD,CAAA,CAAA,CAAA;AAEN;;AC5BA;;;AAGG;AACqB,SAAAya,WAAW,CACjCjd,KAA2B,EAAA;AAE3B,EAAA,IAAQwH,OAAO,GAAexH,KAAK,CAA3BwH,OAAO;IAAErH,QAAQ,GAAKH,KAAK,CAAlBG,QAAQ,CAAA;EACzB,IAAMyV,iBAAiB,GAAGpR,WAAW,CAA+B,mBAAmB,EAAErE,QAAQ,EAAEqH,OAAO,CAAC,CAAA;EAC3G,OAAO/C,GAAA,CAACmR,iBAAiB,EAAA,QAAA,CAAA;AAACnS,IAAAA,IAAI,EAAC,OAAA;AAAO,GAAA,EAAKzD,KAAK,CAAI,CAAA,CAAA;AACtD;;ACCA,SAASkd,gBAAgB,CAACC,OAAe,EAAE9X,IAAY,EAAA;EACrD,IAAI8X,OAAO,KAAK,IAAI,EAAE;AACpB,IAAA,OAAO,IAAI,CAAA;AACZ,GAAA;EACD,OAAOA,OAAO,CAAC7P,OAAO,CAAC,SAAS,aAAW8P,kBAAkB,CAAC/X,IAAI,CAAC,GAAU,SAAA,CAAA,CAAA;AAC/E,CAAA;AASA,SAASgY,WAAW,CAACC,IAAU,EAAA;AAC7B,EAAA,IAAQjY,IAAI,GAAiBiY,IAAI,CAAzBjY,IAAI;IAAEkY,IAAI,GAAWD,IAAI,CAAnBC,IAAI;IAAE9Z,IAAI,GAAK6Z,IAAI,CAAb7Z,IAAI,CAAA;AACxB,EAAA,OAAO,IAAI+Z,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAI;AACrC,IAAA,IAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,UAAU,EAAE,CAAA;IACtCF,MAAM,CAACG,OAAO,GAAGJ,MAAM,CAAA;AACvBC,IAAAA,MAAM,CAACI,MAAM,GAAG,UAACnd,KAAK,EAAI;AAAA,MAAA,IAAA,aAAA,CAAA;MACxB,IAAI,QAAA,CAAA,aAAA,GAAOA,KAAK,CAACyV,MAAM,kDAAZ,aAAc2H,CAAAA,MAAM,CAAK,KAAA,QAAQ,EAAE;AAC5CP,QAAAA,OAAO,CAAC;UACNN,OAAO,EAAED,gBAAgB,CAACtc,KAAK,CAACyV,MAAM,CAAC2H,MAAM,EAAE3Y,IAAI,CAAC;AACpDA,UAAAA,IAAI,EAAJA,IAAI;AACJkY,UAAAA,IAAI,EAAJA,IAAI;AACJ9Z,UAAAA,IAAI,EAAJA,IAAAA;AACD,SAAA,CAAC,CAAA;AACH,OAAA,MAAM;AACLga,QAAAA,OAAO,CAAC;AACNN,UAAAA,OAAO,EAAE,IAAI;AACb9X,UAAAA,IAAI,EAAJA,IAAI;AACJkY,UAAAA,IAAI,EAAJA,IAAI;AACJ9Z,UAAAA,IAAI,EAAJA,IAAAA;AACD,SAAA,CAAC,CAAA;AACH,OAAA;KACF,CAAA;AACDka,IAAAA,MAAM,CAACM,aAAa,CAACX,IAAI,CAAC,CAAA;AAC5B,GAAC,CAAC,CAAA;AACJ,CAAA;AAEA,SAASY,YAAY,CAACC,KAAe,EAAA;AACnC,EAAA,OAAOX,OAAO,CAACY,GAAG,CAAC7e,KAAK,CAAC8e,IAAI,CAACF,KAAK,CAAC,CAAC1e,GAAG,CAAC4d,WAAW,CAAC,CAAC,CAAA;AACxD,CAAA;AAEA,SAASiB,SAAS,CAMjB,IAAA,EAAA;EAAA,IALCC,SAAS,QAATA,SAAS;AACTpe,IAAAA,QAAQ,QAARA,QAAQ,CAAA;AAKR,EAAA,IAAIoe,SAAS,CAACjb,MAAM,KAAK,CAAC,EAAE;AAC1B,IAAA,OAAO,IAAI,CAAA;AACZ,GAAA;AACD,EAAA,IAAQc,eAAe,GAAKjE,QAAQ,CAA5BiE,eAAe,CAAA;EACvB,OACEK,GAAA,CAAA,IAAA,EAAA;AAAIyC,IAAAA,SAAS,EAAC,WAAW;IACtBiC,QAAA,EAAAoV,SAAS,CAAC9e,GAAG,CAAC,UAAC+e,QAAQ,EAAE7e,GAAG,EAAI;AAC/B,MAAA,IAAQ0F,IAAI,GAAiBmZ,QAAQ,CAA7BnZ,IAAI;QAAEkY,IAAI,GAAWiB,QAAQ,CAAvBjB,IAAI;QAAE9Z,IAAI,GAAK+a,QAAQ,CAAjB/a,IAAI,CAAA;MACxB,OACEgB,GACE,CAAA,IAAA,EAAA;AAAA0E,QAAAA,QAAA,EAAA1E,GAAA,CAACoU,QAAQ,EAAA;AAAA1P,UAAAA,QAAA,EAAE/E,eAAe,CAACO,kBAAkB,CAAC2Z,SAAS,EAAE,CAACjZ,IAAI,EAAE5B,IAAI,EAAE4I,MAAM,CAACkR,IAAI,CAAC,CAAC,CAAA;SAAC,CAAA;OAD7E,EAAA5d,GAAG,CAEP,CAAA;KAER,CAAA;AACE,GAAA,CAAA,CAAA;AAET,CAAA;AAEA,SAAS8e,eAAe,CAACC,QAAkB,EAAA;AACzC,EAAA,OAAOA,QAAQ,CACZ/c,MAAM,CAAC,UAACwb,OAAO,EAAA;AAAA,IAAA,OAAKA,OAAO,CAAA;AAAA,GAAA,CAAC,CAC5B1d,GAAG,CAAC,UAAC0d,OAAO,EAAI;IACf,IAAuBwB,cAAAA,GAAAA,aAAa,CAACxB,OAAO,CAAC;AAArCyB,MAAAA,IAAI,kBAAJA,IAAI;AAAEvZ,MAAAA,IAAI,kBAAJA,IAAI,CAAA;IAClB,OAAO;AACLA,MAAAA,IAAI,EAAEA,IAAI;MACVkY,IAAI,EAAEqB,IAAI,CAACrB,IAAI;MACf9Z,IAAI,EAAEmb,IAAI,CAACnb,IAAAA;KACZ,CAAA;AACH,GAAC,CAAC,CAAA;AACN,CAAA;AAEA;;;AAGG;AACH,SAASob,UAAU,CACjB7e,KAA2B,EAAA;AAE3B,EAAA,IAAQsF,QAAQ,GAA6DtF,KAAK,CAA1EsF,QAAQ;IAAEC,QAAQ,GAAmDvF,KAAK,CAAhEuF,QAAQ;IAAEqC,QAAQ,GAAyC5H,KAAK,CAAtD4H,QAAQ;IAAE1G,QAAQ,GAA+BlB,KAAK,CAA5CkB,QAAQ;IAAEsB,KAAK,GAAwBxC,KAAK,CAAlCwC,KAAK;IAAEgF,OAAO,GAAexH,KAAK,CAA3BwH,OAAO;IAAErH,QAAQ,GAAKH,KAAK,CAAlBG,QAAQ,CAAA;EACxE,IAAMyV,iBAAiB,GAAGpR,WAAW,CAA+B,mBAAmB,EAAErE,QAAQ,EAAEqH,OAAO,CAAC,CAAA;EAC3G,IAAMsX,kBAAkB,GAAGC,OAAO,CAChC,YAAA;AAAA,IAAA,OAAOxf,KAAK,CAACC,OAAO,CAACgD,KAAK,CAAC,GAAGic,eAAe,CAACjc,KAAK,CAAC,GAAGic,eAAe,CAAC,CAACjc,KAAK,CAAC,CAAC,CAAA;AAAA,GAAC,EAChF,CAACA,KAAK,CAAC,CACR,CAAA;EACD,IAAkCoK,SAAAA,GAAAA,QAAQ,CAAiBkS,kBAAkB,CAAC;IAAvEP,SAAS,GAAA,SAAA,CAAA,CAAA,CAAA;IAAES,YAAY,GAAA,SAAA,CAAA,CAAA,CAAA,CAAA;AAE9B,EAAA,IAAMhS,YAAY,GAAGC,WAAW,CAC9B,UAACrM,KAAoC,EAAI;AACvC,IAAA,IAAI,CAACA,KAAK,CAACyV,MAAM,CAAC8H,KAAK,EAAE;AACvB,MAAA,OAAA;AACD,KAAA;AACDD,IAAAA,YAAY,CAACtd,KAAK,CAACyV,MAAM,CAAC8H,KAAK,CAAC,CAACc,IAAI,CAAC,UAACC,cAAc,EAAI;MACvDF,YAAY,CAACE,cAAc,CAAC,CAAA;AAC5B,MAAA,IAAMC,QAAQ,GAAGD,cAAc,CAACzf,GAAG,CAAC,UAAC+e,QAAQ,EAAA;QAAA,OAAKA,QAAQ,CAACrB,OAAO,CAAA;OAAC,CAAA,CAAA;AACnE,MAAA,IAAIvV,QAAQ,EAAE;QACZ1G,QAAQ,CAACie,QAAQ,CAAC,CAAA;AACnB,OAAA,MAAM;AACLje,QAAAA,QAAQ,CAACie,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;AACtB,OAAA;AACH,KAAC,CAAC,CAAA;AACJ,GAAC,EACD,CAACvX,QAAQ,EAAE1G,QAAQ,CAAC,CACrB,CAAA;EAED,OACEoL,IACE,CAAA,KAAA,EAAA;AAAAnD,IAAAA,QAAA,EAAA,CAAA1E,GAAA,CAACmR,iBAAiB,eACZ5V,KAAK,EAAA;MACTsF,QAAQ,EAAEA,QAAQ,IAAIC,QAAQ;AAC9B9B,MAAAA,IAAI,EAAC,MAAM;AACXoS,MAAAA,gBAAgB,EAAE7I,YAAY;AAC9BxK,MAAAA,KAAK,EAAC,EAAE;MACR4c,MAAM,EAAE5X,OAAO,CAAC4X,MAAM,GAAG/S,MAAM,CAAC7E,OAAO,CAAC4X,MAAM,CAAC,GAAGrc,SAAAA;AAAS,KAAA,CAAA,CAC3D,EACF0B,GAAA,CAAC6Z,SAAS,EAAA;AAAUC,MAAAA,SAAS,EAAEA,SAAS;AAAEpe,MAAAA,QAAQ,EAAEA,QAAAA;AAAQ,KAAA,CAAI,CAAA;AAC5D,GAAA,CAAA,CAAA;AAEV;;AC3IA;;;;AAIG;AACH,SAASkf,YAAY,CAGE,IAAA,EAAA;EAAA,IAFrB5c,EAAE,QAAFA,EAAE;AACFD,IAAAA,KAAK,QAALA,KAAK,CAAA;EAEL,OAAOiC,GAAO,CAAA,OAAA,EAAA;AAAAhB,IAAAA,IAAI,EAAC,QAAQ;AAAChB,IAAAA,EAAE,EAAEA,EAAE;AAAE4C,IAAAA,IAAI,EAAE5C,EAAE;AAAED,IAAAA,KAAK,EAAE,OAAOA,KAAK,KAAK,WAAW,GAAG,EAAE,GAAGA,KAAAA;AAAK,GAAA,CAAI,CAAA;AACpG;;ACVA;;;AAGG;AACqB,SAAA8c,cAAc,CAIpCtf,KAA2B,EAAA;AAC3B,EAAA,IAAQwH,OAAO,GAAexH,KAAK,CAA3BwH,OAAO;IAAErH,QAAQ,GAAKH,KAAK,CAAlBG,QAAQ,CAAA;EACzB,IAAMyV,iBAAiB,GAAGpR,WAAW,CAA+B,mBAAmB,EAAErE,QAAQ,EAAEqH,OAAO,CAAC,CAAA;EAC3G,OAAO/C,GAAA,CAACmR,iBAAiB,EAAA,QAAA,CAAA;AAACnS,IAAAA,IAAI,EAAC,UAAA;AAAU,GAAA,EAAKzD,KAAK,CAAI,CAAA,CAAA;AACzD;;ACFA;;;;AAIG;AACH,SAASuf,WAAW,CAWG,IAAA,EAAA;EAAA,IAVrB/X,OAAO,QAAPA,OAAO;AACPhF,IAAAA,KAAK,QAALA,KAAK;AACLiD,IAAAA,QAAQ,QAARA,QAAQ;AACRH,IAAAA,QAAQ,QAARA,QAAQ;AACRC,IAAAA,QAAQ,QAARA,QAAQ;AAAA,IAAA,cAAA,GAAA,IAAA,CACRC,SAAS;AAATA,IAAAA,SAAS,+BAAG,KAAK,GAAA,cAAA;AACjBE,IAAAA,MAAM,QAANA,MAAM;AACNC,IAAAA,OAAO,QAAPA,OAAO;AACPzE,IAAAA,QAAQ,QAARA,QAAQ;AACRuB,IAAAA,EAAE,QAAFA,EAAE,CAAA;AAEF;EACA,IAAM4C,IAAI,GAAGma,IAAI,CAACC,MAAM,EAAE,CAACC,QAAQ,EAAE,CAAA;AACrC,EAAA,IAAQ5X,WAAW,GAAuCN,OAAO,CAAzDM,WAAW;IAAEoU,YAAY,GAAyB1U,OAAO,CAA5C0U,YAAY;IAAED,MAAM,GAAiBzU,OAAO,CAA9ByU,MAAM;IAAE3F,UAAU,GAAK9O,OAAO,CAAtB8O,UAAU,CAAA;EAErD,IAAMwF,UAAU,GAAG7O,WAAW,CAC5B,UAAA,KAAA,EAAA;AAAA,IAAA,IAAazK,KAAK,GAAA,KAAA,CAAf6T,MAAM,CAAI7T,KAAK,CAAA;AAAA,IAAA,OAChBkD,MAAM,CAACjD,EAAE,EAAE2Z,wBAAwB,CAAI5Z,KAAK,EAAEsF,WAAW,EAAEwO,UAAU,CAAC,CAAC,CAAA;AAAA,GAAA,EACzE,CAAC5Q,MAAM,EAAEjD,EAAE,CAAC,CACb,CAAA;EAED,IAAMsZ,WAAW,GAAG9O,WAAW,CAC7B,UAAA,KAAA,EAAA;AAAA,IAAA,IAAazK,KAAK,GAAA,KAAA,CAAf6T,MAAM,CAAI7T,KAAK,CAAA;AAAA,IAAA,OAChBmD,OAAO,CAAClD,EAAE,EAAE2Z,wBAAwB,CAAI5Z,KAAK,EAAEsF,WAAW,EAAEwO,UAAU,CAAC,CAAC,CAAA;AAAA,GAAA,EAC1E,CAAC3Q,OAAO,EAAElD,EAAE,CAAC,CACd,CAAA;EAED,OACEgC,GAAA,CAAA,KAAA,EAAA;AAAKyC,IAAAA,SAAS,EAAC,mBAAmB;AAACzE,IAAAA,EAAE,EAAEA,EAAE;cACtClD,KAAK,CAACC,OAAO,CAACsI,WAAW,CAAC,IACzBA,WAAW,CAACrI,GAAG,CAAC,UAACwK,MAAM,EAAE1I,CAAC,EAAI;MAC5B,IAAMsa,OAAO,GAAGQ,qBAAqB,CAAIpS,MAAM,CAACzH,KAAK,EAAEA,KAAK,CAAC,CAAA;AAC7D,MAAA,IAAM8Z,YAAY,GAAG/c,KAAK,CAACC,OAAO,CAAC0c,YAAY,CAAC,IAAIA,YAAY,CAAChN,OAAO,CAACjF,MAAM,CAACzH,KAAK,CAAC,KAAK,CAAC,CAAC,CAAA;MAC7F,IAAM+Z,WAAW,GAAGjX,QAAQ,IAAIgX,YAAY,IAAI/W,QAAQ,GAAG,UAAU,GAAG,EAAE,CAAA;MAE1E,IAAMyH,YAAY,GAAG,SAAfA,YAAY,GAAA;AAAA,QAAA,OAAS9L,QAAQ,CAAC+I,MAAM,CAACzH,KAAK,CAAC,CAAA;AAAA,OAAA,CAAA;AAEjD,MAAA,IAAMmd,KAAK,GACTrT,IACE,CAAA,MAAA,EAAA;AAAAnD,QAAAA,QAAA,EAAA,CAAA1E,GAAA,CAAA,OAAA,EAAA;AACEhB,UAAAA,IAAI,EAAC,OAAO;AACZhB,UAAAA,EAAE,EAAEka,QAAQ,CAACla,EAAE,EAAElB,CAAC,CAAC;AACnBsa,UAAAA,OAAO,EAAEA,OAAO;AAChBxW,UAAAA,IAAI,EAAEA,IAAI;AACVI,UAAAA,QAAQ,EAAEA,QAAQ;AAClBjD,UAAAA,KAAK,EAAE6J,MAAM,CAAC9K,CAAC,CAAC;AAChB+D,UAAAA,QAAQ,EAAEA,QAAQ,IAAIgX,YAAY,IAAI/W,QAAQ;AAC9CkR,UAAAA,SAAS,EAAEjR,SAAS,IAAIjE,CAAC,KAAK,CAAC;AAC/BL,UAAAA,QAAQ,EAAE8L,YAAY;AACtBtH,UAAAA,MAAM,EAAEoW,UAAU;AAClBnW,UAAAA,OAAO,EAAEoW,WAAW;UACF,kBAAA,EAAAlF,kBAAkB,CAAIpU,EAAE,CAAA;AAC1C,SAAA,CAAA,EACFgC;oBAAOwF,MAAM,CAACpC,KAAAA;AAAa,SAAA,CAAA,CAAA;AAAA,OAAA,CAE9B,CAAA;AAED,MAAA,OAAOoU,MAAM,GACXxX,GAAe,CAAA,OAAA,EAAA;AAAAyC,QAAAA,SAAS,oBAAkBqV,WAAa;AAAApT,QAAAA,QAAA,EACpDwW,KAAAA;AAAK,OAAA,EADIpe,CAAC,CAEL,GAERkD,GAAA,CAAA,KAAA,EAAA;AAAayC,QAAAA,SAAS,aAAWqV,WAAa;AAC5CpT,QAAAA,QAAA,EAAA1E,GAAA,CAAA,OAAA,EAAA;AAAA0E,UAAAA,QAAA,EAAQwW,KAAAA;SAAc,CAAA;OAAA,EADdpe,CAAC,CAGZ,CAAA;KACF,CAAA;AACC,GAAA,CAAA,CAAA;AAEV;;ACrFA;;;;AAIG;AACqB,SAAAqe,WAAW,CACjC5f,KAA2B,EAAA;AAE3B,EAAA,IACEwC,KAAK,GAIHxC,KAAK,CAJPwC,KAAK;AAEUoT,IAAAA,iBAAiB,GAE9B5V,KAAK,CAHPG,QAAQ,CACNsU,SAAS,CAAImB,iBAAiB,CAAA;EAGlC,OACEtJ,IAAK,CAAA,KAAA,EAAA;AAAApF,IAAAA,SAAS,EAAC,qBAAqB;eAClCzC,GAAC,CAAAmR,iBAAiB,EAAA,QAAA,CAAA;AAACnS,MAAAA,IAAI,EAAC,OAAA;AAAO,KAAA,EAAKzD,KAAK,CAAI,CAAA,EAC7CyE,GAAA,CAAA,MAAA,EAAA;AAAMyC,MAAAA,SAAS,EAAC,YAAY;AAAAiC,MAAAA,QAAA,EAAE3G,KAAAA;AAAK,KAAA,CAAQ,CAAA;AACvC,GAAA,CAAA,CAAA;AAEV;;ACXA,SAASqd,QAAQ,CAACjf,KAAwC,EAAEgH,QAAiB,EAAA;AAC3E,EAAA,IAAIA,QAAQ,EAAE;AACZ,IAAA,OAAOrI,KAAK,CAAC8e,IAAI,CAAEzd,KAAK,CAACyV,MAA4B,CAAC7O,OAAO,CAAC,CAC3DnF,KAAK,EAAE,CACPV,MAAM,CAAC,UAACuI,CAAC,EAAA;MAAA,OAAKA,CAAC,CAAC4V,QAAQ,CAAA;AAAA,KAAA,CAAC,CACzBrgB,GAAG,CAAC,UAACyK,CAAC,EAAA;MAAA,OAAKA,CAAC,CAAC1H,KAAK,CAAA;KAAC,CAAA,CAAA;AACvB,GAAA;AACD,EAAA,OAAQ5B,KAAK,CAACyV,MAA4B,CAAC7T,KAAK,CAAA;AAClD,CAAA;AAEA;;;;AAIG;AACH,SAASiY,YAAY,CAcE,IAAA,EAAA;EAAA,IAbrBva,MAAM,QAANA,MAAM;AACNuC,IAAAA,EAAE,QAAFA,EAAE;AACF+E,IAAAA,OAAO,QAAPA,OAAO;AACPhF,IAAAA,KAAK,QAALA,KAAK;AACLiD,IAAAA,QAAQ,QAARA,QAAQ;AACRH,IAAAA,QAAQ,QAARA,QAAQ;AACRC,IAAAA,QAAQ,QAARA,QAAQ;AAAA,IAAA,aAAA,GAAA,IAAA,CACRqC,QAAQ;AAARA,IAAAA,QAAQ,8BAAG,KAAK,GAAA,aAAA;AAAA,IAAA,cAAA,GAAA,IAAA,CAChBpC,SAAS;AAATA,IAAAA,SAAS,+BAAG,KAAK,GAAA,cAAA;AACjBtE,IAAAA,QAAQ,QAARA,QAAQ;AACRwE,IAAAA,MAAM,QAANA,MAAM;AACNC,IAAAA,OAAO,QAAPA,OAAO;AACP0B,IAAAA,WAAW,QAAXA,WAAW,CAAA;AAEX,EAAA,IAAQS,WAAW,GAA4CN,OAAO,CAA9DM,WAAW;IAAEoU,YAAY,GAA8B1U,OAAO,CAAjD0U,YAAY;IAAc6D,WAAW,GAAKvY,OAAO,CAAnC8O,UAAU,CAAA;AAC7C,EAAA,IAAMA,UAAU,GAAG1O,QAAQ,GAAG,EAAE,GAAG,EAAE,CAAA;AAErC,EAAA,IAAMmU,WAAW,GAAG9O,WAAW,CAC7B,UAACrM,KAAoC,EAAI;AACvC,IAAA,IAAMue,QAAQ,GAAGU,QAAQ,CAACjf,KAAK,EAAEgH,QAAQ,CAAC,CAAA;AAC1C,IAAA,OAAOjC,OAAO,CAAClD,EAAE,EAAE2Z,wBAAwB,CAAI+C,QAAQ,EAAErX,WAAW,EAAEiY,WAAW,CAAC,CAAC,CAAA;AACrF,GAAC,EACD,CAACpa,OAAO,EAAElD,EAAE,EAAEvC,MAAM,EAAE0H,QAAQ,EAAEJ,OAAO,CAAC,CACzC,CAAA;AAED,EAAA,IAAMsU,UAAU,GAAG7O,WAAW,CAC5B,UAACrM,KAAoC,EAAI;AACvC,IAAA,IAAMue,QAAQ,GAAGU,QAAQ,CAACjf,KAAK,EAAEgH,QAAQ,CAAC,CAAA;AAC1C,IAAA,OAAOlC,MAAM,CAACjD,EAAE,EAAE2Z,wBAAwB,CAAI+C,QAAQ,EAAErX,WAAW,EAAEiY,WAAW,CAAC,CAAC,CAAA;AACpF,GAAC,EACD,CAACra,MAAM,EAAEjD,EAAE,EAAEvC,MAAM,EAAE0H,QAAQ,EAAEJ,OAAO,CAAC,CACxC,CAAA;AAED,EAAA,IAAMwF,YAAY,GAAGC,WAAW,CAC9B,UAACrM,KAAqC,EAAI;AACxC,IAAA,IAAMue,QAAQ,GAAGU,QAAQ,CAACjf,KAAK,EAAEgH,QAAQ,CAAC,CAAA;IAC1C,OAAO1G,QAAQ,CAACkb,wBAAwB,CAAI+C,QAAQ,EAAErX,WAAW,EAAEiY,WAAW,CAAC,CAAC,CAAA;GACjF,EACD,CAAC7e,QAAQ,EAAEhB,MAAM,EAAE0H,QAAQ,EAAEJ,OAAO,CAAC,CACtC,CAAA;EAED,IAAMwY,eAAe,GAAGC,wBAAwB,CAAIzd,KAAK,EAAEsF,WAAW,EAAEF,QAAQ,CAAC,CAAA;EAEjF,OACE0E,IACE,CAAA,QAAA,EAAA;AAAA7J,IAAAA,EAAE,EAAEA,EAAE;AACN4C,IAAAA,IAAI,EAAE5C,EAAE;AACRmF,IAAAA,QAAQ,EAAEA,QAAQ;AAClBV,IAAAA,SAAS,EAAC,cAAc;IACxB1E,KAAK,EAAE,OAAOwd,eAAe,KAAK,WAAW,GAAG1J,UAAU,GAAG0J,eAAe;AAC5Eva,IAAAA,QAAQ,EAAEA,QAAQ;IAClBH,QAAQ,EAAEA,QAAQ,IAAIC,QAAQ;AAC9BkR,IAAAA,SAAS,EAAEjR,SAAS;AACpBE,IAAAA,MAAM,EAAEoW,UAAU;AAClBnW,IAAAA,OAAO,EAAEoW,WAAW;AACpB7a,IAAAA,QAAQ,EAAE8L,YAAY;AAAA,IAAA,kBAAA,EACJ6J,kBAAkB,CAAIpU,EAAE,CAAC;AAE1C0G,IAAAA,QAAA,EAAA,CAAA,CAACvB,QAAQ,IAAI1H,MAAM,CAAQ,SAAA,CAAA,KAAK6C,SAAS,IAAI0B;AAAQjC,MAAAA,KAAK,EAAC,EAAE;AAAE2G,MAAAA,QAAA,EAAA9B,WAAAA;MAAqB,EACpF9H,KAAK,CAACC,OAAO,CAACsI,WAAW,CAAC,IACzBA,WAAW,CAACrI,GAAG,CAAC,UAAA,KAAA,EAAmB8B,CAAC,EAAI;MAAA,IAArBiB,KAAK,SAALA,KAAK;AAAEqF,QAAAA,KAAK,SAALA,KAAK,CAAA;AAC7B,MAAA,IAAMvC,QAAQ,GAAG4W,YAAY,IAAIA,YAAY,CAAChN,OAAO,CAAC1M,KAAK,CAAC,KAAK,CAAC,CAAC,CAAA;MACnE,OACEiC,GAAgB,CAAA,QAAA,EAAA;AAAAjC,QAAAA,KAAK,EAAE6J,MAAM,CAAC9K,CAAC,CAAC;AAAE+D,QAAAA,QAAQ,EAAEA,QAAQ;AACjD6D,QAAAA,QAAA,EAAAtB,KAAAA;SADUtG,CAAC,CAEL,CAAA;AAEb,KAAC,CAAC,CAAA;AACG,GAAA,CAAA,CAAA;AAEb;;AC9FA;;;AAGG;AACH,SAAS2e,cAAc,CAYA,IAAA,EAAA;EAAA,IAXrBzd,EAAE,QAAFA,EAAE;AAAA,IAAA,YAAA,GAAA,IAAA,CACF+E,OAAO;IAAPA,OAAO,GAAA,YAAA,KAAA,KAAA,CAAA,GAAG,EAAE,GAAA,YAAA;AACZH,IAAAA,WAAW,QAAXA,WAAW;AACX7E,IAAAA,KAAK,QAALA,KAAK;AACLiD,IAAAA,QAAQ,QAARA,QAAQ;AACRH,IAAAA,QAAQ,QAARA,QAAQ;AACRC,IAAAA,QAAQ,QAARA,QAAQ;AAAA,IAAA,cAAA,GAAA,IAAA,CACRC,SAAS;AAATA,IAAAA,SAAS,+BAAG,KAAK,GAAA,cAAA;AACjBtE,IAAAA,QAAQ,QAARA,QAAQ;AACRwE,IAAAA,MAAM,QAANA,MAAM;AACNC,IAAAA,OAAO,QAAPA,OAAO,CAAA;EAEP,IAAMqH,YAAY,GAAGC,WAAW,CAC9B,UAAA,KAAA,EAAA;AAAA,IAAA,IAAazK,KAAK,GAAA,KAAA,CAAf6T,MAAM,CAAI7T,KAAK,CAAA;IAAA,OAA2CtB,QAAQ,CAACsB,KAAK,KAAK,EAAE,GAAGgF,OAAO,CAAC8O,UAAU,GAAG9T,KAAK,CAAC,CAAA;AAAA,GAAA,EAChH,CAACtB,QAAQ,EAAEsG,OAAO,CAAC8O,UAAU,CAAC,CAC/B,CAAA;EAED,IAAMwF,UAAU,GAAG7O,WAAW,CAC5B,UAAA,KAAA,EAAA;AAAA,IAAA,IAAazK,KAAK,GAAA,KAAA,CAAf6T,MAAM,CAAI7T,KAAK,CAAA;AAAA,IAAA,OAA0CkD,MAAM,CAACjD,EAAE,EAAED,KAAK,CAAC,CAAA;AAAA,GAAA,EAC7E,CAACkD,MAAM,EAAEjD,EAAE,CAAC,CACb,CAAA;EAED,IAAMsZ,WAAW,GAAG9O,WAAW,CAC7B,UAAA,KAAA,EAAA;AAAA,IAAA,IAAazK,KAAK,GAAA,KAAA,CAAf6T,MAAM,CAAI7T,KAAK,CAAA;AAAA,IAAA,OAA0CmD,OAAO,CAAClD,EAAE,EAAED,KAAK,CAAC,CAAA;AAAA,GAAA,EAC9E,CAACC,EAAE,EAAEkD,OAAO,CAAC,CACd,CAAA;EAED,OACElB,GAAA,CAAA,UAAA,EAAA;AACEhC,IAAAA,EAAE,EAAEA,EAAE;AACN4C,IAAAA,IAAI,EAAE5C,EAAE;AACRyE,IAAAA,SAAS,EAAC,cAAc;AACxB1E,IAAAA,KAAK,EAAEA,KAAK,GAAGA,KAAK,GAAG,EAAE;AACzB6E,IAAAA,WAAW,EAAEA,WAAW;AACxB5B,IAAAA,QAAQ,EAAEA,QAAQ;AAClBH,IAAAA,QAAQ,EAAEA,QAAQ;AAClB6M,IAAAA,QAAQ,EAAE5M,QAAQ;AAClBkR,IAAAA,SAAS,EAAEjR,SAAS;IACpB2a,IAAI,EAAE3Y,OAAO,CAAC2Y,IAAI;AAClBza,IAAAA,MAAM,EAAEoW,UAAU;AAClBnW,IAAAA,OAAO,EAAEoW,WAAW;AACpB7a,IAAAA,QAAQ,EAAE8L,YAAY;IAAA,kBAAA,EACJ6J,kBAAkB,CAAIpU,EAAE,CAAA;AAAC,GAAA,CAC3C,CAAA;AAEN,CAAA;AAEAyd,cAAc,CAACE,YAAY,GAAG;AAC5B5a,EAAAA,SAAS,EAAE,KAAK;AAChBgC,EAAAA,OAAO,EAAE,EAAE;CACZ;;ACxDD;;;AAGG;AACqB,SAAA6Y,UAAU,CAChCrgB,KAA2B,EAAA;AAE3B,EAAA,IAAQwH,OAAO,GAAexH,KAAK,CAA3BwH,OAAO;IAAErH,QAAQ,GAAKH,KAAK,CAAlBG,QAAQ,CAAA;EACzB,IAAMyV,iBAAiB,GAAGpR,WAAW,CAA+B,mBAAmB,EAAErE,QAAQ,EAAEqH,OAAO,CAAC,CAAA;AAC3G,EAAA,OAAO/C,GAAC,CAAAmR,iBAAiB,EAAA,QAAA,CAAA,EAAA,EAAK5V,KAAK,CAAI,CAAA,CAAA;AACzC;;ACVA;;;AAGG;AACqB,SAAAsgB,SAAS,CAC/BtgB,KAA2B,EAAA;AAE3B,EAAA,IAAQwH,OAAO,GAAexH,KAAK,CAA3BwH,OAAO;IAAErH,QAAQ,GAAKH,KAAK,CAAlBG,QAAQ,CAAA;EACzB,IAAMyV,iBAAiB,GAAGpR,WAAW,CAA+B,mBAAmB,EAAErE,QAAQ,EAAEqH,OAAO,CAAC,CAAA;EAC3G,OAAO/C,GAAA,CAACmR,iBAAiB,EAAA,QAAA,CAAA;AAACnS,IAAAA,IAAI,EAAC,KAAA;AAAK,GAAA,EAAKzD,KAAK,CAAI,CAAA,CAAA;AACpD;;ACVA;;;AAGG;AACqB,SAAAugB,YAAY,CAClCvgB,KAA2B,EAAA;AAE3B,EAAA,IAAQwH,OAAO,GAAexH,KAAK,CAA3BwH,OAAO;IAAErH,QAAQ,GAAKH,KAAK,CAAlBG,QAAQ,CAAA;EACzB,IAAMyV,iBAAiB,GAAGpR,WAAW,CAA+B,mBAAmB,EAAErE,QAAQ,EAAEqH,OAAO,CAAC,CAAA;EAC3G,OAAO/C,GAAA,CAACmR,iBAAiB,EAAA,QAAA,CAAA;AAACnS,IAAAA,IAAI,EAAC,QAAA;AAAQ,GAAA,EAAKzD,KAAK,CAAI,CAAA,CAAA;AACvD;;ACSA,SAASsH,OAAO,GAAA;EAKd,OAAO;AACLgY,IAAAA,cAAc,EAAdA,cAAc;AACdC,IAAAA,WAAW,EAAXA,WAAW;AACXgB,IAAAA,YAAY,EAAZA,YAAY;AACZX,IAAAA,WAAW,EAAXA,WAAW;AACXnF,IAAAA,YAAY,EAAZA,YAAY;AACZ4F,IAAAA,UAAU,EAAVA,UAAU;AACVxD,IAAAA,UAAU,EAAVA,UAAU;AACVC,IAAAA,cAAc,EAAdA,cAAc;AACdpC,IAAAA,aAAa,EAAbA,aAAa;AACbgB,IAAAA,iBAAiB,EAAjBA,iBAAiB;AACjBuB,IAAAA,WAAW,EAAXA,WAAW;AACXqD,IAAAA,SAAS,EAATA,SAAS;AACTJ,IAAAA,cAAc,EAAdA,cAAc;AACdb,IAAAA,YAAY,EAAZA,YAAY;AACZzC,IAAAA,WAAW,EAAXA,WAAW;AACXiC,IAAAA,UAAU,EAAVA,UAAU;AACVlD,IAAAA,cAAc,EAAdA,cAAc;AACdK,IAAAA,gBAAgB,EAAhBA,gBAAAA;GACD,CAAA;AACH;;ACxCA;;;AAGG;AACW,SAAUwE,kBAAkB,GAAA;EAKxC,OAAO;IACLnY,MAAM,EAAEA,MAAM,EAAW;IACzBoM,SAAS,EAAEA,SAAS,EAAW;IAC/BnN,OAAO,EAAEA,OAAO,EAAW;IAC3BmZ,UAAU,EAAE,EAAO;IACnBza,WAAW,EAAE,EAAO;AACpB5B,IAAAA,eAAe,EAAEsc,uBAAAA;GAClB,CAAA;AACH;;ACsNA;AAAA,IACqBC,IAInB,gBAAA,UAAA,UAAA,EAAA;AAAA,EAAA,cAAA,CAAA,IAAA,EAAA,UAAA,CAAA,CAAA;AACA;;AAEG;;AAGH;;;;;AAKG;AACH,EAAA,SAAA,IAAA,CAAY3gB,KAAyB,EAAA;AAAA,IAAA,IAAA,KAAA,CAAA;AACnC,IAAA,KAAA,GAAA,UAAA,CAAA,IAAA,CAAA,IAAA,EAAMA,KAAK,CAAC,IAAA,IAAA,CAAA;AAAC,IAAA,KAAA,CATf4gB,WAAW,GAAA,KAAA,CAAA,CAAA;AAAA,IAAA,KAAA,CAiLXC,eAAe,GAAG,UAACvhB,QAAuB,EAAE+I,MAAkB,EAAmB;AAC/E;MACA,IAAIA,MAAM,CAAC/E,MAAM,KAAK,CAAC,IAAI,OAAOhE,QAAQ,KAAK,QAAQ,EAAE;AACvD,QAAA,OAAOA,QAAQ,CAAA;AAChB,OAAA;AAED;AACA,MAAA,IAAM8a,IAAI,GAAsB0G,KAAK,CAACxhB,QAAQ,EAAE+I,MAA6B,CAAC,CAAA;AAC9E,MAAA,IAAI9I,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;QAC3B,OAAO0J,MAAM,CAACC,IAAI,CAACmR,IAAI,CAAC,CAAC3a,GAAG,CAAC,UAACE,GAAW,EAAA;UAAA,OAAKya,IAAI,CAACza,GAAG,CAAC,CAAA;SAAiB,CAAA,CAAA;AACzE,OAAA;AAED,MAAA,OAAOya,IAAS,CAAA;KACjB,CAAA;AAAA,IAAA,KAAA,CAOD2G,aAAa,GAAG,UAACC,UAAyB,EAAE1hB,QAAY,EAAgB;MACtE,IAAM2hB,WAAW,GAAG,SAAdA,WAAW,CAAIC,IAAuB,EAAEC,GAAA,EAAsBC,KAAoB,EAAQ;AAAA,QAAA,IAAlDD,GAAA,KAAA,KAAA,CAAA,EAAA;AAAAA,UAAAA,GAAA,GAAkB,EAAE,CAAA;AAAA,SAAA;AAAA,QAAA,IAAEC,KAAoB,KAAA,KAAA,CAAA,EAAA;UAApBA,KAAoB,GAAA,CAAC,EAAE,CAAC,CAAA;AAAA,SAAA;QAC1FpY,MAAM,CAACC,IAAI,CAACiY,IAAI,CAAC,CAACG,OAAO,CAAC,UAAC1hB,GAAW,EAAI;AACxC,UAAA,IAAI,OAAOuhB,IAAI,CAACvhB,GAAG,CAAC,KAAK,QAAQ,EAAE;AACjC,YAAA,IAAM2hB,QAAQ,GAAGF,KAAK,CAAC3hB,GAAG,CAAC,UAAC8hB,IAAI,EAAA;cAAA,OAASA,EAAAA,CAAAA,MAAAA,CAAAA,IAAI,GAAE5hB,GAAG,CAAA,CAAA,CAAA;AAAA,aAAC,CAAC,CAAA;AACpD;AACA,YAAA,IAAIuhB,IAAI,CAACvhB,GAAG,CAAC,CAAC6hB,8BAA8B,CAAC,IAAIN,IAAI,CAACvhB,GAAG,CAAC,CAAC8hB,QAAQ,CAAC,KAAK,EAAE,EAAE;cAC3EN,GAAG,CAACjd,IAAI,CAACgd,IAAI,CAACvhB,GAAG,CAAC,CAAC8hB,QAAQ,CAAC,CAAC,CAAA;AAC9B,aAAA,MAAM;cACLR,WAAW,CAACC,IAAI,CAACvhB,GAAG,CAAC,EAAEwhB,GAAG,EAAEG,QAAQ,CAAC,CAAA;AACtC,aAAA;AACF,WAAA,MAAM,IAAI3hB,GAAG,KAAK8hB,QAAQ,IAAIP,IAAI,CAACvhB,GAAG,CAAC,KAAK,EAAE,EAAE;AAC/CyhB,YAAAA,KAAK,CAACC,OAAO,CAAC,UAACE,IAAI,EAAI;AACrB,cAAA,IAAMG,SAAS,GAAGC,GAAI,CAACriB,QAAQ,EAAEiiB,IAAI,CAAC,CAAA;AACtC;AACA;cACA,IAAI,OAAOG,SAAS,KAAK,QAAQ,IAAIE,OAAQ,CAACF,SAAS,CAAC,EAAE;AACxDP,gBAAAA,GAAG,CAACjd,IAAI,CAACqd,IAAI,CAAC,CAAA;AACf,eAAA;AACH,aAAC,CAAC,CAAA;AACH,WAAA;AACH,SAAC,CAAC,CAAA;AACF,QAAA,OAAOJ,GAAG,CAAA;OACX,CAAA;MAED,OAAOF,WAAW,CAACD,UAAU,CAAC,CAAA;KAC/B,CAAA;IAAA,KAaD9f,CAAAA,QAAQ,GAAG,UAAC5B,QAAuB,EAAE+B,cAA+B,EAAEoB,EAAW,EAAI;AACnF,MAAA,IAAA,WAAA,GAAqF,MAAKzC,KAAK;AAAvF6hB,QAAAA,WAAW,eAAXA,WAAW;AAAEC,QAAAA,aAAa,eAAbA,aAAa;AAAEC,QAAAA,QAAQ,eAARA,QAAQ;AAAEC,QAAAA,UAAU,eAAVA,UAAU;AAAEC,QAAAA,YAAY,eAAZA,YAAY;AAAE/gB,QAAAA,QAAQ,eAARA,QAAQ,CAAA;AAChF,MAAA,IAAA,WAAA,GAAgC,MAAKE,KAAK;AAAlChB,QAAAA,WAAW,eAAXA,WAAW;AAAEF,QAAAA,MAAM,eAANA,MAAM,CAAA;MAC3B,IAAIgG,UAAQ,CAAC5G,QAAQ,CAAC,IAAIC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,EAAE;QACjD,IAAM+L,QAAQ,GAAG,KAAK6W,CAAAA,iBAAiB,CAAC,KAAKliB,CAAAA,KAAK,EAAEV,QAAQ,CAAC,CAAA;QAC7DA,QAAQ,GAAG+L,QAAQ,CAAC/L,QAAQ,CAAA;AAC7B,OAAA;AAED,MAAA,IAAM6iB,YAAY,GAAG,CAACH,UAAU,IAAIC,YAAY,CAAA;AAChD,MAAA,IAAI7gB,KAAK,GAAgC;AAAE9B,QAAAA,QAAQ,EAARA,QAAQ;AAAEY,QAAAA,MAAM,EAANA,MAAAA;OAAQ,CAAA;MAC7D,IAAIyC,WAAW,GAAGrD,QAAQ,CAAA;AAE1B,MAAA,IAAIwiB,aAAa,KAAK,IAAI,IAAIC,QAAQ,KAAK,IAAI,EAAE;QAC/C,IAAMK,eAAe,GAAGhiB,WAAW,CAACgG,cAAc,CAAClG,MAAM,EAAEZ,QAAQ,CAAC,CAAA;QACpE,IAAM0hB,UAAU,GAAG5gB,WAAW,CAACiiB,YAAY,CAACD,eAAe,EAAE,EAAE,EAAE9iB,QAAQ,CAAC,CAAA;QAE1E,IAAMgjB,UAAU,GAAG,KAAKvB,CAAAA,aAAa,CAACC,UAAU,EAAE1hB,QAAQ,CAAC,CAAA;AAE3DqD,QAAAA,WAAW,GAAG,KAAKke,CAAAA,eAAe,CAACvhB,QAAQ,EAAEgjB,UAAU,CAAC,CAAA;AACxDlhB,QAAAA,KAAK,GAAG;AACN9B,UAAAA,QAAQ,EAAEqD,WAAAA;SACX,CAAA;AACF,OAAA;AAED,MAAA,IAAIwf,YAAY,EAAE;AAChB,QAAA,IAAMI,gBAAgB,GAAG,KAAA,CAAKC,QAAQ,CAAC7f,WAAW,CAAC,CAAA;AACnD,QAAA,IAAIwQ,MAAM,GAAGoP,gBAAgB,CAACpP,MAAM,CAAA;AACpC,QAAA,IAAIhS,WAAW,GAAGohB,gBAAgB,CAACphB,WAAW,CAAA;QAC9C,IAAMshB,sBAAsB,GAAGtP,MAAM,CAAA;QACrC,IAAMuP,2BAA2B,GAAGvhB,WAAW,CAAA;AAC/C,QAAA,IAAI0gB,WAAW,EAAE;UACf,IAAMc,MAAM,GAAGviB,WAAW,CAACwiB,mBAAmB,CAACL,gBAAgB,EAAEV,WAAW,CAAC,CAAA;UAC7E1gB,WAAW,GAAGwhB,MAAM,CAACxhB,WAAW,CAAA;UAChCgS,MAAM,GAAGwP,MAAM,CAACxP,MAAM,CAAA;AACvB,SAAA;AACD/R,QAAAA,KAAK,GAAG;AACN9B,UAAAA,QAAQ,EAAEqD,WAAW;AACrBwQ,UAAAA,MAAM,EAANA,MAAM;AACNhS,UAAAA,WAAW,EAAXA,WAAW;AACXshB,UAAAA,sBAAsB,EAAtBA,sBAAsB;AACtBC,UAAAA,2BAA2B,EAA3BA,2BAAAA;SACD,CAAA;AACF,OAAA,MAAM,IAAI,CAACV,UAAU,IAAI3gB,cAAc,EAAE;AACxC,QAAA,IAAMF,YAAW,GAAG0gB,WAAW,GAC1B/P,YAAY,CAACzQ,cAAc,EAAEwgB,WAAW,EAAE,mBAAmB,CAAoB,GAClFxgB,cAAc,CAAA;AAClBD,QAAAA,KAAK,GAAG;AACN9B,UAAAA,QAAQ,EAAEqD,WAAW;AACrBxB,UAAAA,WAAW,EAAEA,YAAW;UACxBgS,MAAM,EAAE/S,WAAW,CAACyiB,YAAY,EAAE,CAACC,WAAW,CAAC3hB,YAAW,CAAA;SAC3D,CAAA;AACF,OAAA;MACD,KAAKU,CAAAA,QAAQ,CAACT,KAA2B,EAAE,YAAA;QAAA,OAAMF,QAAQ,IAAIA,QAAQ,CAAM,QAAA,CAAA,EAAA,EAAA,KAAA,CAAKE,KAAK,EAAKA,KAAK,CAAIqB,EAAAA,EAAE,CAAC,CAAA;OAAC,CAAA,CAAA;KACxG,CAAA;AAAA,IAAA,KAAA,CAQDiD,MAAM,GAAG,UAACjD,EAAU,EAAE2X,IAAS,EAAI;AACjC,MAAA,IAAQ1U,MAAM,GAAK,KAAK1F,CAAAA,KAAK,CAArB0F,MAAM,CAAA;AACd,MAAA,IAAIA,MAAM,EAAE;AACVA,QAAAA,MAAM,CAACjD,EAAE,EAAE2X,IAAI,CAAC,CAAA;AACjB,OAAA;KACF,CAAA;AAAA,IAAA,KAAA,CAQDzU,OAAO,GAAG,UAAClD,EAAU,EAAE2X,IAAS,EAAI;AAClC,MAAA,IAAQzU,OAAO,GAAK,KAAK3F,CAAAA,KAAK,CAAtB2F,OAAO,CAAA;AACf,MAAA,IAAIA,OAAO,EAAE;AACXA,QAAAA,OAAO,CAAClD,EAAE,EAAE2X,IAAI,CAAC,CAAA;AAClB,OAAA;KACF,CAAA;AAAA,IAAA,KAAA,CAUD2I,QAAQ,GAAG,UAACniB,KAAqB,EAAI;MACnCA,KAAK,CAACK,cAAc,EAAE,CAAA;AACtB,MAAA,IAAIL,KAAK,CAACyV,MAAM,KAAKzV,KAAK,CAACqB,aAAa,EAAE;AACxC,QAAA,OAAA;AACD,OAAA;MAEDrB,KAAK,CAACoiB,OAAO,EAAE,CAAA;AACf,MAAA,IAAA,YAAA,GAA6D,MAAKhjB,KAAK;AAA/D8hB,QAAAA,aAAa,gBAAbA,aAAa;AAAED,QAAAA,WAAW,gBAAXA,WAAW;AAAEG,QAAAA,UAAU,gBAAVA,UAAU;AAAEe,QAAAA,QAAQ,gBAARA,QAAQ,CAAA;AACxD,MAAA,IAAgBpgB,WAAW,GAAK,KAAKvB,CAAAA,KAAK,CAApC9B,QAAQ,CAAA;AACd,MAAA,IAAA,YAAA,GAAgC,MAAK8B,KAAK;AAAlClB,QAAAA,MAAM,gBAANA,MAAM;AAAEE,QAAAA,WAAW,gBAAXA,WAAW,CAAA;MAE3B,IAAI0hB,aAAa,KAAK,IAAI,EAAE;QAC1B,IAAMM,eAAe,GAAGhiB,WAAW,CAACgG,cAAc,CAAClG,MAAM,EAAEyC,WAAW,CAAC,CAAA;QACvE,IAAMqe,UAAU,GAAG5gB,WAAW,CAACiiB,YAAY,CAACD,eAAe,EAAE,EAAE,EAAEzf,WAAW,CAAC,CAAA;QAE7E,IAAM2f,UAAU,GAAG,KAAKvB,CAAAA,aAAa,CAACC,UAAU,EAAEre,WAAW,CAAC,CAAA;AAE9DA,QAAAA,WAAW,GAAG,KAAKke,CAAAA,eAAe,CAACle,WAAW,EAAE2f,UAAU,CAAC,CAAA;AAC5D,OAAA;AAED,MAAA,IAAIN,UAAU,IAAI,KAAKiB,CAAAA,YAAY,EAAE,EAAE;AACrC;AACA;AACA,QAAA,IAAM9hB,WAAW,GAAG0gB,WAAW,IAAI,EAAE,CAAA;AACrC,QAAA,IAAM1O,MAAM,GAAG0O,WAAW,GAAGzhB,WAAW,CAACyiB,YAAY,EAAE,CAACC,WAAW,CAACjB,WAAW,CAAC,GAAG,EAAE,CAAA;AACrF,QAAA,KAAA,CAAKhgB,QAAQ,CACX;AACEvC,UAAAA,QAAQ,EAAEqD,WAAW;AACrBwQ,UAAAA,MAAM,EAANA,MAAM;AACNhS,UAAAA,WAAW,EAAXA,WAAW;AACXshB,UAAAA,sBAAsB,EAAE,EAAE;AAC1BC,UAAAA,2BAA2B,EAAE,EAAE;AAChC,SAAA,EACD,YAAK;AACH,UAAA,IAAIK,QAAQ,EAAE;YACZA,QAAQ,CAAA,QAAA,CAAA,EAAA,EAAM,MAAK3hB,KAAK,EAAA;AAAE9B,cAAAA,QAAQ,EAAEqD,WAAW;AAAEugB,cAAAA,MAAM,EAAE,WAAA;AAAW,aAAA,CAAA,EAAItiB,KAAK,CAAC,CAAA;AAC/E,WAAA;AACH,SAAC,CACF,CAAA;AACF,OAAA;KACF,CAAA;AAlWC,IAAA,IAAI,CAACZ,KAAK,CAACmjB,SAAS,EAAE;AACpB,MAAA,MAAM,IAAInN,KAAK,CAAC,wDAAwD,CAAC,CAAA;AAC1E,KAAA;IAED,KAAK5U,CAAAA,KAAK,GAAG,KAAA,CAAK8gB,iBAAiB,CAACliB,KAAK,EAAEA,KAAK,CAACV,QAAQ,CAAC,CAAA;AAC1D,IAAA,IAAI,MAAKU,KAAK,CAACkB,QAAQ,IAAI,CAACoK,UAAU,CAAC,KAAA,CAAKlK,KAAK,CAAC9B,QAAQ,EAAE,KAAA,CAAKU,KAAK,CAACV,QAAQ,CAAC,EAAE;AAChF,MAAA,KAAA,CAAKU,KAAK,CAACkB,QAAQ,CAAC,KAAA,CAAKE,KAAK,CAAC,CAAA;AAChC,KAAA;IACD,KAAKwf,CAAAA,WAAW,gBAAGwC,SAAS,EAAE,CAAA;AAAC,IAAA,OAAA,KAAA,CAAA;AACjC,GAAA;AAEA;;;;;AAKG;AALH,EAAA,IAAA,MAAA,GAAA,IAAA,CAAA,SAAA,CAAA;AAAA,EAAA,MAAA,CAMAC,gCAAgC,GAAhC,SAAiCngB,gCAAAA,CAAAA,SAA6B,EAAA;IAC5D,IAAMogB,SAAS,GAAG,IAAI,CAACpB,iBAAiB,CAAChf,SAAS,EAAEA,SAAS,CAAC5D,QAAQ,CAAC,CAAA;AACvE,IAAA,IACE,CAACgM,UAAU,CAACgY,SAAS,CAAChkB,QAAQ,EAAE4D,SAAS,CAAC5D,QAAQ,CAAC,IACnD,CAACgM,UAAU,CAACgY,SAAS,CAAChkB,QAAQ,EAAE,IAAI,CAAC8B,KAAK,CAAC9B,QAAQ,CAAC,IACpD4D,SAAS,CAAChC,QAAQ,EAClB;AACAgC,MAAAA,SAAS,CAAChC,QAAQ,CAACoiB,SAAS,CAAC,CAAA;AAC9B,KAAA;AACD,IAAA,IAAI,CAACzhB,QAAQ,CAACyhB,SAAS,CAAC,CAAA;AAC1B,GAAA;AAEA;;;;;;;AAOG,MAPH;AAAA,EAAA,MAAA,CAQApB,iBAAiB,GAAjB,SAAA,iBAAA,CAAkBliB,KAAyB,EAAEujB,aAAiB,EAAA;AAC5D,IAAA,IAAMniB,KAAK,GAAuB,IAAI,CAACA,KAAK,IAAI,EAAE,CAAA;AAClD,IAAA,IAAMlB,MAAM,GAAG,QAAQ,IAAIF,KAAK,GAAGA,KAAK,CAACE,MAAM,GAAG,IAAI,CAACF,KAAK,CAACE,MAAM,CAAA;AACnE,IAAA,IAAM2D,QAAQ,GAAsB,CAAC,UAAU,IAAI7D,KAAK,GAAGA,KAAK,CAAC6D,QAAS,GAAG,IAAI,CAAC7D,KAAK,CAAC6D,QAAS,KAAK,EAAE,CAAA;AACxG,IAAA,IAAM2f,IAAI,GAAG,OAAOD,aAAa,KAAK,WAAW,CAAA;AACjD,IAAA,IAAMtB,YAAY,GAAG,cAAc,IAAIjiB,KAAK,GAAGA,KAAK,CAACiiB,YAAY,GAAG,IAAI,CAACjiB,KAAK,CAACiiB,YAAY,CAAA;IAC3F,IAAME,YAAY,GAAGqB,IAAI,IAAI,CAACxjB,KAAK,CAACgiB,UAAU,IAAIC,YAAY,CAAA;IAC9D,IAAMxB,UAAU,GAAGvgB,MAAM,CAAA;AACzB,IAAA,IAAIE,WAAW,GAA6BgB,KAAK,CAAChB,WAAW,CAAA;AAC7D,IAAA,IAAI,CAACA,WAAW,IAAIA,WAAW,CAACqjB,qBAAqB,CAACzjB,KAAK,CAACmjB,SAAS,EAAE1C,UAAU,CAAC,EAAE;MAClFrgB,WAAW,GAAGsjB,iBAAiB,CAAU1jB,KAAK,CAACmjB,SAAS,EAAE1C,UAAU,CAAC,CAAA;AACtE,KAAA;IACD,IAAMnhB,QAAQ,GAAMc,WAAW,CAACM,mBAAmB,CAACR,MAAM,EAAEqjB,aAAa,CAAM,CAAA;IAC/E,IAAMnB,eAAe,GAAGhiB,WAAW,CAACgG,cAAc,CAAClG,MAAM,EAAEZ,QAAQ,CAAC,CAAA;AAEpE,IAAA,IAAMqkB,gBAAgB,GAAG,SAAnBA,gBAAgB,GAA2B;MAC/C,IAAI3jB,KAAK,CAACgiB,UAAU,EAAE;QACpB,OAAO;AAAE7O,UAAAA,MAAM,EAAE,EAAE;AAAEhS,UAAAA,WAAW,EAAE,EAAE;SAAE,CAAA;AACvC,OAAA,MAAM,IAAI,CAACnB,KAAK,CAACiiB,YAAY,EAAE;QAC9B,OAAO;AACL9O,UAAAA,MAAM,EAAE/R,KAAK,CAACqhB,sBAAsB,IAAI,EAAE;AAC1CthB,UAAAA,WAAW,EAAEC,KAAK,CAACshB,2BAA2B,IAAI,EAAE;SACrD,CAAA;AACF,OAAA;MACD,OAAO;AACLvP,QAAAA,MAAM,EAAE/R,KAAK,CAAC+R,MAAM,IAAI,EAAE;AAC1BhS,QAAAA,WAAW,EAAEC,KAAK,CAACD,WAAW,IAAI,EAAE;OACrC,CAAA;KACF,CAAA;AAED,IAAA,IAAIgS,MAA6B,CAAA;AACjC,IAAA,IAAIhS,WAAuC,CAAA;AAC3C,IAAA,IAAIshB,sBAAsB,GAA0BrhB,KAAK,CAACqhB,sBAAsB,CAAA;AAChF,IAAA,IAAIC,2BAA2B,GAAmBthB,KAAK,CAACshB,2BAA2B,CAAA;AACnF,IAAA,IAAIP,YAAY,EAAE;MAChB,IAAMI,gBAAgB,GAAG,IAAI,CAACC,QAAQ,CAACljB,QAAQ,EAAEY,MAAM,EAAEE,WAAW,CAAC,CAAA;MACrE+S,MAAM,GAAGoP,gBAAgB,CAACpP,MAAM,CAAA;MAChChS,WAAW,GAAGohB,gBAAgB,CAACphB,WAAW,CAAA;AAC1CshB,MAAAA,sBAAsB,GAAGtP,MAAM,CAAA;AAC/BuP,MAAAA,2BAA2B,GAAGvhB,WAAW,CAAA;AAC1C,KAAA,MAAM;MACL,IAAMyiB,aAAa,GAAGD,gBAAgB,EAAE,CAAA;MACxCxQ,MAAM,GAAGyQ,aAAa,CAACzQ,MAAM,CAAA;MAC7BhS,WAAW,GAAGyiB,aAAa,CAACziB,WAAW,CAAA;AACxC,KAAA;IACD,IAAInB,KAAK,CAAC6hB,WAAW,EAAE;AACrB,MAAA,IAAMc,MAAM,GAAGviB,WAAW,CAACwiB,mBAAmB,CAAC;AAAEzhB,QAAAA,WAAW,EAAXA,WAAW;AAAEgS,QAAAA,MAAM,EAANA,MAAAA;OAAQ,EAAEnT,KAAK,CAAC6hB,WAAW,CAAC,CAAA;MAC1F1gB,WAAW,GAAGwhB,MAAM,CAACxhB,WAAW,CAAA;MAChCgS,MAAM,GAAGwP,MAAM,CAACxP,MAAM,CAAA;AACvB,KAAA;IACD,IAAMrQ,QAAQ,GAAG1C,WAAW,CAACuG,UAAU,CACrCyb,eAAe,EACfve,QAAQ,CAAC,gBAAgB,CAAC,EAC1BvE,QAAQ,EACRU,KAAK,CAAC4F,QAAQ,EACd5F,KAAK,CAAC6F,WAAW,CAClB,CAAA;AACD,IAAA,IAAMyd,SAAS,GAAuB;AACpCljB,MAAAA,WAAW,EAAXA,WAAW;AACXF,MAAAA,MAAM,EAANA,MAAM;AACN2D,MAAAA,QAAQ,EAARA,QAAQ;AACRf,MAAAA,QAAQ,EAARA,QAAQ;AACRxD,MAAAA,QAAQ,EAARA,QAAQ;AACRkkB,MAAAA,IAAI,EAAJA,IAAI;AACJrQ,MAAAA,MAAM,EAANA,MAAM;AACNhS,MAAAA,WAAW,EAAXA,WAAW;AACXshB,MAAAA,sBAAsB,EAAtBA,sBAAsB;AACtBC,MAAAA,2BAA2B,EAA3BA,2BAAAA;KACD,CAAA;AACD,IAAA,OAAOY,SAAS,CAAA;AAClB,GAAA;AAEA;;;;;AAKG,MALH;AAAA,EAAA,MAAA,CAMAtP,qBAAqB,GAArB,SAAA,qBAAA,CAAsB9Q,SAA6B,EAAEogB,SAA6B,EAAA;AAChF,IAAA,OAAOO,YAAY,CAAC,IAAI,EAAE3gB,SAAS,EAAEogB,SAAS,CAAC,CAAA;AACjD,GAAA;AAEA;;;;;;AAMG,MANH;EAAA,MAOAd,CAAAA,QAAQ,GAAR,SACEljB,QAAAA,CAAAA,QAAuB,EACvBY,MAAM,EACN4jB,cAAyC,EAAA;AAAA,IAAA,IADzC5jB,MAAM,KAAA,KAAA,CAAA,EAAA;AAANA,MAAAA,MAAM,GAAG,IAAI,CAACF,KAAK,CAACE,MAAM,CAAA;AAAA,KAAA;IAG1B,IAAME,WAAW,GAAG0jB,cAAc,GAAGA,cAAc,GAAG,IAAI,CAAC1iB,KAAK,CAAChB,WAAW,CAAA;IAC5E,IAAsD,YAAA,GAAA,IAAI,CAACJ,KAAK;AAAxD+jB,MAAAA,cAAc,gBAAdA,cAAc;AAAEC,MAAAA,eAAe,gBAAfA,eAAe;AAAEngB,MAAAA,QAAQ,gBAARA,QAAQ,CAAA;IACjD,IAAMogB,cAAc,GAAG7jB,WAAW,CAACgG,cAAc,CAAClG,MAAM,EAAEZ,QAAQ,CAAC,CAAA;AACnE,IAAA,OAAOc,WAAW,CACfyiB,YAAY,EAAE,CACdqB,gBAAgB,CAAC5kB,QAAQ,EAAE2kB,cAAc,EAAEF,cAAc,EAAEC,eAAe,EAAEngB,QAAQ,CAAC,CAAA;AAC1F,GAAA;AAEA,mHAAA;AAAA,EAAA,MAAA,CACAsgB,YAAY,GAAZ,SAAahkB,YAAAA,CAAAA,QAA2B,EAAA;IACtC,IAAkD,YAAA,GAAA,IAAI,CAACiB,KAAK;AAApD+R,MAAAA,MAAM,gBAANA,MAAM;AAAEhS,MAAAA,WAAW,gBAAXA,WAAW;AAAEjB,MAAAA,MAAM,gBAANA,MAAM;AAAE2D,MAAAA,QAAQ,gBAARA,QAAQ,CAAA;AAC7C,IAAA,IAAQmC,WAAW,GAAK,IAAI,CAAChG,KAAK,CAA1BgG,WAAW,CAAA;AACnB,IAAA,IAAMwB,OAAO,GAAG1D,YAAY,CAAUD,QAAQ,CAAC,CAAA;IAC/C,IAAMqV,iBAAiB,GAAG1U,WAAW,CAA+B,mBAAmB,EAAErE,QAAQ,EAAEqH,OAAO,CAAC,CAAA;AAE3G,IAAA,IAAI2L,MAAM,IAAIA,MAAM,CAAC7P,MAAM,EAAE;MAC3B,OACEmB,GAAA,CAACyU,iBAAiB,EAAA;AAChB/F,QAAAA,MAAM,EAAEA,MAAM;AACdhS,QAAAA,WAAW,EAAEA,WAAW,IAAI,EAAE;AAC9BjB,QAAAA,MAAM,EAAEA,MAAM;AACd2D,QAAAA,QAAQ,EAAEA,QAAQ;AAClBmC,QAAAA,WAAW,EAAEA,WAAW;AACxB7F,QAAAA,QAAQ,EAAEA,QAAAA;AAAQ,OAAA,CAClB,CAAA;AAEL,KAAA;AACD,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEA;;;;AAIG,MAJH;AAmMA;EAAA,MACAikB,CAAAA,WAAW,GAAX,SAAW,WAAA,GAAA;AAAA,IAAA,IAAA,qBAAA,CAAA;AACT,IAAA,IAAyBC,qBAAqB,GAAK,IAAI,CAACrkB,KAAK,CAArDoE,eAAe,CAAA;AACvB,IAAA,IAAQhE,WAAW,GAAK,IAAI,CAACgB,KAAK,CAA1BhB,WAAW,CAAA;AACnB,IAAA,IAAA,mBAAA,GAAqEogB,kBAAkB,EAAW;AAA1FnY,MAAAA,MAAM,uBAANA,MAAM;AAAEoM,MAAAA,SAAS,uBAATA,SAAS;AAAEnN,MAAAA,OAAO,uBAAPA,OAAO;AAAEtB,MAAAA,WAAW,uBAAXA,WAAW;AAAE5B,MAAAA,eAAe,uBAAfA,eAAe,CAAA;IAChE,OAAO;MACLiE,MAAM,EAAA,QAAA,CAAA,EAAA,EAAOA,MAAM,EAAK,IAAI,CAACrI,KAAK,CAACqI,MAAM,CAAE;AAC3CoM,MAAAA,SAAS,eACJA,SAAS,EACT,IAAI,CAACzU,KAAK,CAACyU,SAAS,EAAA;AACvBC,QAAAA,eAAe,EACVD,QAAAA,CAAAA,EAAAA,EAAAA,SAAS,CAACC,eAAe,EACzB,CAAA,qBAAA,GAAA,IAAI,CAAC1U,KAAK,CAACyU,SAAS,MAApB,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,qBAAA,CAAsBC,eAAe,CAAA;OAE3C,CAAA;MACDpN,OAAO,EAAA,QAAA,CAAA,EAAA,EAAOA,OAAO,EAAK,IAAI,CAACtH,KAAK,CAACsH,OAAO,CAAE;AAC9CmZ,MAAAA,UAAU,EAAE,IAAI,CAACzgB,KAAK,CAACE,MAAM;AAC7B8F,MAAAA,WAAW,EAAE,IAAI,CAAChG,KAAK,CAACgG,WAAW,IAAIA,WAAW;AAClD5F,MAAAA,WAAW,EAAXA,WAAW;MACXgE,eAAe,EAAEigB,qBAAqB,IAAIjgB,eAAAA;KAC3C,CAAA;AACH,GAAA;AAEA,oFAAA;EAAA,MACAkgB,CAAAA,MAAM,GAAN,SAAM,MAAA,GAAA;AACJ,IAAA,IAAI,IAAI,CAAC1D,WAAW,CAAC2D,OAAO,EAAE;MAC5B,IAAI,CAAC3D,WAAW,CAAC2D,OAAO,CAACC,aAAa,CACpC,IAAIC,WAAW,CAAC,QAAQ,EAAE;AACxBC,QAAAA,UAAU,EAAE,IAAA;AACb,OAAA,CAAC,CACH,CAAA;AACD,MAAA,IAAI,CAAC9D,WAAW,CAAC2D,OAAO,CAACI,aAAa,EAAE,CAAA;AACzC,KAAA;AACH,GAAA;AAEA;;;;;AAKG,MALH;AAAA,EAAA,MAAA,CAMAC,YAAY,GAAZ,SAAahN,YAAAA,CAAAA,KAA0B,EAAA;IACrC,IAAiD,YAAA,GAAA,IAAI,CAAC5X,KAAK;AAAA,MAAA,qBAAA,GAAA,YAAA,CAAnD4F,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,MAAM,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,YAAA,CAAEC,WAAW;AAAXA,MAAAA,WAAW,sCAAG,GAAG,GAAA,qBAAA,CAAA;AAC5C,IAAA,IAAQkV,QAAQ,GAAKnD,KAAK,CAAlBmD,QAAQ,CAAA;AAChB,IAAA,IAAMwG,IAAI,GAAGsD,OAAO,CAAC9J,QAAQ,CAAC,CAAA;AAC9B,IAAA,IAAIwG,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE,EAAE;AAClB;AACAA,MAAAA,IAAI,CAAC,CAAC,CAAC,GAAG3b,QAAQ,CAAA;AACnB,KAAA,MAAM;AACL;AACA2b,MAAAA,IAAI,CAACuD,OAAO,CAAClf,QAAQ,CAAC,CAAA;AACvB,KAAA;AAED,IAAA,IAAMmf,SAAS,GAAGxD,IAAI,CAAC/N,IAAI,CAAC3N,WAAW,CAAC,CAAA;IACxC,IAAIkL,KAAK,GAAG,IAAI,CAAC6P,WAAW,CAAC2D,OAAO,CAACS,QAAQ,CAACD,SAAS,CAAC,CAAA;IACxD,IAAI,CAAChU,KAAK,EAAE;AACV;MACAA,KAAK,GAAG,IAAI,CAAC6P,WAAW,CAAC2D,OAAO,CAACU,aAAa,CAAcF,YAAAA,GAAAA,SAAS,CAAG,CAAA;AACzE,KAAA;AACD,IAAA,IAAIhU,KAAK,EAAE;MACTA,KAAK,CAACmU,KAAK,EAAE,CAAA;AACd,KAAA;AACH,GAAA;AAEA;;;;AAIG,MAJH;EAAA,MAKAjC,CAAAA,YAAY,GAAZ,SAAY,YAAA,GAAA;IACV,IAAoD,YAAA,GAAA,IAAI,CAACjjB,KAAK;AAAtD6hB,MAAAA,WAAW,gBAAXA,WAAW;AAAEsD,MAAAA,iBAAiB,gBAAjBA,iBAAiB;AAAEC,MAAAA,OAAO,gBAAPA,OAAO,CAAA;AAC/C,IAAA,IAAQ9lB,QAAQ,GAAK,IAAI,CAAC8B,KAAK,CAAvB9B,QAAQ,CAAA;AAChB,IAAA,IAAQc,WAAW,GAAK,IAAI,CAACgB,KAAK,CAA1BhB,WAAW,CAAA;AACnB,IAAA,IAAMmiB,gBAAgB,GAAG,IAAI,CAACC,QAAQ,CAACljB,QAAQ,CAAC,CAAA;AAChD,IAAA,IAAI6T,MAAM,GAAGoP,gBAAgB,CAACpP,MAAM,CAAA;AACpC,IAAA,IAAIhS,WAAW,GAAGohB,gBAAgB,CAACphB,WAAW,CAAA;IAC9C,IAAMshB,sBAAsB,GAAGtP,MAAM,CAAA;IACrC,IAAMuP,2BAA2B,GAAGvhB,WAAW,CAAA;AAC/C,IAAA,IAAIgS,MAAM,CAAC7P,MAAM,GAAG,CAAC,EAAE;AACrB,MAAA,IAAIue,WAAW,EAAE;QACf,IAAMc,MAAM,GAAGviB,WAAW,CAACwiB,mBAAmB,CAACL,gBAAgB,EAAEV,WAAW,CAAC,CAAA;QAC7E1gB,WAAW,GAAGwhB,MAAM,CAACxhB,WAAW,CAAA;QAChCgS,MAAM,GAAGwP,MAAM,CAACxP,MAAM,CAAA;AACvB,OAAA;AACD,MAAA,IAAIgS,iBAAiB,EAAE;QACrB,IAAI,CAACP,YAAY,CAACrC,gBAAgB,CAACpP,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA;AAC9C,OAAA;MACD,IAAI,CAACtR,QAAQ,CACX;AACEsR,QAAAA,MAAM,EAANA,MAAM;AACNhS,QAAAA,WAAW,EAAXA,WAAW;AACXshB,QAAAA,sBAAsB,EAAtBA,sBAAsB;AACtBC,QAAAA,2BAA2B,EAA3BA,2BAAAA;AACD,OAAA,EACD,YAAK;AACH,QAAA,IAAI0C,OAAO,EAAE;UACXA,OAAO,CAACjS,MAAM,CAAC,CAAA;AAChB,SAAA,MAAM;AACLL,UAAAA,OAAO,CAAC8E,KAAK,CAAC,wBAAwB,EAAEzE,MAAM,CAAC,CAAA;AAChD,SAAA;AACH,OAAC,CACF,CAAA;AACD,MAAA,OAAO,KAAK,CAAA;AACb,KAAA;AACD,IAAA,OAAO,IAAI,CAAA;AACb,GAAA;AAEA;;AAEG,MAFH;EAAA,MAGAhP,CAAAA,MAAM,GAAN,SAAM,MAAA,GAAA;IACJ,IAoBI,YAAA,GAAA,IAAI,CAACnE,KAAK;AAnBZmJ,MAAAA,QAAQ,gBAARA,QAAQ;AACR1G,MAAAA,EAAE,gBAAFA,EAAE;AACFmD,MAAAA,QAAQ,gBAARA,QAAQ;AACRC,MAAAA,WAAW,gBAAXA,WAAW;AAAA,MAAA,qBAAA,GAAA,YAAA,CACXqB,SAAS;AAATA,MAAAA,SAAS,sCAAG,EAAE,GAAA,qBAAA;AACdme,MAAAA,OAAO,gBAAPA,OAAO;AACPhgB,MAAAA,IAAI,gBAAJA,IAAI;AACJigB,MAAAA,MAAM,gBAANA,MAAM;AACNjP,MAAAA,MAAM,gBAANA,MAAM;AACNuE,MAAAA,MAAM,gBAANA,MAAM;AACN2K,MAAAA,YAAY,gBAAZA,YAAY;AACZC,MAAAA,OAAO,gBAAPA,OAAO;AACPC,MAAAA,aAAa,gBAAbA,aAAa;AAAA,MAAA,qBAAA,GAAA,YAAA,CACbC,eAAe;AAAfA,MAAAA,eAAe,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,YAAA,CACvBpgB,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAAA,MAAA,qBAAA,GAAA,YAAA,CAChBC,QAAQ;AAARA,MAAAA,QAAQ,sCAAG,KAAK,GAAA,qBAAA;AAChBS,MAAAA,WAAW,gBAAXA,WAAW;AAAA,MAAA,qBAAA,GAAA,YAAA,CACX2f,aAAa;AAAbA,MAAAA,aAAa,sCAAG,KAAK,GAAA,qBAAA;AACrBC,MAAAA,oBAAoB,gBAApBA,oBAAoB,CAAA;IAGtB,IAA8D,YAAA,GAAA,IAAI,CAACxkB,KAAK;AAAhElB,MAAAA,MAAM,gBAANA,MAAM;AAAE2D,MAAAA,QAAQ,gBAARA,QAAQ;AAAEvE,MAAAA,QAAQ,gBAARA,QAAQ;AAAE6B,MAAAA,WAAW,gBAAXA,WAAW;AAAE2B,MAAAA,QAAQ,gBAARA,QAAQ,CAAA;AACzD,IAAA,IAAM3C,QAAQ,GAAG,IAAI,CAACikB,WAAW,EAAE,CAAA;AACnC,IAAA,IAAqB1Y,YAAY,GAAKvL,QAAQ,CAACkI,MAAM,CAA7CE,WAAW,CAAA;IACnB,IAAQwO,YAAY,GAAK5W,QAAQ,CAACsU,SAAS,CAACC,eAAe,CAAnDqC,YAAY,CAAA;AACpB;AACA;AACA;AACA,IAAA,IAAM8O,EAAE,GAAGD,oBAAoB,GAAGP,OAAO,GAAGtiB,SAAS,CAAA;AACrD,IAAA,IAAM+iB,OAAO,GAAGF,oBAAoB,IAAIP,OAAO,IAAI,MAAM,CAAA;IAEzD,OACE/Y,IAAC,CAAAwZ,OAAO;AACN5e,MAAAA,SAAS,EAAEA,SAAS,GAAGA,SAAS,GAAG,MAAM;AACzCzE,MAAAA,EAAE,EAAEA,EAAE;AACN4C,MAAAA,IAAI,EAAEA,IAAI;AACVigB,MAAAA,MAAM,EAAEA,MAAM;AACdjP,MAAAA,MAAM,EAAEA,MAAM;AACduE,MAAAA,MAAM,EAAEA,MAAM;AACd2K,MAAAA,YAAY,EAAEA,YAAY;AAC1BQ,MAAAA,OAAO,EAAEP,OAAO;AAChBQ,MAAAA,aAAa,EAAEP,aAAa;AAC5BzD,MAAAA,UAAU,EAAE0D,eAAe;MAC3B3C,QAAQ,EAAE,IAAI,CAACA,QAAQ;AACvB8C,MAAAA,EAAE,EAAEA,EAAE;MACNI,GAAG,EAAE,IAAI,CAACrF,WAAW;AAEpBzX,MAAAA,QAAA,EAAA,CAAAwc,aAAa,KAAK,KAAK,IAAI,IAAI,CAACxB,YAAY,CAAChkB,QAAQ,CAAC,EACvDsE,GAAC,CAAAiH,YAAY;AACXrG,QAAAA,IAAI,EAAC,EAAE;AACPnF,QAAAA,MAAM,EAAEA,MAAM;AACd2D,QAAAA,QAAQ,EAAEA,QAAQ;AAClB1C,QAAAA,WAAW,EAAEA,WAAW;AACxB2B,QAAAA,QAAQ,EAAEA,QAAQ;AAClB8C,QAAAA,QAAQ,EAAEA,QAAQ;AAClBC,QAAAA,WAAW,EAAEA,WAAW;AACxBG,QAAAA,WAAW,EAAEA,WAAW;AACxB1G,QAAAA,QAAQ,EAAEA,QAAQ;QAClB4B,QAAQ,EAAE,IAAI,CAACA,QAAQ;QACvBwE,MAAM,EAAE,IAAI,CAACA,MAAM;QACnBC,OAAO,EAAE,IAAI,CAACA,OAAO;AACrBxF,QAAAA,QAAQ,EAAEA,QAAQ;AAClBmF,QAAAA,QAAQ,EAAEA,QAAQ;AAClBC,QAAAA,QAAQ,EAAEA,QAAAA;QACV,EACD4D,QAAQ,GAAGA,QAAQ,GAAG1E,GAAC,CAAAsS,YAAY;AAAClT,QAAAA,QAAQ,EAAEA,QAAQ;AAAE1D,QAAAA,QAAQ,EAAEA,QAAAA;OAAQ,CAAI,EAC9EwlB,aAAa,KAAK,QAAQ,IAAI,IAAI,CAACxB,YAAY,CAAChkB,QAAQ,CAAC,CAAA;AAAA,KAAA,CAClD,CAAA;GAEb,CAAA;AAAA,EAAA,OAAA,IAAA,CAAA;AAAA,CAAA,CAxiBOuJ,SAAiD;;;ACtO3D;AACwB,SAAAwc,SAAS,CAC/BC,UAA+B,EAAA;AAE/B,EAAA,oBAAOC,UAAU,CACf,UAAqEH,IAAAA,EAAAA,GAAgC,EAAI;AAAA,IAAA,IAAA,qBAAA,EAAA,UAAA,CAAA;IAAA,IAAtG5d,MAAM,QAANA,MAAM;AAAEf,MAAAA,OAAO,QAAPA,OAAO;AAAEmN,MAAAA,SAAS,QAATA,SAAS;MAAK4R,WAAW,GAAA,6BAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;IAC3Che,MAAM,GAAA,QAAA,CAAA,EAAA,EAAQ8d,UAAU,KAAA,IAAA,IAAVA,UAAU,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAVA,UAAU,CAAE9d,MAAM,EAAKA,MAAM,CAAE,CAAA;IAC7Cf,OAAO,GAAA,QAAA,CAAA,EAAA,EAAQ6e,UAAU,KAAA,IAAA,IAAVA,UAAU,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAVA,UAAU,CAAE7e,OAAO,EAAKA,OAAO,CAAE,CAAA;IAChDmN,SAAS,GAAA,QAAA,CAAA,EAAA,EACJ0R,UAAU,KAAVA,IAAAA,IAAAA,UAAU,uBAAVA,UAAU,CAAE1R,SAAS,EACrBA,SAAS,EAAA;AACZC,MAAAA,eAAe,EACVyR,QAAAA,CAAAA,EAAAA,EAAAA,UAAU,KAAVA,IAAAA,IAAAA,UAAU,gDAAVA,UAAU,CAAE1R,SAAS,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAArB,sBAAuBC,eAAe,EAAA,CAAA,UAAA,GACtCD,SAAS,MAAA,IAAA,IAAA,UAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAT,WAAWC,eAAe,CAAA;KAEhC,CAAA,CAAA;AAED,IAAA,OACEjQ,GAAC,CAAAkc,IAAI,EACCwF,QAAAA,CAAAA,EAAAA,EAAAA,UAAU,EACVE,WAAW,EAAA;AACfhe,MAAAA,MAAM,EAAEA,MAAM;AACdf,MAAAA,OAAO,EAAEA,OAAO;AAChBmN,MAAAA,SAAS,EAAEA,SAAS;AACpBwR,MAAAA,GAAG,EAAEA,GAAAA;KACL,CAAA,CAAA,CAAA;AAEN,GAAC,CACF,CAAA;AACH;;;;"}